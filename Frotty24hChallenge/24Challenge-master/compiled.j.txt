// this script was compiled with wurst 1.1.0.9.b54e450
globals
hashtable Table_ht
integer Trigger_triggerData
player array Player_get
string LocalFileTest_FLAG_FOLDER
string LocalFileTest_FLAG_FILE
boolean LocalFileTest_success
string File_SAVE_GAME_FOLDER
integer File_MAX_LINE_LENGTH
hashtable File_stringTable
string array File_mapName
string array File_fileName
string array File_data
integer array File_fileIndex
integer array File_dataIndex
integer array File_flag
string array File_extra0
string array File_pname
integer array File_endPos
timer array TimerUtils_freeTimers
integer TimerUtils_freeTimersCount
integer TimerUtils_timerData
integer TimerUtils_HELD
boolean array PrintingHelper_wantDebug
integer PrintingHelper_DEBUG_LEVEL
real PrintingHelper_DEBUG_MSG_DURATION
integer PrintingHelper_msgcount
string array PrintingHelper_texts
real Maths_PI
real Maths_PI2
real Maths_PIHALF
real Maths_DEGTORAD
real Maths_RADTODEG
integer array LinkedList_dummy
integer array LinkedList_size
integer array LLEntry_elem
integer array LLEntry_prev
integer array LLEntry_next
integer array LLIterator_dummy
integer array LLIterator_current
string array Char_c2s
integer array Char_s2c
integer array Char_width
integer Char_MAX_INDEX
integer Char_DEFAULT_WIDTH
string Char_DEFAULT_STRING
string String_charset
string String_numberset
integer String_numbersetlength
integer String_charsetlength
string array StringIterator_s
integer array StringIterator_currentpos
integer array StringIterator_stringLen
string array StringLines_s
integer array StringLines_currentLine
integer array StringLines_lineCount
integer array StringLines_lastIndex
rect MapBounds_mapRect
real MapBounds_mapMinX
real MapBounds_mapMinY
real MapBounds_mapMaxX
real MapBounds_mapMaxY
real MapBounds_mapCenter_x
real MapBounds_mapCenter_y
real Terrain_MAX_RANGE
integer Terrain_DUMMY_ITEM_ID
location Terrain_tempLoc
item Terrain_dItem
rect Terrain_find
item array Terrain_hid
integer Terrain_hidMax
real Terrain_tempPos_x
real Terrain_tempPos_y
integer array W3UDefinition_def
integer Basics_DUMMY_UNIT_ID
integer Basics_HEIGHT_ENABLER
integer Basics_TREE_RECOGNITION
integer Basics_LOCUST_ID
real Basics_ANIMATION_PERIOD
real Basics_MAX_COLLISION_SIZE
player Basics_DUMMY_PLAYER
player Basics_DUMMY_HOSTILE_PLAYER
integer Rect_sourceTable
integer Rect_regionData
timer array Camera_noiseTimer
integer TypeCasting_typecastdata
integer array BigNum_l_leaf
integer array BigNum_l_next
integer BigNum_l_count
integer array BigNum_list
integer array BigNum_base
group TempGroups_ENUM_GROUP
player GameConstants_TEAM_ONE_CPU
player GameConstants_TEAM_TWO_CPU
real GameConstants_gravity_x
real GameConstants_gravity_y
real GameConstants_gravity_z
string array GameConstants_colorcode
integer GameConstants_cplayerCount
string GameConstants_MAP_VER
integer MultiboardClass_counter
multiboard array Board_board
integer array Board_mbdata
integer array Board_rows
integer array Board_columns
string array MBItem_value
string array MBItem_iconPath
real array Entity_pos
real array Entity_pos_2
real array Entity_pos_3
real array Entity_vel
real array Entity_vel_2
real array Entity_vel_3
real array Entity_radius
real array Entity_speedFactor
player array Entity_owner
boolean array Entity_isStatic
boolean array Entity_active
boolean array Entity_done
integer LinkedListModule_first
integer LinkedListModule_last
integer LinkedListModule_size
integer array LinkedListModule_prev
integer array LinkedListModule_next
unit array UnitEntity_actor
boolean array PhysicalUnitEntity_flying
real array PhysicalUnitEntity_terrainZ
string ObjectIds_charMap
boolean PreloadHandler_autoFinish
group PreloadHandler_dumg
unit PreloadHandler_dum
integer PreloadList_unitIds
integer PreloadList_spellIds
integer array FxEntity_fx
real array Projectile_xyAngle
real array Projectile_zAngle
boolean array Projectile_timed
boolean array Projectile_ranged
real array Projectile_speed
real array Projectile_dist
real array Projectile_maxDist
real array Projectile_time
real array Projectile_maxTime
integer CollisionModule_temp
conditionfunc CollisionModule_enumFilter
unit array MirrorRocket_sample
real array MirrorRocket_facing
real array MirrorRocket_spd
real array MirrorRocket_dmg
timer GameTimer_gameTimer
integer DummyRecycler_ANG_N
integer DummyRecycler_ANG_STORAGE_MAX
real DummyRecycler_DEATH_TIME
integer DummyRecycler_ANG_VAL
integer DummyRecycler_ANG_MID
unit array DummyRecycler_stack
integer array DummyRecycler_stackN
real array DummyRecycler_timeStamp
integer array DummyRecycler_queueNext
integer array DummyRecycler_queueLast
integer DummyRecycler_recycle
group DummyRecycler_protect
unit array DelayData_dum
real array DelayData_dT
integer LinkedListModule_first_2
integer LinkedListModule_last_2
integer LinkedListModule_size_2
integer array LinkedListModule_prev_2
integer array LinkedListModule_next_2
integer DummyCaster_INITIAL_DUMMY_COUNT
integer DummyCaster_DUMMY_STACK_LIMIT
boolean DummyCaster_FORCE_INVISIBLE_CAST
boolean DummyCaster_AUTO_RESET_MANA_COOLDOWN
integer array DummyCaster_abilityId
integer array DummyCaster_level
player array DummyCaster_owningplayer
integer array DummyCaster_orderId
real array DummyCaster_recycleDelay
boolean array DummyCaster_customSource
real array DummyCaster_customPos
real array DummyCaster_customPos_2
real array DummyCaster_customPos_3
boolean array DummyCaster_autodestroy
group DummyCaster_enumgroup
real DummyCaster_aoex
real DummyCaster_aoey
real DummyCaster_aoeradius
integer DummyCaster_cinstance
boolexpr DummyCaster_aoefunc
integer Ring_BUFF_INSIDE
integer Ring_BUFF_ID
integer array Ring_unitsinside
integer array Ring_lts
real array Ring_duration
integer MimicHero_MIRROR_ROCKET_ID
integer MimicHero_REVERSE_ROUTING_ID
integer MimicHero_FLIPCIRCLE_ID
integer MimicHero_RR_DUMMY_ID
integer MimicHero_MIMIC_HERO_ID
real array Hero_lastPos
real array Hero_lastPos_2
real array Hero_lastPos_3
boolean array Hero_userorder
trigger Hero_castTrig
trigger Hero_channelTrig
trigger Hero_orderTrig
trigger Hero_deathTrig
real array Mimic_rr_temp
real array Mimic_rr_temp_2
trigger HeroPick_buyTrig
integer array Stack_dummy
integer array Stack_top
integer array Stack_size
integer array SEntry_elem
integer array SEntry_prev
integer array SIterator_dummy
integer array SIterator_current
boolean SoundHelper_DEFAULT_SOUND_STOPS_ON_LEAVE_RANGE
integer SoundHelper_DEFAULT_SOUND_FADE_IN_RATE
integer SoundHelper_DEFAULT_SOUND_FADE_OUT_RATE
string SoundHelper_DEFAULT_SOUND_EAX_SETTINGS
integer SoundHelper_DEFAULT_SOUND_VOLUME
real SoundHelper_DEFAULT_SOUND_PITCH
integer SoundHelper_SOUND_CHANNEL
real SoundHelper_SOUND_MIN_DIST
real SoundHelper_SOUND_MAX_DIST
real SoundHelper_SOUND_DIST_CUT
sound array SData_snd
integer array SData_soundData
unit array SData_onUnit
integer array Sound_soundStack
string array Sound_file
integer array Sound_duration
boolean array Sound_looping
boolean array Sound_is3D
boolean array Sound_stopOnLeaveRange
integer array Sound_fadeIn
integer array Sound_fadeOut
string array Sound_eaxSetting
integer array Hero_killSounds
integer Hero_intPool
integer Hero_BUFF_REVERSE_MOVEMENT
integer PlayerData_playercount
trigger PlayerData_leaveTrig
integer PlayerData_players
integer array PlayerData_id
integer array PlayerData_gameId
player array PlayerData_p
string array PlayerData_name
string array PlayerData_mbname
string array PlayerData_icon
boolean array PlayerData_left
unit array PlayerData_pickdum
integer array PlayerData_deaths
integer array PlayerData_XP
effect array PlayerData_lvlfx
timerdialog array PlayerData_td
timer array PlayerData_tim
integer array PlayerData_hero
boolean array PlayerData_picked
boolean array PlayerData_camLock
integer PlayerData_playerboard
integer array PlayerData_pData
integer PlayerData_minutes
integer PlayerData_seconds
integer Debug_entityCount
integer Debug_currentEntityCount
integer Debug_unitEntityCount
integer Debug_debugBoard
string array Colors_hexs
integer Colors_decs
integer array Colors_playercolors
integer array Colors_playercolors_2
integer array Colors_playercolors_3
unit array Fx_dummy
effect array Fx_fx
real array Fx_zAngle
string array Fx_sfxPath
integer array Fx_col
integer array Fx_col_2
integer array Fx_col_3
integer array Fx_col_4
integer Entity_BUFF_REFLECT_ID
real CustomExp_RADIUS
real CustomExp_CLOSE
real CustomExp_MEDIUM
real CustomExp_FAR
real CustomExp_CLOSE_FACTOR
real CustomExp_MEDIUM_FACTOR
real CustomExp_FAR_FACTOR
integer CustomExp_UNIT_EXP
integer CustomExp_HERO_EXP
integer CustomExp_BONUS_EXP
real CustomExp_DURATION
real CustomExp_SIZE
integer CustomExp_RED
integer CustomExp_GREEN
integer CustomExp_BLUE
boolean CustomExp_SHOW_TEXT
boolean CustomExp_SPLIT
boolean CustomExp_DISTANCE_EFFECT
trigger Creep_deathTrig
integer CreepNode_node_color_left
integer CreepNode_node_color_right
integer CreepNode_node_bw_left
integer CreepNode_node_bw_right
real CreepNode_color_Main_x
real CreepNode_color_Main_y
real CreepNode_bw_Main_x
real CreepNode_bw_Main_y
real array CreepNode_target
real array CreepNode_target_2
unit array CreepNode_inrangeDummy
player array CreepNode_creepOwner
trigger array CreepNode_t
integer CreepSpawn_color_left_spawn
integer CreepSpawn_color_right_spawn
integer CreepSpawn_bw_left_spawn
integer CreepSpawn_bw_right_spawn
integer CreepSpawn_MELEE_ID
integer CreepSpawn_RANGED_ID
code CreepSpawn_spawnUnitsCall
real array Spawner_pos
real array Spawner_pos_2
real array Spawner_pos_3
unit array Spawner_spawnDummy
integer array Spawner_target
player array Spawner_owner
timer array Spawner_spawnTimer
integer array Spawner_spawnCount
integer array Spawner_meleeCount
integer array Spawner_rangedCount
real array Spawner_timeout
trigger CreepSpawn_deathTrig
integer Round_roundCount
boolean Round_gameRunning
boolean Round_warmupRunning
real Round_WARUMP_TIME
trigger Round_warmupColorTrig
trigger Round_warmupBWTrig
rect gg_rct_warmupColor
rect gg_rct_warmupBW
camerasetup gg_cam_InitCam
camerasetup gg_cam_BWStartCam
camerasetup gg_cam_ColorStartCam
sound gg_snd_QuestFailed
sound gg_snd_almostKillingspree
sound gg_snd_fuckedUp
sound gg_snd_killFrenzy
sound gg_snd_nein
sound gg_snd_SerbianXaXa
sound gg_snd_stopMe
sound gg_snd_toasted
sound gg_snd_youSuck
trigger gg_trg_Untitled_Trigger_001
trigger gg_trg_Untitled_Trigger_006
trigger gg_trg_Untitled_Trigger_004
trigger gg_trg_Untitled_Trigger_005
trigger gg_trg_Untitled_Trigger_002
trigger gg_trg_Untitled_Trigger_003
trigger gg_trg_Untitled_Trigger_003_Copy
unit gg_unit_h000_0000
unit gg_unit_h001_0001
unit gg_unit_e001_0009
unit gg_unit_e001_0011
unit gg_unit_e001_0012
unit gg_unit_e001_0013
unit gg_unit_e002_0014
unit gg_unit_e002_0015
unit gg_unit_e002_0016
unit gg_unit_e002_0017
integer array HomingProjectile_htype
integer array HomingProjectile_target
real array HomingProjectile_homingSpeed
integer array Explosive_model
real array Explosive_radius
real array Explosive_power
boolean array Explosive_activated
boolean array Explosive_timed
real array Explosive_timeout
trigger Victory_deathTrig
integer array AbilityDefinition_def
integer DamageMod_DAMAGE_ABIL_ID
real DamageMod_MAX_HP_GAINED
timer DamageMod_tim
unit DamageMod_currentDamager
real DamageMod_lifeMod
integer DamageMod_N
real array DamageMod_damageArray
unit array DamageMod_damagedArray
unit array DamageMod_damagerArray
trigger array DamageMod_trig
boolean array DamageMod_applied
real Init_startpos_x
real Init_startpos_y
string Init_msg
real Init_farz
trigger EntityAttackDetection_currentDmgTrig
trigger EntityAttackDetection_toDestroy
integer array Table_nextFree
integer Table_firstFree
integer Table_maxIndex
integer array Table_typeId
integer array Player_nextFree
integer Player_firstFree
integer Player_maxIndex
integer array Player_typeId
integer array LocalFileTest_nextFree
integer LocalFileTest_firstFree
integer LocalFileTest_maxIndex
integer array LocalFileTest_typeId
integer array File_nextFree
integer File_firstFree
integer File_maxIndex
integer array File_typeId
integer array LinkedList_nextFree
integer LinkedList_firstFree
integer LinkedList_maxIndex
integer array LinkedList_typeId
integer array LLEntry_nextFree
integer LLEntry_firstFree
integer LLEntry_maxIndex
integer array LLEntry_typeId
integer array LLIterator_nextFree
integer LLIterator_firstFree
integer LLIterator_maxIndex
integer array LLIterator_typeId
integer array LinkedListPredicate_nextFree
integer LinkedListPredicate_firstFree
integer LinkedListPredicate_maxIndex
integer array LinkedListPredicate_typeId
integer array LinkedListUpdater_nextFree
integer LinkedListUpdater_firstFree
integer LinkedListUpdater_maxIndex
integer array LinkedListUpdater_typeId
integer array StringIterator_nextFree
integer StringIterator_firstFree
integer StringIterator_maxIndex
integer array StringIterator_typeId
integer array StringLines_nextFree
integer StringLines_firstFree
integer StringLines_maxIndex
integer array StringLines_typeId
integer array W3UDefinition_nextFree
integer W3UDefinition_firstFree
integer W3UDefinition_maxIndex
integer array W3UDefinition_typeId
integer array BigNum_l_nextFree
integer BigNum_l_firstFree
integer BigNum_l_maxIndex
integer array BigNum_l_typeId
integer array BigNum_nextFree
integer BigNum_firstFree
integer BigNum_maxIndex
integer array BigNum_typeId
integer array Board_nextFree
integer Board_firstFree
integer Board_maxIndex
integer array Board_typeId
integer array MBItem_nextFree
integer MBItem_firstFree
integer MBItem_maxIndex
integer array MBItem_typeId
integer array Entity_nextFree
integer Entity_firstFree
integer Entity_maxIndex
integer array Entity_typeId
integer array DelayData_nextFree
integer DelayData_firstFree
integer DelayData_maxIndex
integer array DelayData_typeId
integer array DummyCaster_nextFree
integer DummyCaster_firstFree
integer DummyCaster_maxIndex
integer array DummyCaster_typeId
integer array Stack_nextFree
integer Stack_firstFree
integer Stack_maxIndex
integer array Stack_typeId
integer array SEntry_nextFree
integer SEntry_firstFree
integer SEntry_maxIndex
integer array SEntry_typeId
integer array SIterator_nextFree
integer SIterator_firstFree
integer SIterator_maxIndex
integer array SIterator_typeId
integer array SData_nextFree
integer SData_firstFree
integer SData_maxIndex
integer array SData_typeId
integer array Sound_nextFree
integer Sound_firstFree
integer Sound_maxIndex
integer array Sound_typeId
integer array PlayerData_nextFree
integer PlayerData_firstFree
integer PlayerData_maxIndex
integer array PlayerData_typeId
integer array Fx_nextFree
integer Fx_firstFree
integer Fx_maxIndex
integer array Fx_typeId
integer array CreepNode_nextFree
integer CreepNode_firstFree
integer CreepNode_maxIndex
integer array CreepNode_typeId
integer array Spawner_nextFree
integer Spawner_firstFree
integer Spawner_maxIndex
integer array Spawner_typeId
integer array AbilityDefinition_nextFree
integer AbilityDefinition_firstFree
integer AbilityDefinition_maxIndex
integer array AbilityDefinition_typeId
real vec3_rotate_return_x
real vec3_rotate_return_y
real vec3_rotate_return_z
real angle_toVec_return_x
real angle_toVec_return_y
real vec3_op_plus_return_x
real vec3_op_plus_return_y
real vec3_op_plus_return_z
real vec2_op_plus_return_x
real vec2_op_plus_return_y
real item_getPos_return_x
real item_getPos_return_y
real vec3_op_plus_return_x_2
real vec3_op_plus_return_y_2
real vec3_op_plus_return_z_2
real vec3_op_mult_return_x
real vec3_op_mult_return_y
real vec3_op_mult_return_z
real vec3_toVec2_return_x
real vec3_toVec2_return_y
real vec3_op_minus_return_x
real vec3_op_minus_return_y
real vec3_op_minus_return_z
real vec2_toVec3_return_x
real vec2_toVec3_return_y
real vec2_toVec3_return_z
real vec3_setLength_return_x
real vec3_setLength_return_y
real vec3_setLength_return_z
real unit_getPos_return_x
real unit_getPos_return_y
real vec2_op_minus_return_x
real vec2_op_minus_return_y
real unit_getPos3fake_return_x
real unit_getPos3fake_return_y
real unit_getPos3fake_return_z
integer fromPlayerColor_return_red
integer fromPlayerColor_return_green
integer fromPlayerColor_return_blue
real vec2_withZ_return_x
real vec2_withZ_return_y
real vec2_withZ_return_z
real vec2_polarOffset_return_x
real vec2_polarOffset_return_y
real vec2_setLength_return_x
real vec2_setLength_return_y
real vec2_op_mult_return_x
real vec2_op_mult_return_y
real vec3_project_return_x
real vec3_project_return_y
real vec3_project_return_z
real Fx_getPos2_return_x
real Fx_getPos2_return_y
real angle_direction_return_x
real angle_direction_return_y
real vec3_op_minus_return_x_2
real vec3_op_minus_return_y_2
real vec3_op_minus_return_z_2
real vec3_addReals_return_x
real vec3_addReals_return_y
real vec3_addReals_return_z
real vec3_scaleXY_return_x
real vec3_scaleXY_return_y
real vec3_scaleXY_return_z
real vec3_cross_return_x
real vec3_cross_return_y
real vec3_cross_return_z
real vec3_norm_return_x
real vec3_norm_return_y
real vec3_norm_return_z
real vec3_trim_return_x
real vec3_trim_return_y
real vec3_trim_return_z
real vec3_rotate_return_x_2
real vec3_rotate_return_y_2
real vec3_rotate_return_z_2
real vec3_offset2d_return_x
real vec3_offset2d_return_y
real vec3_offset2d_return_z
real vec3_polarProject_return_x
real vec3_polarProject_return_y
real vec3_polarProject_return_z
real vec2_addReals_return_x
real vec2_addReals_return_y
real vec2_norm_return_x
real vec2_norm_return_y
real vec2_trim_return_x
real vec2_trim_return_y
real vec2_isInRange_return_v_x
real vec2_isInRange_return_v_y
real vec2_isInRange_return_range
real randomPointOnMap_return_x
real randomPointOnMap_return_y
real getTerrainNormal_return_x
real getTerrainNormal_return_y
real getTerrainNormal_return_z
real vec2_withTerrainZ_return_x
real vec2_withTerrainZ_return_y
real vec2_withTerrainZ_return_z
real rect_getCenter_return_x
real rect_getCenter_return_y
real rect_getLeftTop_return_x
real rect_getLeftTop_return_y
real rect_getRightTop_return_x
real rect_getRightTop_return_y
real rect_getLeftBot_return_x
real rect_getLeftBot_return_y
real rect_getRightBot_return_x
real rect_getRightBot_return_y
real linear_return_x
real linear_return_y
real bezier_3_return_x
real bezier_3_return_y
integer color_withAlpha_return_red
integer color_withAlpha_return_green
integer color_withAlpha_return_blue
integer color_withAlpha_return_alpha
integer fromHexString_return_red
integer fromHexString_return_green
integer fromHexString_return_blue
integer fromHexString_return_alpha
integer makeColor_return_red
integer makeColor_return_green
integer makeColor_return_blue
integer makeColor_return_alpha
integer fromPlayer_return_red
integer fromPlayer_return_green
integer fromPlayer_return_blue
integer colorA_mix_return_red
integer colorA_mix_return_green
integer colorA_mix_return_blue
integer colorA_mix_return_alpha
real getPathingNormal_return_x
real getPathingNormal_return_y
real getBounceVec_return_x
real getBounceVec_return_y
real dispatch_Fx_getPos2_return_x
real dispatch_Fx_getPos2_return_y
unit group_nexttempReturn
unit DummyCaster_createDummyCastertempReturn
texttag createTTExtempReturn
texttag createTTExtempReturn_2
texttag createTTExtempReturn_3
texttag createTTExtempReturn_4
player dispatch_Table_loadPlayertempReturn
widget dispatch_Table_loadWidgettempReturn
unit dispatch_Table_loadUnittempReturn
destructable dispatch_Table_loadDestructabletempReturn
item dispatch_Table_loadItemtempReturn
ability dispatch_Table_loadAbilitytempReturn
force dispatch_Table_loadForcetempReturn
group dispatch_Table_loadGrouptempReturn
trigger dispatch_Table_loadTriggertempReturn
timer dispatch_Table_loadTimertempReturn
location dispatch_Table_loadLocationtempReturn
region dispatch_Table_loadRegiontempReturn
rect dispatch_Table_loadRecttempReturn
sound dispatch_Table_loadSoundtempReturn
effect dispatch_Table_loadEffecttempReturn
fogstate dispatch_Table_loadFogStatetempReturn
dialog dispatch_Table_loadDialogtempReturn
button dispatch_Table_loadButtontempReturn
quest dispatch_Table_loadQuesttempReturn
leaderboard dispatch_Table_loadLeaderboardtempReturn
multiboard dispatch_Table_loadMultiboardtempReturn
trackable dispatch_Table_loadTrackabletempReturn
lightning dispatch_Table_loadLightningtempReturn
image dispatch_Table_loadImagetempReturn
ubersplat dispatch_Table_loadUbersplattempReturn
unit dispatch_FxEntity_getDummytempReturn
unit dispatch_DummyCaster_createDummyCastertempReturn
player dispatch_Fx_getOwnertempReturn
unit dispatch_Fx_getDummytempReturn
code ref_function_IssueHauntOrderAtLocBJFilter
code ref_function_EnumDestructablesInCircleBJFilter
code ref_function_GetUnitsInRectOfPlayerFilter
code ref_function_GetUnitsOfTypeIdAllFilter
code ref_function_GetUnitsOfPlayerAndTypeIdFilter
code ref_function_MeleeTrainedUnitIsHeroBJFilter
code ref_function_LivingPlayerUnitsOfTypeIdFilter
code ref_function_QueuedTriggerDoneBJ
code ref_function_SetDNCSoundsDawn
code ref_function_SetDNCSoundsDusk
code ref_function_SetDNCSoundsDay
code ref_function_SetDNCSoundsNight
code ref_function_StartStockUpdates
code ref_function_RemovePurchasedItem
code ref_function_MarkGameStarted
code ref_function_PerformStockUpdates
code ref_function_UpdateEachStockBuildingEnum
code ref_function_DelayedSuspendDecay
code ref_function_MeleeTriggerTournamentFinishSoon
code ref_function_MeleeTriggerTournamentFinishNow
code ref_function_MeleeTriggerActionConstructCancel
code ref_function_MeleeTriggerActionUnitDeath
code ref_function_MeleeTriggerActionUnitConstructionStart
code ref_function_MeleeTriggerActionPlayerDefeated
code ref_function_MeleeTriggerActionPlayerLeft
code ref_function_MeleeTriggerActionAllianceChange
code ref_function_MeleeTriggerActionPlayerLeft_2
code ref_function_MeleeTriggerActionAllianceChange_2
code ref_function_MeleeDoDrawEnum
code ref_function_MeleeDoDefeatEnum
code ref_function_MeleeDoVictoryEnum
code ref_function_MeleeDoDefeatEnum_2
code ref_function_MeleeDoVictoryEnum_2
code ref_function_MeleeCrippledPlayerTimeout
code ref_function_MeleeEnumFindNearestMine
code ref_function_MeleeClearExcessUnit
code ref_function_MeleeGrantItemsToTrainedHero
code ref_function_MeleeGrantItemsToHiredHero
code ref_function_SetPlayerColorBJEnum
code ref_function_TriggerActionUnitRescuedBJ
code ref_function_MakeUnitRescuableToForceBJEnum
code ref_function_FinishCinematicFadeBJ
code ref_function_ContinueCinematicFadeBJ
code ref_function_SetCineModeVolumeGroupsImmediateBJ
code ref_function_CancelCineSceneBJ
code ref_function_CustomDefeatRestartBJ
code ref_function_CustomDefeatReduceDifficultyBJ
code ref_function_CustomDefeatLoadBJ
code ref_function_CustomDefeatQuitBJ
code ref_function_CustomVictoryOkBJ
code ref_function_CustomVictoryQuitBJ
code ref_function_MakeUnitsPassiveForPlayerEnum
code ref_function_CountUnitsInGroupEnum
code ref_function_GetRandomSubGroupEnum
code ref_function_CountPlayersInForceEnum
code ref_function_GroupAddGroupEnum
code ref_function_ForcePickRandomPlayerEnum
code ref_function_GroupPickRandomUnitEnum
code ref_function_GroupRemoveGroupEnum
code ref_function_NearbyElevatorExistsEnum
code ref_function_FindElevatorWallBlockerEnum
code ref_function_NudgeUnitsInRectEnum
code ref_function_NudgeItemsInRectEnum
code ref_function_RandomDestructableInRectBJEnum
code ref_function_PauseAllUnitsBJEnum
code ref_function_WakePlayerUnitsEnum
code ref_function_IsUnitGroupInRectBJEnum
code ref_function_IsUnitGroupEmptyBJEnum
code ref_function_IsUnitGroupDeadBJEnum
code ref_function_SelectGroupBJEnum
code ref_function_SelectGroupBJEnum_2
code ref_function_DelayedSuspendDecayStopAnimEnum
code ref_function_DelayedSuspendDecayStopAnimEnum_2
code ref_function_DelayedSuspendDecayFleshEnum
code ref_function_DelayedSuspendDecayBoneEnum
code ref_function_DelayedSuspendDecayStopAnimEnum_3
code ref_function_GetLastCreatedGroupEnum
code ref_function_RandomItemInRectBJEnum
code ref_function_VolumeGroupResetImmediateBJ
code ref_function_SetSpeechVolumeGroupsImmediateBJ
code ref_function_RegisterDestDeathInRegionEnum
code ref_function_GroupAddGroupEnum_2
code ref_function_hideItem
code ref_function_resetCam
code ref_function_resetCam_2
code ref_function_resetCam_3
code ref_function_preloadSpells
code ref_function_Sound_playSound
code ref_function_Sound_recycle
code ref_function_Sound_playSound_2
code ref_function_Sound_playSound_3
code ref_function_Sound_playSound_4
code ref_function_revive
code ref_function_playerLeft
code ref_function_setTime
code ref_function_updateBoard
code ref_function_filter
code ref_function_CountUnitsInGroupEnum_2
code ref_function_CreepNode_orderAttack
code ref_function_Spawner_spawnMelee
code ref_function_Spawner_spawnMelee_2
code ref_function_Spawner_spawnRanged
code ref_function_Spawner_spawnRanged_2
code ref_function_Spawner_spawnUnits
code ref_function_leaveWarmupColor
code ref_function_leaveWarmupBW
code ref_function_finishWarmup
code ref_function_Trig_Untitled_Trigger_001_Actions
code ref_function_Trig_Untitled_Trigger_006_Actions
code ref_function_Trig_Untitled_Trigger_004_Actions
code ref_function_Trig_Untitled_Trigger_005_Actions
code ref_function_Trig_Untitled_Trigger_002_Actions
code ref_function_Trig_Untitled_Trigger_003_Actions
code ref_function_Trig_Untitled_Trigger_003_Copy_Actions
code ref_function_applyDamageMod
code ref_function_forced
code ref_function_updateEntities
code ref_function_updateBoard_2
code ref_function_LocalFileTest_onInit
code ref_function_activateDebug
code ref_function_finishPreload
code ref_function_CollisionModule_enumFilter
code ref_function_checkDelayed
code ref_function_DummyCaster_filterAOE
code ref_function_Hero_evaluateCast
code ref_function_Hero_evaluateFinish
code ref_function_Hero_evaluateOrder
code ref_function_onHeroDeath
code ref_function_onHeroBuy
code ref_function_initPlayers
code ref_function_giveXP
code ref_function_disableXpGain
code ref_function_onDeath
code ref_function_Spawner_spawnUnits_2
code ref_function_onSpawnDeath
code ref_function_onDeath_2
code ref_function_initPreload
code ref_function_preloadNote
code ref_function_onDamageEvent
endglobals
function CreateNeutralPassive takes nothing returns nothing
	local player p = Player(PLAYER_NEUTRAL_PASSIVE)
	local unit u
	local integer unitID
	local trigger t
	local real life
	set gg_unit_e001_0009 = CreateUnit(p, 1697656881,  - 1578.6, 1068.3, 66.190)
	set gg_unit_e001_0011 = CreateUnit(p, 1697656881, 1680.5,  - 1579.0, 48.460)
	set gg_unit_e001_0012 = CreateUnit(p, 1697656881, 1521.0,  - 1718.5, 284.080)
	set gg_unit_e001_0013 = CreateUnit(p, 1697656881,  - 1734.2, 845.5, 126.630)
	set p = null
	set u = null
	set t = null
endfunction

function CreateBuildingsForPlayer0 takes nothing returns nothing
	local player p = Player(0)
	local unit u
	local integer unitID
	local trigger t
	local real life
	set gg_unit_h000_0000 = CreateUnit(p, 1747988528,  - 2048.0,  - 2560.0, 270.000)
	set gg_unit_e002_0014 = CreateUnit(p, 1697656882,  - 1600.0,  - 2496.0, 270.000)
	set gg_unit_e002_0015 = CreateUnit(p, 1697656882,  - 2112.0,  - 2112.0, 270.000)
	set u = CreateUnit(p, 1697656884,  - 1632.0,  - 2080.0, 270.000)
	set u = CreateUnit(p, 1697656884, 160.0,  - 2464.0, 270.000)
	set u = CreateUnit(p, 1697656884,  - 2144.0,  - 416.0, 270.000)
	set p = null
	set u = null
	set t = null
endfunction

function CreateBuildingsForPlayer6 takes nothing returns nothing
	local player p = Player(6)
	local unit u
	local integer unitID
	local trigger t
	local real life
	set gg_unit_h001_0001 = CreateUnit(p, 1747988529, 2112.0, 2112.0, 270.000)
	set gg_unit_e002_0016 = CreateUnit(p, 1697656882, 1472.0, 2048.0, 270.000)
	set gg_unit_e002_0017 = CreateUnit(p, 1697656882, 2176.0, 1472.0, 270.000)
	set u = CreateUnit(p, 1697656884,  - 160.0, 1632.0, 270.000)
	set u = CreateUnit(p, 1697656884, 2208.0,  - 224.0, 270.000)
	set u = CreateUnit(p, 1697656884, 1696.0, 1568.0, 270.000)
	set p = null
	set u = null
	set t = null
endfunction

function CreatePlayerBuildings takes nothing returns nothing
	call CreateBuildingsForPlayer0()
	call CreateBuildingsForPlayer6()
endfunction

function CreatePlayerUnits takes nothing returns nothing
endfunction

function CreateAllUnits takes nothing returns nothing
	call CreatePlayerBuildings()
	call CreateNeutralPassive()
	call CreatePlayerUnits()
endfunction

function CreateCameras takes nothing returns nothing
	set gg_cam_InitCam = CreateCameraSetup()
	call CameraSetupSetField(gg_cam_InitCam, CAMERA_FIELD_ZOFFSET, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_InitCam, CAMERA_FIELD_ROTATION, 140.7, 0.0)
	call CameraSetupSetField(gg_cam_InitCam, CAMERA_FIELD_ANGLE_OF_ATTACK, 341.6, 0.0)
	call CameraSetupSetField(gg_cam_InitCam, CAMERA_FIELD_TARGET_DISTANCE, 2657.3, 0.0)
	call CameraSetupSetField(gg_cam_InitCam, CAMERA_FIELD_ROLL, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_InitCam, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0)
	call CameraSetupSetField(gg_cam_InitCam, CAMERA_FIELD_FARZ, 9743.6, 0.0)
	call CameraSetupSetDestPosition(gg_cam_InitCam, 581.7,  - 491.9, 0.0)
	set gg_cam_BWStartCam = CreateCameraSetup()
	call CameraSetupSetField(gg_cam_BWStartCam, CAMERA_FIELD_ZOFFSET, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_BWStartCam, CAMERA_FIELD_ROTATION, 90.0, 0.0)
	call CameraSetupSetField(gg_cam_BWStartCam, CAMERA_FIELD_ANGLE_OF_ATTACK, 304.0, 0.0)
	call CameraSetupSetField(gg_cam_BWStartCam, CAMERA_FIELD_TARGET_DISTANCE, 1650.0, 0.0)
	call CameraSetupSetField(gg_cam_BWStartCam, CAMERA_FIELD_ROLL, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_BWStartCam, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0)
	call CameraSetupSetField(gg_cam_BWStartCam, CAMERA_FIELD_FARZ, 5000.0, 0.0)
	call CameraSetupSetDestPosition(gg_cam_BWStartCam, 2099.1, 2064.1, 0.0)
	set gg_cam_ColorStartCam = CreateCameraSetup()
	call CameraSetupSetField(gg_cam_ColorStartCam, CAMERA_FIELD_ZOFFSET, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_ColorStartCam, CAMERA_FIELD_ROTATION, 90.0, 0.0)
	call CameraSetupSetField(gg_cam_ColorStartCam, CAMERA_FIELD_ANGLE_OF_ATTACK, 304.0, 0.0)
	call CameraSetupSetField(gg_cam_ColorStartCam, CAMERA_FIELD_TARGET_DISTANCE, 1650.0, 0.0)
	call CameraSetupSetField(gg_cam_ColorStartCam, CAMERA_FIELD_ROLL, 0.0, 0.0)
	call CameraSetupSetField(gg_cam_ColorStartCam, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0)
	call CameraSetupSetField(gg_cam_ColorStartCam, CAMERA_FIELD_FARZ, 5000.0, 0.0)
	call CameraSetupSetDestPosition(gg_cam_ColorStartCam,  - 2006.5,  - 2503.1, 0.0)
endfunction

function CreateRegions takes nothing returns nothing
	local weathereffect we
	set gg_rct_warmupColor = Rect( - 2752.0,  - 3104.0,  - 1248.0,  - 1664.0)
	set gg_rct_warmupBW = Rect(1152.0, 1216.0, 2848.0, 2816.0)
	set we = null
endfunction

function InitTrig_Untitled_Trigger_001 takes nothing returns nothing
	set gg_trg_Untitled_Trigger_001 = CreateTrigger()
	call TriggerAddAction(gg_trg_Untitled_Trigger_001, ref_function_Trig_Untitled_Trigger_001_Actions)
endfunction

function InitTrig_Untitled_Trigger_002 takes nothing returns nothing
	set gg_trg_Untitled_Trigger_002 = CreateTrigger()
	call TriggerAddAction(gg_trg_Untitled_Trigger_002, ref_function_Trig_Untitled_Trigger_002_Actions)
endfunction

function InitTrig_Untitled_Trigger_003 takes nothing returns nothing
	set gg_trg_Untitled_Trigger_003 = CreateTrigger()
	call TriggerAddAction(gg_trg_Untitled_Trigger_003, ref_function_Trig_Untitled_Trigger_003_Actions)
endfunction

function InitTrig_Untitled_Trigger_003_Copy takes nothing returns nothing
	set gg_trg_Untitled_Trigger_003_Copy = CreateTrigger()
	call TriggerAddAction(gg_trg_Untitled_Trigger_003_Copy, ref_function_Trig_Untitled_Trigger_003_Copy_Actions)
endfunction

function InitTrig_Untitled_Trigger_004 takes nothing returns nothing
	set gg_trg_Untitled_Trigger_004 = CreateTrigger()
	call TriggerAddAction(gg_trg_Untitled_Trigger_004, ref_function_Trig_Untitled_Trigger_004_Actions)
endfunction

function InitTrig_Untitled_Trigger_005 takes nothing returns nothing
	set gg_trg_Untitled_Trigger_005 = CreateTrigger()
	call TriggerAddAction(gg_trg_Untitled_Trigger_005, ref_function_Trig_Untitled_Trigger_005_Actions)
endfunction

function InitTrig_Untitled_Trigger_006 takes nothing returns nothing
	set gg_trg_Untitled_Trigger_006 = CreateTrigger()
	call TriggerAddAction(gg_trg_Untitled_Trigger_006, ref_function_Trig_Untitled_Trigger_006_Actions)
endfunction

function InitCustomTriggers takes nothing returns nothing
	call InitTrig_Untitled_Trigger_001()
	call InitTrig_Untitled_Trigger_006()
	call InitTrig_Untitled_Trigger_004()
	call InitTrig_Untitled_Trigger_005()
	call InitTrig_Untitled_Trigger_002()
	call InitTrig_Untitled_Trigger_003()
	call InitTrig_Untitled_Trigger_003_Copy()
endfunction

function InitGlobals takes nothing returns nothing
endfunction

function InitSounds takes nothing returns nothing
	set gg_snd_QuestFailed = CreateSound("Sound\\Interface\\QuestFailed.wav", false, false, false, 10, 10, "")
	call SetSoundParamsFromLabel(gg_snd_QuestFailed, "QuestFailed")
	call SetSoundDuration(gg_snd_QuestFailed, 4690)
	set gg_snd_almostKillingspree = CreateSound("sounds\\almostKillingspree.mp3", false, false, false, 10, 10, "")
	call SetSoundDuration(gg_snd_almostKillingspree, 2096)
	call SetSoundChannel(gg_snd_almostKillingspree, 0)
	call SetSoundVolume(gg_snd_almostKillingspree, 127)
	call SetSoundPitch(gg_snd_almostKillingspree, 1.0)
	set gg_snd_fuckedUp = CreateSound("sounds\\fuckedUp.mp3", false, false, false, 10, 10, "")
	call SetSoundDuration(gg_snd_fuckedUp, 2346)
	call SetSoundChannel(gg_snd_fuckedUp, 0)
	call SetSoundVolume(gg_snd_fuckedUp, 127)
	call SetSoundPitch(gg_snd_fuckedUp, 1.0)
	set gg_snd_killFrenzy = CreateSound("sounds\\killFrenzy.mp3", false, false, false, 10, 10, "")
	call SetSoundDuration(gg_snd_killFrenzy, 2616)
	call SetSoundChannel(gg_snd_killFrenzy, 0)
	call SetSoundVolume(gg_snd_killFrenzy, 127)
	call SetSoundPitch(gg_snd_killFrenzy, 1.0)
	set gg_snd_nein = CreateSound("sounds\\nein.mp3", false, false, false, 10, 10, "")
	call SetSoundDuration(gg_snd_nein, 2460)
	call SetSoundChannel(gg_snd_nein, 0)
	call SetSoundVolume(gg_snd_nein, 127)
	call SetSoundPitch(gg_snd_nein, 1.0)
	set gg_snd_SerbianXaXa = CreateSound("sounds\\SerbianXaXa.mp3", false, false, false, 10, 10, "")
	call SetSoundDuration(gg_snd_SerbianXaXa, 3916)
	call SetSoundChannel(gg_snd_SerbianXaXa, 0)
	call SetSoundVolume(gg_snd_SerbianXaXa, 127)
	call SetSoundPitch(gg_snd_SerbianXaXa, 1.0)
	set gg_snd_stopMe = CreateSound("sounds\\stopMe.mp3", false, false, false, 10, 10, "")
	call SetSoundDuration(gg_snd_stopMe, 4046)
	call SetSoundChannel(gg_snd_stopMe, 0)
	call SetSoundVolume(gg_snd_stopMe, 127)
	call SetSoundPitch(gg_snd_stopMe, 1.0)
	set gg_snd_toasted = CreateSound("sounds\\toasted.mp3", false, false, false, 10, 10, "")
	call SetSoundDuration(gg_snd_toasted, 1628)
	call SetSoundChannel(gg_snd_toasted, 0)
	call SetSoundVolume(gg_snd_toasted, 127)
	call SetSoundPitch(gg_snd_toasted, 1.0)
	set gg_snd_youSuck = CreateSound("sounds\\youSuck.mp3", false, false, false, 10, 10, "")
	call SetSoundDuration(gg_snd_youSuck, 2330)
	call SetSoundChannel(gg_snd_youSuck, 0)
	call SetSoundVolume(gg_snd_youSuck, 127)
	call SetSoundPitch(gg_snd_youSuck, 1.0)
endfunction

function unit_getUserData takes unit this returns integer
	return GetUnitUserData(this)
endfunction

function UnitEntity_getForUnit takes unit u returns integer
	return unit_getUserData(u)
endfunction

function Entity_terminate takes integer this returns nothing
	set Entity_done[this] = true
endfunction

function dispatch_Entity_terminate takes integer this returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Entity.terminate")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Entity.terminate on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	if Entity_typeId[this] <= 34 then
		if Entity_typeId[this] <= 29 then
			call Entity_terminate(this)
		else
			call Entity_terminate(this)
		endif
	elseif Entity_typeId[this] <= 42 then
		call Entity_terminate(this)
	else
		call Entity_terminate(this)
	endif
endfunction

function effect_destr takes effect this returns nothing
	call DestroyEffect(this)
endfunction

function player_isEnemyOf takes player this, player p returns boolean
	return IsPlayerEnemy(this, p)
endfunction

function unit_damageTarget takes unit this, unit target, real amount returns unit
	call UnitDamageTarget(this, target, amount, false, false, ATTACK_TYPE_NORMAL, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
	return this
endfunction

function MirrorRocket_onCollision takes integer this, integer other returns nothing
	local integer instanceOfTemp
	local integer tempIndex
	local real tempTupleSelectionResult_1
	local real tempTupleSelectionResult_2
	local real tempTupleSelectionResult_3
	local integer tempIndex_2
	local real tempTupleSelectionResult_1_2
	local real tempTupleSelectionResult_2_2
	local real tempTupleSelectionResult_3_2
	local real temp
	if player_isEnemyOf(Entity_owner[this], Entity_owner[other]) then
		set tempIndex = this
		set tempTupleSelectionResult_1 = Entity_pos[tempIndex]
		set tempTupleSelectionResult_2 = Entity_pos_2[tempIndex]
		set tempTupleSelectionResult_3 = Entity_pos_3[tempIndex]
		set temp = tempTupleSelectionResult_1
		set tempIndex_2 = this
		set tempTupleSelectionResult_1_2 = Entity_pos[tempIndex_2]
		set tempTupleSelectionResult_2_2 = Entity_pos_2[tempIndex_2]
		set tempTupleSelectionResult_3_2 = Entity_pos_3[tempIndex_2]
		call effect_destr(AddSpecialEffect("Abilities\\Spells\\Undead\\DeathCoil\\DeathCoilSpecialArt.mdl", temp, tempTupleSelectionResult_2_2))
		set instanceOfTemp = Entity_typeId[other]
		if instanceOfTemp >= 33 and instanceOfTemp <= 34 then
			call dispatch_Entity_terminate(this)
			call unit_damageTarget(MirrorRocket_sample[this], UnitEntity_actor[other], MirrorRocket_dmg[this])
		else
			call unit_damageTarget(MirrorRocket_sample[this], UnitEntity_actor[other], MirrorRocket_dmg[this] / 10.)
		endif
	endif
endfunction

function dispatch_ProjectileWithCollision_onCollision takes integer this, integer other returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ProjectileWithCollision.onCollision")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ProjectileWithCollision.onCollision on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call MirrorRocket_onCollision(this, other)
endfunction

function CollisionModule_enumFilter_2 takes nothing returns boolean
	local integer entity = UnitEntity_getForUnit(GetFilterUnit())
	if entity != 0 then
		call dispatch_ProjectileWithCollision_onCollision(CollisionModule_temp, entity)
	endif
	return false
endfunction

function hashtable_loadUnitHandle takes hashtable this, integer parentKey, integer childKey returns unit
	return LoadUnitHandle(this, parentKey, childKey)
endfunction

function Table_loadUnit takes integer this, integer parentKey returns unit
	return hashtable_loadUnitHandle(Table_ht, this, parentKey)
endfunction

function dispatch_Table_loadUnit takes integer this, integer parentKey returns unit
	local unit loadUnit_result
	if Table_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Table.loadUnit")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Table.loadUnit on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set loadUnit_result = Table_loadUnit(this, parentKey)
	set dispatch_Table_loadUnittempReturn = loadUnit_result
	set loadUnit_result = null
	return dispatch_Table_loadUnittempReturn
endfunction

function trigger_getSource takes trigger this returns unit
	return dispatch_Table_loadUnit(Trigger_triggerData, GetHandleId(this))
endfunction

function unit_issuePointOrder takes unit this, string order, real target_x, real target_y returns nothing
	call IssuePointOrder(this, order, target_x, target_y)
endfunction

function CreepNode_orderAttack takes nothing returns nothing
	local integer data = unit_getUserData(GetTriggerUnit())
	local integer sdata = unit_getUserData(trigger_getSource(GetTriggeringTrigger()))
	local integer cdata
	local integer tempIndex
	local unit temp
	if Entity_typeId[data] == 42 and Entity_owner[data] == CreepNode_creepOwner[sdata] then
		set cdata = data
		set temp = UnitEntity_actor[cdata]
		set tempIndex = sdata
		call unit_issuePointOrder(temp, "attack", CreepNode_target[tempIndex], CreepNode_target_2[tempIndex])
	endif
	set temp = null
endfunction

function debugPrint takes string msg, integer level returns nothing
	local integer i
	if level >= PrintingHelper_DEBUG_LEVEL then
		set PrintingHelper_texts[PrintingHelper_msgcount] = msg
		set PrintingHelper_msgcount = PrintingHelper_msgcount + 1
		set i = 0
		loop
			exitwhen i > 11
			if PrintingHelper_wantDebug[i] then
				call DisplayTimedTextToPlayer(Player(i), 0., 0., PrintingHelper_DEBUG_MSG_DURATION, "|cff9C9C9CDEBUG - |r" + msg)
			endif
			set i = i + 1
		endloop
	endif
endfunction

function int_toString takes integer this returns string
	return I2S(this)
endfunction

function angle_degrees takes real this_radians returns real
	return this_radians * Maths_RADTODEG
endfunction

function getTerrainZ takes real x, real y returns real
	call MoveLocation(Terrain_tempLoc, x, y)
	return GetLocationZ(Terrain_tempLoc)
endfunction

function unit_setFlyHeight takes unit this, real height, real rate returns unit
	call SetUnitFlyHeight(this, height, rate)
	return this
endfunction

function createUnit takes player p, integer unitId, real pos_x, real pos_y, real pos_z, real facing_radians returns unit
	return unit_setFlyHeight(CreateUnit(p, unitId, pos_x, pos_y, angle_degrees(facing_radians)), pos_z - getTerrainZ(pos_x, pos_y), 0.)
endfunction

function timer_getElapsed takes timer this returns real
	return TimerGetElapsed(this)
endfunction

function getElapsedGameTime takes nothing returns real
	return timer_getElapsed(GameTimer_gameTimer)
endfunction

function int_moduloInt takes integer this, integer divisor returns integer
	return this - this / divisor * divisor
endfunction

function unit_addAbility takes unit this, integer abil returns unit
	call UnitAddAbility(this, abil)
	return this
endfunction

function unit_pause takes unit this returns unit
	call PauseUnit(this, true)
	return this
endfunction

function unit_removeAbility takes unit this, integer abil returns unit
	call UnitRemoveAbility(this, abil)
	return this
endfunction

function unit_setFacing takes unit this, real deg returns unit
	call SetUnitFacing(this, deg)
	return this
endfunction

function unit_setXYZ takes unit this, real pos_x, real pos_y, real pos_z returns unit
	call SetUnitX(this, pos_x)
	call SetUnitY(this, pos_y)
	call SetUnitFlyHeight(this, pos_z, 0.)
	return this
endfunction

function newDummy takes real pos_x, real pos_y, real pos_z, real facing_radians returns unit
	local integer i = int_moduloInt(R2I(angle_degrees(facing_radians)), 360) / DummyRecycler_ANG_VAL
	local integer qn = DummyRecycler_queueNext[i]
	local unit u
	if qn != 0 and getElapsedGameTime() >= DummyRecycler_timeStamp[qn] then
		set DummyRecycler_queueNext[i] = DummyRecycler_queueNext[qn]
		if DummyRecycler_queueNext[i] == 0 then
			set DummyRecycler_queueLast[i] = i
		endif
		set DummyRecycler_stackN[i] = DummyRecycler_stackN[i] - 1
		set DummyRecycler_queueLast[qn] = DummyRecycler_recycle
		set DummyRecycler_recycle = qn
		set u = DummyRecycler_stack[qn]
		call unit_setFacing(u, angle_degrees(facing_radians))
		call GroupRemoveUnit(DummyRecycler_protect, u)
		call unit_pause(u)
	else
		set u = createUnit(Basics_DUMMY_PLAYER, Basics_DUMMY_UNIT_ID, pos_x, pos_y, pos_z, facing_radians)
		call unit_pause(unit_addAbility(unit_removeAbility(unit_addAbility(u, Basics_HEIGHT_ENABLER), Basics_HEIGHT_ENABLER), Basics_LOCUST_ID))
	endif
	call unit_setXYZ(u, pos_x, pos_y, pos_z)
	set bj_lastCreatedUnit = u
	set u = null
	return bj_lastCreatedUnit
endfunction

function vec2_toVec3 takes real this_x, real this_y returns real
	set vec2_toVec3_return_x = this_x
	set vec2_toVec3_return_y = this_y
	set vec2_toVec3_return_z = 0.
	return vec2_toVec3_return_x
endfunction

function newDummy_2 takes real pos_x, real pos_y, real facing_radians returns unit
	return newDummy(vec2_toVec3(pos_x, pos_y), vec2_toVec3_return_y, vec2_toVec3_return_z, facing_radians)
endfunction

function unit_getName takes unit this returns string
	return GetUnitName(this)
endfunction

function unit_hasAbility takes unit this, integer id returns boolean
	return GetUnitAbilityLevel(this, id) > 0
endfunction

function unit_setAbilityLevel takes unit this, integer abilId, integer lvl returns unit
	call SetUnitAbilityLevel(this, abilId, lvl)
	return this
endfunction

function unit_setState takes unit this, unitstate state, real value returns unit
	call SetUnitState(this, state, value)
	return this
endfunction

function unit_setMana takes unit this, real val returns unit
	call unit_setState(this, UNIT_STATE_MANA, val)
	return this
endfunction

function unit_setOwner takes unit this, player p, boolean changeColor returns unit
	call SetUnitOwner(this, p, changeColor)
	return this
endfunction

function unit_unpause takes unit this returns unit
	call PauseUnit(this, false)
	return this
endfunction

function DummyCaster_createDummyCaster takes integer this, real tpos_x, real tpos_y returns unit
	local unit dummy
	local integer tempIndex
	if DummyCaster_customSource[this] then
		set tempIndex = this
		set dummy = newDummy(DummyCaster_customPos[tempIndex], DummyCaster_customPos_2[tempIndex], DummyCaster_customPos_3[tempIndex], 0.)
	else
		call debugPrint("no custom source", 3)
		set dummy = newDummy_2(tpos_x, tpos_y, 0.)
		call debugPrint("new dummy " + unit_getName(dummy), 3)
	endif
	call unit_setOwner(dummy, DummyCaster_owningplayer[this], false)
	call unit_unpause(dummy)
	call debugPrint("AbilId: " + int_toString(DummyCaster_abilityId[this]), 3)
	if  not unit_hasAbility(dummy, DummyCaster_abilityId[this]) then
		call unit_addAbility(dummy, DummyCaster_abilityId[this])
	endif
	if DummyCaster_AUTO_RESET_MANA_COOLDOWN then
		call UnitResetCooldown(dummy)
		call unit_setMana(dummy, 10000.0)
	endif
	if DummyCaster_level[this] > 1 then
		call unit_setAbilityLevel(dummy, DummyCaster_abilityId[this], DummyCaster_level[this])
	endif
	set DummyCaster_createDummyCastertempReturn = dummy
	set dummy = null
	return DummyCaster_createDummyCastertempReturn
endfunction

function dispatch_DummyCaster_createDummyCaster takes integer this, real tpos_x, real tpos_y returns unit
	local unit createDummyCaster_result
	if DummyCaster_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling DummyCaster.createDummyCaster")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called DummyCaster.createDummyCaster on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set createDummyCaster_result = DummyCaster_createDummyCaster(this, tpos_x, tpos_y)
	set dispatch_DummyCaster_createDummyCastertempReturn = createDummyCaster_result
	set createDummyCaster_result = null
	return dispatch_DummyCaster_createDummyCastertempReturn
endfunction

function DummyCaster_onDestroy takes integer this returns nothing
endfunction

function dealloc_DummyCaster takes integer obj returns nothing
	if DummyCaster_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type DummyCaster")
		call I2S(1 / 0)
	else
		set DummyCaster_nextFree[DummyCaster_firstFree] = obj
		set DummyCaster_firstFree = DummyCaster_firstFree + 1
		set DummyCaster_typeId[obj] = 0
	endif
endfunction

function destroyDummyCaster takes integer this returns nothing
	call DummyCaster_onDestroy(this)
	call dealloc_DummyCaster(this)
endfunction

function dispatch_DummyCaster_destroyDummyCaster takes integer this returns nothing
	if DummyCaster_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling DummyCaster.destroyDummyCaster")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called DummyCaster.destroyDummyCaster on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call destroyDummyCaster(this)
endfunction

function alloc_DelayData takes nothing returns integer
	local integer this
	if DelayData_firstFree == 0 then
		set DelayData_maxIndex = DelayData_maxIndex + 1
		set this = DelayData_maxIndex
	else
		set DelayData_firstFree = DelayData_firstFree - 1
		set this = DelayData_nextFree[DelayData_firstFree]
	endif
	set DelayData_typeId[this] = 30
	return this
endfunction

function construct_DelayData takes integer this, unit d, real dt returns nothing
	set DelayData_dum[this] = null
	set DelayData_dT[this] = 0.
	set LinkedListModule_size_2 = LinkedListModule_size_2 + 1
	if LinkedListModule_size_2 == 1 then
		set LinkedListModule_first_2 = this
		set LinkedListModule_prev_2[this] = 0
	else
		set LinkedListModule_prev_2[this] = LinkedListModule_last_2
		set LinkedListModule_next_2[LinkedListModule_last_2] = this
		set LinkedListModule_prev_2[LinkedListModule_first_2] = this
	endif
	set LinkedListModule_next_2[this] = 0
	set LinkedListModule_last_2 = this
	set DelayData_dum[this] = d
	set DelayData_dT[this] = dt
endfunction

function new_DelayData takes unit d, real dt returns integer
	local integer this = alloc_DelayData()
	call construct_DelayData(this, d, dt)
	return this
endfunction

function recycleDummyDelayed takes unit dummy, real delay returns nothing
	call new_DelayData(dummy, delay)
endfunction

function unit_getX takes unit this returns real
	return GetUnitX(this)
endfunction

function unit_getY takes unit this returns real
	return GetUnitY(this)
endfunction

function unit_getPos takes unit this returns real
	set unit_getPos_return_x = unit_getX(this)
	set unit_getPos_return_y = unit_getY(this)
	return unit_getPos_return_x
endfunction

function unit_issueTargetOrderById takes unit this, integer id, widget target returns unit
	call IssueTargetOrderById(this, id, target)
	return this
endfunction

function DummyCaster_castOnTarget takes integer this, unit target returns nothing
	local unit dummy
	call debugPrint("cast on target", 3)
	set dummy = dispatch_DummyCaster_createDummyCaster(this, unit_getPos(target), unit_getPos_return_y)
	call debugPrint("dummy created", 3)
	if DummyCaster_FORCE_INVISIBLE_CAST then
		call UnitShareVision(target, DummyCaster_owningplayer[this], true)
		call unit_issueTargetOrderById(dummy, DummyCaster_orderId[this], target)
		call UnitShareVision(target, DummyCaster_owningplayer[this], false)
	else
		call unit_issueTargetOrderById(dummy, DummyCaster_orderId[this], target)
		call debugPrint("casted " + int_toString(DummyCaster_orderId[this]), 3)
	endif
	call recycleDummyDelayed(dummy, DummyCaster_recycleDelay[this])
	call debugPrint("recycled", 3)
	if DummyCaster_autodestroy[this] then
		call dispatch_DummyCaster_destroyDummyCaster(this)
	endif
	set dummy = null
endfunction

function dispatch_DummyCaster_castOnTarget takes integer this, unit target returns nothing
	if DummyCaster_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling DummyCaster.castOnTarget")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called DummyCaster.castOnTarget on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call DummyCaster_castOnTarget(this, target)
endfunction

function DummyCaster_filterAOE takes nothing returns boolean
	local unit u = GetFilterUnit()
	if IsUnitInRangeXY(u, DummyCaster_aoex, DummyCaster_aoey, DummyCaster_aoeradius) then
		call dispatch_DummyCaster_castOnTarget(DummyCaster_cinstance, u)
	endif
	set u = null
	return false
endfunction

function angle_op_plus takes real this_radians, real other_radians returns real
	return this_radians + other_radians
endfunction

function alloc_MirrorRocket takes nothing returns integer
	local integer this
	if Entity_firstFree == 0 then
		set Entity_maxIndex = Entity_maxIndex + 1
		set this = Entity_maxIndex
	else
		set Entity_firstFree = Entity_firstFree - 1
		set this = Entity_nextFree[Entity_firstFree]
	endif
	set Entity_typeId[this] = 29
	return this
endfunction

function construct_Entity takes integer this, real pos_x, real pos_y, real pos_z, real radius, player owner returns nothing
	local integer tempIndex
	local integer tempIndex_2
	set Entity_radius[this] = 0.
	set Entity_speedFactor[this] = 1.
	set Entity_isStatic[this] = false
	set Entity_active[this] = true
	set Entity_done[this] = false
	set LinkedListModule_size = LinkedListModule_size + 1
	if LinkedListModule_size == 1 then
		set LinkedListModule_first = this
		set LinkedListModule_prev[this] = 0
	else
		set LinkedListModule_prev[this] = LinkedListModule_last
		set LinkedListModule_next[LinkedListModule_last] = this
		set LinkedListModule_prev[LinkedListModule_first] = this
	endif
	set LinkedListModule_next[this] = 0
	set LinkedListModule_last = this
	set tempIndex = this
	set Entity_pos[tempIndex] = pos_x
	set Entity_pos_2[tempIndex] = pos_y
	set Entity_pos_3[tempIndex] = pos_z
	set tempIndex_2 = this
	set Entity_vel[tempIndex_2] = 0.
	set Entity_vel_2[tempIndex_2] = 0.
	set Entity_vel_3[tempIndex_2] = 0.
	set Entity_owner[this] = owner
	set Entity_radius[this] = radius
	set Debug_entityCount = Debug_entityCount + 1
	set Debug_currentEntityCount = Debug_currentEntityCount + 1
endfunction

function Fx_setOwner takes integer this, player p, boolean changeColor returns integer
	call unit_setOwner(Fx_dummy[this], p, changeColor)
	return this
endfunction

function dispatch_Fx_setOwner takes integer this, player p, boolean changeColor returns integer
	local integer setOwner_result
	if Fx_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Fx.setOwner")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Fx.setOwner on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set setOwner_result = Fx_setOwner(this, p, changeColor)
	return setOwner_result
endfunction

function alloc_Fx takes nothing returns integer
	local integer this
	if Fx_firstFree == 0 then
		set Fx_maxIndex = Fx_maxIndex + 1
		set this = Fx_maxIndex
	else
		set Fx_firstFree = Fx_firstFree - 1
		set this = Fx_nextFree[Fx_firstFree]
	endif
	set Fx_typeId[this] = 41
	return this
endfunction

function unit_addEffect takes unit this, string fx, string attachment returns effect
	return AddSpecialEffectTarget(fx, this, attachment)
endfunction

function Fx_setFx takes integer this, string newpath returns integer
	if Fx_fx[this] != null then
		call effect_destr(Fx_fx[this])
	endif
	if newpath == "" then
		set Fx_fx[this] = null
	else
		set Fx_fx[this] = unit_addEffect(Fx_dummy[this], newpath, "origin")
	endif
	set Fx_sfxPath[this] = newpath
	return this
endfunction

function dispatch_Fx_setFx takes integer this, string newpath returns integer
	local integer setFx_result
	if Fx_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Fx.setFx")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Fx.setFx on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set setFx_result = Fx_setFx(this, newpath)
	return setFx_result
endfunction

function Fx_setZ takes integer this, real z returns integer
	call unit_setFlyHeight(Fx_dummy[this], z, 0.)
	return this
endfunction

function dispatch_Fx_setZ takes integer this, real z returns integer
	local integer setZ_result
	if Fx_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Fx.setZ")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Fx.setZ on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set setZ_result = Fx_setZ(this, z)
	return setZ_result
endfunction

function construct_Fx takes integer this, real pos_x, real pos_y, real pos_z, real facing_radians, string fxpath returns nothing
	set Fx_dummy[this] = null
	set Fx_fx[this] = null
	set Fx_zAngle[this] = 0.
	set Fx_dummy[this] = newDummy(pos_x, pos_y, pos_z, facing_radians)
	call dispatch_Fx_setZ(this, pos_z)
	call dispatch_Fx_setFx(this, fxpath)
endfunction

function new_Fx takes real pos_x, real pos_y, real pos_z, real facing_radians, string fxpath returns integer
	local integer this = alloc_Fx()
	call construct_Fx(this, pos_x, pos_y, pos_z, facing_radians, fxpath)
	return this
endfunction

function construct_FxEntity takes integer this, real pos_x, real pos_y, real pos_z, real radius, player owner, real xyAngle_radians, string sfxpath returns nothing
	call construct_Entity(this, pos_x, pos_y, pos_z, radius, owner)
	set FxEntity_fx[this] = new_Fx(pos_x, pos_y, pos_z, xyAngle_radians, sfxpath)
	call dispatch_Fx_setOwner(FxEntity_fx[this], owner, true)
endfunction

function unit_setFacing_2 takes unit this, real a_radians returns unit
	call SetUnitFacing(this, angle_degrees(a_radians))
	return this
endfunction

function Fx_setXYAngle takes integer this, real value_radians returns integer
	call unit_setFacing_2(Fx_dummy[this], value_radians)
	return this
endfunction

function dispatch_Fx_setXYAngle takes integer this, real value_radians returns integer
	local integer setXYAngle_result
	if Fx_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Fx.setXYAngle")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Fx.setXYAngle on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set setXYAngle_result = Fx_setXYAngle(this, value_radians)
	return setXYAngle_result
endfunction

function Projectile_setXYAngle takes integer this, real xyA_radians returns nothing
	set Projectile_xyAngle[this] = xyA_radians
	call dispatch_Fx_setXYAngle(FxEntity_fx[this], xyA_radians)
endfunction

function dispatch_Projectile_setXYAngle takes integer this, real xyA_radians returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Projectile.setXYAngle")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Projectile.setXYAngle on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	if Entity_typeId[this] <= 29 then
		call Projectile_setXYAngle(this, xyA_radians)
	else
		call Projectile_setXYAngle(this, xyA_radians)
	endif
endfunction

function construct_Projectile takes integer this, real pos_x, real pos_y, real pos_z, real radius, player owner, real xyAngle_radians, string fxpath returns nothing
	call construct_FxEntity(this, pos_x, pos_y, pos_z, radius, owner, xyAngle_radians, fxpath)
	set Projectile_timed[this] = false
	set Projectile_ranged[this] = false
	set Projectile_speed[this] = 0.
	set Projectile_dist[this] = 0.
	set Projectile_time[this] = 0.
	call dispatch_Projectile_setXYAngle(this, xyAngle_radians)
	set Entity_active[this] = false
endfunction

function construct_ProjectileWithCollision takes integer this, real pos_x, real pos_y, real pos_z, real radius, player owner, real xyAngle_radians, string fxpath returns nothing
	call construct_Projectile(this, pos_x, pos_y, pos_z, radius, owner, xyAngle_radians, fxpath)
endfunction

function angle_cos takes real this_radians returns real
	return Cos(this_radians)
endfunction

function angle_sin takes real this_radians returns real
	return Sin(this_radians)
endfunction

function Projectile_setSpeed takes integer this, real speed returns nothing
	local integer tempIndex
	local integer tempIndex_2
	local integer tempIndex_3
	local integer temp
	local integer temp_2
	set Projectile_speed[this] = speed
	set tempIndex = this
	set temp = tempIndex
	set tempIndex_2 = this
	set Entity_vel[temp] = angle_cos(Projectile_xyAngle[tempIndex_2]) * speed
	set temp_2 = tempIndex
	set tempIndex_3 = this
	set Entity_vel_2[temp_2] = angle_sin(Projectile_xyAngle[tempIndex_3]) * speed
	set Entity_vel_3[tempIndex] = 0.
	set Entity_active[this] = true
endfunction

function dispatch_Projectile_setSpeed takes integer this, real speed returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Projectile.setSpeed")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Projectile.setSpeed on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	if Entity_typeId[this] <= 29 then
		call Projectile_setSpeed(this, speed)
	else
		call Projectile_setSpeed(this, speed)
	endif
endfunction

function Projectile_setTimed takes integer this, real lifespan returns nothing
	set Projectile_maxTime[this] = lifespan
	set Projectile_timed[this] = true
endfunction

function dispatch_Projectile_setTimed takes integer this, real lifespan returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Projectile.setTimed")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Projectile.setTimed on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	if Entity_typeId[this] <= 29 then
		call Projectile_setTimed(this, lifespan)
	else
		call Projectile_setTimed(this, lifespan)
	endif
endfunction

function unit_getOwner takes unit this returns player
	return GetOwningPlayer(this)
endfunction

function construct_MirrorRocket takes integer this, real pos_x, real pos_y, real pos_z, real radius, unit hero, real speed, real time, real xyAngle_radians, string fxpath, real dmg returns nothing
	call construct_ProjectileWithCollision(this, pos_x, pos_y, pos_z, radius, unit_getOwner(hero), xyAngle_radians, fxpath)
	set MirrorRocket_sample[this] = hero
	set MirrorRocket_spd[this] = speed
	set MirrorRocket_dmg[this] = dmg
	call dispatch_Projectile_setSpeed(this, MirrorRocket_spd[this])
	call dispatch_Projectile_setTimed(this, time)
endfunction

function new_MirrorRocket takes real pos_x, real pos_y, real pos_z, real radius, unit hero, real speed, real time, real xyAngle_radians, string fxpath, real dmg returns integer
	local integer this = alloc_MirrorRocket()
	call construct_MirrorRocket(this, pos_x, pos_y, pos_z, radius, hero, speed, time, xyAngle_radians, fxpath, dmg)
	return this
endfunction

function alloc_Ring takes nothing returns integer
	local integer this
	if Entity_firstFree == 0 then
		set Entity_maxIndex = Entity_maxIndex + 1
		set this = Entity_maxIndex
	else
		set Entity_firstFree = Entity_firstFree - 1
		set this = Entity_nextFree[Entity_firstFree]
	endif
	set Entity_typeId[this] = 32
	return this
endfunction

function unit_issuePointOrderById takes unit this, integer id, real target_x, real target_y returns unit
	call IssuePointOrderById(this, id, target_x, target_y)
	return this
endfunction

function DummyCaster_castOnPoint takes integer this, real target_x, real target_y returns nothing
	local unit dummy
	call debugPrint("cast on point", 3)
	set dummy = dispatch_DummyCaster_createDummyCaster(this, target_x, target_y)
	call debugPrint("dummy created " + unit_getName(dummy) + "<name", 3)
	call unit_issuePointOrderById(dummy, DummyCaster_orderId[this], target_x, target_y)
	call debugPrint("ordered Cast", 3)
	call recycleDummyDelayed(dummy, DummyCaster_recycleDelay[this])
	call debugPrint("recycled", 3)
	if DummyCaster_autodestroy[this] then
		call dispatch_DummyCaster_destroyDummyCaster(this)
	endif
	set dummy = null
endfunction

function dispatch_DummyCaster_castOnPoint takes integer this, real target_x, real target_y returns nothing
	if DummyCaster_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling DummyCaster.castOnPoint")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called DummyCaster.castOnPoint on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call DummyCaster_castOnPoint(this, target_x, target_y)
endfunction

function DummyCaster_castOnPoint_2 takes integer this, real target_x, real target_y, real target_z returns nothing
	call dispatch_DummyCaster_castOnPoint(this, target_x, target_y)
endfunction

function dispatch_DummyCaster_castOnPoint_2 takes integer this, real target_x, real target_y, real target_z returns nothing
	if DummyCaster_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling DummyCaster.castOnPoint")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called DummyCaster.castOnPoint on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call DummyCaster_castOnPoint_2(this, target_x, target_y, target_z)
endfunction

function DummyCaster_setLevel takes integer this, integer lvl returns nothing
	set DummyCaster_level[this] = lvl
endfunction

function dispatch_DummyCaster_setLevel takes integer this, integer lvl returns nothing
	if DummyCaster_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling DummyCaster.setLevel")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called DummyCaster.setLevel on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call DummyCaster_setLevel(this, lvl)
endfunction

function alloc_LLEntry takes nothing returns integer
	local integer this
	if LLEntry_firstFree == 0 then
		set LLEntry_maxIndex = LLEntry_maxIndex + 1
		set this = LLEntry_maxIndex
	else
		set LLEntry_firstFree = LLEntry_firstFree - 1
		set this = LLEntry_nextFree[LLEntry_firstFree]
	endif
	set LLEntry_typeId[this] = 6
	return this
endfunction

function construct_LLEntry takes integer this, integer elem, integer prev, integer next returns nothing
	set LLEntry_elem[this] = elem
	set LLEntry_prev[this] = prev
	set LLEntry_next[this] = next
endfunction

function new_LLEntry takes integer elem, integer prev, integer next returns integer
	local integer this = alloc_LLEntry()
	call construct_LLEntry(this, elem, prev, next)
	return this
endfunction

function LinkedList_add takes integer this, integer elem returns nothing
	local integer entry = new_LLEntry(elem, LLEntry_prev[LinkedList_dummy[this]], LinkedList_dummy[this])
	set LLEntry_next[LLEntry_prev[LinkedList_dummy[this]]] = entry
	set LLEntry_prev[LinkedList_dummy[this]] = entry
	set LinkedList_size[this] = LinkedList_size[this] + 1
endfunction

function dispatch_LinkedList_add takes integer this, integer elem returns nothing
	if LinkedList_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LinkedList.add")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LinkedList.add on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call LinkedList_add(this, elem)
endfunction

function hashtable_saveLightningHandle takes hashtable this, integer parentKey, integer childKey, lightning value returns hashtable
	call SaveLightningHandle(this, parentKey, childKey, value)
	return this
endfunction

function Table_saveLightning takes integer this, integer parentKey, lightning value returns nothing
	call hashtable_saveLightningHandle(Table_ht, this, parentKey, value)
endfunction

function dispatch_Table_saveLightning takes integer this, integer parentKey, lightning value returns nothing
	if Table_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Table.saveLightning")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Table.saveLightning on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call Table_saveLightning(this, parentKey, value)
endfunction

function group_clear takes group this returns nothing
	call GroupClear(this)
endfunction

function group_close takes group this returns nothing
	call DestroyGroup(this)
endfunction

function group_hasNext takes group this returns boolean
	return FirstOfGroup(this) != null
endfunction

function group_iterator takes group this returns group
	set bj_groupAddGroupDest = CreateGroup()
	call ForGroup(this, ref_function_GroupAddGroupEnum_2)
	return bj_groupAddGroupDest
endfunction

function group_next takes group this returns unit
	local unit u = FirstOfGroup(this)
	call GroupRemoveUnit(this, u)
	set group_nexttempReturn = u
	set u = null
	return group_nexttempReturn
endfunction

function alloc_DummyCaster takes nothing returns integer
	local integer this
	if DummyCaster_firstFree == 0 then
		set DummyCaster_maxIndex = DummyCaster_maxIndex + 1
		set this = DummyCaster_maxIndex
	else
		set DummyCaster_firstFree = DummyCaster_firstFree - 1
		set this = DummyCaster_nextFree[DummyCaster_firstFree]
	endif
	set DummyCaster_typeId[this] = 31
	return this
endfunction

function construct_DummyCaster takes integer this, integer abilityId, string orderString, player owner, boolean autodestroy returns nothing
	set DummyCaster_abilityId[this] = 0
	set DummyCaster_level[this] = 1
	set DummyCaster_owningplayer[this] = Basics_DUMMY_PLAYER
	set DummyCaster_orderId[this] = 0
	set DummyCaster_recycleDelay[this] = 0.5
	set DummyCaster_customSource[this] = false
	set DummyCaster_autodestroy[this] = false
	set DummyCaster_orderId[this] = OrderId(orderString)
	set DummyCaster_abilityId[this] = abilityId
	set DummyCaster_owningplayer[this] = owner
	set DummyCaster_autodestroy[this] = autodestroy
	call debugPrint("DC constructed", 3)
endfunction

function new_DummyCaster takes integer abilityId, string orderString, player owner, boolean autodestroy returns integer
	local integer this = alloc_DummyCaster()
	call construct_DummyCaster(this, abilityId, orderString, owner, autodestroy)
	return this
endfunction

function alloc_LinkedList takes nothing returns integer
	local integer this
	if LinkedList_firstFree == 0 then
		set LinkedList_maxIndex = LinkedList_maxIndex + 1
		set this = LinkedList_maxIndex
	else
		set LinkedList_firstFree = LinkedList_firstFree - 1
		set this = LinkedList_nextFree[LinkedList_firstFree]
	endif
	set LinkedList_typeId[this] = 5
	return this
endfunction

function construct_LinkedList takes integer this returns nothing
	set LinkedList_size[this] = 0
	set LinkedList_dummy[this] = new_LLEntry(0, 0, 0)
	set LLEntry_next[LinkedList_dummy[this]] = LinkedList_dummy[this]
	set LLEntry_prev[LinkedList_dummy[this]] = LinkedList_dummy[this]
endfunction

function new_LinkedList takes nothing returns integer
	local integer this = alloc_LinkedList()
	call construct_LinkedList(this)
	return this
endfunction

function alloc_Table takes nothing returns integer
	local integer this
	if Table_firstFree == 0 then
		set Table_maxIndex = Table_maxIndex + 1
		set this = Table_maxIndex
	else
		set Table_firstFree = Table_firstFree - 1
		set this = Table_nextFree[Table_firstFree]
	endif
	set Table_typeId[this] = 1
	return this
endfunction

function construct_Table takes integer this returns nothing
endfunction

function new_Table takes nothing returns integer
	local integer this = alloc_Table()
	call construct_Table(this)
	return this
endfunction

function angle_radians takes real this_radians returns real
	return this_radians
endfunction

function polarProjectionX takes real x, real dist, real ang_radians returns real
	return x + dist * Cos(angle_radians(ang_radians))
endfunction

function polarProjectionY takes real y, real dist, real ang_radians returns real
	return y + dist * Sin(angle_radians(ang_radians))
endfunction

function real_asAngleDegrees takes real this returns real
	return this * Maths_DEGTORAD
endfunction

function handle_getHandleId takes handle this returns integer
	return GetHandleId(this)
endfunction

function unitToIndex takes unit object returns integer
	return handle_getHandleId(object)
endfunction

function construct_Ring takes integer this, real pos_x, real pos_y, real pos_z, real radius, player owner, real xyAngle_radians, string sfxpath, integer lvl returns nothing
	local integer i
	local integer dum
	local group wurst__iterator1
	local unit u
	call construct_FxEntity(this, pos_x, pos_y, pos_z, radius, owner, xyAngle_radians, sfxpath)
	set Ring_unitsinside[this] = new_LinkedList()
	set Ring_lts[this] = new_Table()
	set i = 0
	loop
		exitwhen i > 19
		call dispatch_Table_saveLightning(Ring_lts[this], i, AddLightning("SPLK", false, polarProjectionX(pos_x, radius, real_asAngleDegrees(360. / 20. * i)), polarProjectionY(pos_y, radius, real_asAngleDegrees(360. / 20. * i)), polarProjectionX(pos_x, radius, real_asAngleDegrees(360. / 20. * (i + 1))), polarProjectionY(pos_y, radius, real_asAngleDegrees(360. / 20. * (i + 1)))))
		set i = i + 1
	endloop
	set dum = new_DummyCaster(Ring_BUFF_INSIDE, "silence", owner, false)
	call dispatch_DummyCaster_setLevel(dum, lvl)
	call dispatch_DummyCaster_castOnPoint_2(dum, pos_x, pos_y, pos_z)
	set Ring_duration[this] = 8. + lvl * 2.
	call GroupEnumUnitsInRange(TempGroups_ENUM_GROUP, pos_x, pos_y, radius, null)
	set wurst__iterator1 = group_iterator(TempGroups_ENUM_GROUP)
	loop
		exitwhen  not group_hasNext(wurst__iterator1)
		set u = group_next(wurst__iterator1)
		if UnitEntity_getForUnit(u) != 0 then
			call dispatch_LinkedList_add(Ring_unitsinside[this], unitToIndex(u))
		endif
	endloop
	call group_close(wurst__iterator1)
	call group_clear(TempGroups_ENUM_GROUP)
	set wurst__iterator1 = null
	set u = null
endfunction

function new_Ring takes real pos_x, real pos_y, real pos_z, real radius, player owner, real xyAngle_radians, string sfxpath, integer lvl returns integer
	local integer this = alloc_Ring()
	call construct_Ring(this, pos_x, pos_y, pos_z, radius, owner, xyAngle_radians, sfxpath, lvl)
	return this
endfunction

function unit_getFacingAngle takes unit this returns real
	return real_asAngleDegrees(GetUnitFacing(this))
endfunction

function vec3_op_plus takes real this_x, real this_y, real this_z, real v_x, real v_y, real v_z returns real
	set vec3_op_plus_return_x_2 = this_x + v_x
	set vec3_op_plus_return_y_2 = this_y + v_y
	set vec3_op_plus_return_z_2 = this_z + v_z
	return vec3_op_plus_return_x_2
endfunction

function Mimic_onCast takes integer this, integer id, real tpos_x, real tpos_y, unit target, integer lvl returns nothing
	local integer temp = id
	local integer tempIndex
	local integer tempIndex_2
	local integer tempIndex_3
	local real tempTupleSelectionResult_1
	local real tempTupleSelectionResult_2
	local real tempTupleSelectionResult_3
	local real temp_2
	local real temp_3
	if temp == MimicHero_MIRROR_ROCKET_ID then
		set tempIndex = this
		call new_MirrorRocket(vec3_op_plus(Entity_pos[tempIndex], Entity_pos_2[tempIndex], Entity_pos_3[tempIndex], 0., 0., 50.), vec3_op_plus_return_y_2, vec3_op_plus_return_z_2, 40., UnitEntity_actor[this], 8., 2. + 2. * lvl, angle_op_plus(unit_getFacingAngle(UnitEntity_actor[this]), Maths_PI), "Abilities\\Weapons\\IllidanMissile\\IllidanMissile.mdl", 200. + 60 * lvl)
	elseif temp == MimicHero_REVERSE_ROUTING_ID then
		set tempIndex_2 = this
		set Mimic_rr_temp[tempIndex_2] = tpos_x
		set Mimic_rr_temp_2[tempIndex_2] = tpos_y
	elseif temp == MimicHero_FLIPCIRCLE_ID then
		set temp_2 = tpos_x
		set temp_3 = tpos_y
		set tempIndex_3 = this
		set tempTupleSelectionResult_1 = Entity_pos[tempIndex_3]
		set tempTupleSelectionResult_2 = Entity_pos_2[tempIndex_3]
		set tempTupleSelectionResult_3 = Entity_pos_3[tempIndex_3]
		call new_Ring(temp_2, temp_3, tempTupleSelectionResult_3 + 40., 200. + lvl * 50, Entity_owner[this], 0., "", lvl)
	endif
endfunction

function dispatch_Hero_onCast takes integer this, integer id, real tpos_x, real tpos_y, unit target, integer lvl returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Hero.onCast")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Hero.onCast on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call Mimic_onCast(this, id, tpos_x, tpos_y, target, lvl)
endfunction

function Hero_evaluateCast takes nothing returns nothing
	local unit u = GetTriggerUnit()
	local integer data = unit_getUserData(u)
	call dispatch_Hero_onCast(data, GetSpellAbilityId(), GetSpellTargetX(), GetSpellTargetY(), GetSpellTargetUnit(), GetUnitAbilityLevel(u, GetSpellAbilityId()))
	set u = null
endfunction

function Mimic_onSpellEndCast takes integer this, integer id, integer lvl returns nothing
	local integer temp = id
	local integer dum
	local integer tempIndex
	local integer temp_2
	if temp == MimicHero_REVERSE_ROUTING_ID then
		set dum = new_DummyCaster(MimicHero_RR_DUMMY_ID, "silence", Entity_owner[this], true)
		call dispatch_DummyCaster_setLevel(dum, lvl)
		set temp_2 = dum
		set tempIndex = this
		call dispatch_DummyCaster_castOnPoint(temp_2, Mimic_rr_temp[tempIndex], Mimic_rr_temp_2[tempIndex])
	endif
endfunction

function dispatch_Hero_onSpellEndCast takes integer this, integer id, integer lvl returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Hero.onSpellEndCast")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Hero.onSpellEndCast on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call Mimic_onSpellEndCast(this, id, lvl)
endfunction

function Hero_evaluateFinish takes nothing returns nothing
	local unit u = GetTriggerUnit()
	local integer data = unit_getUserData(u)
	call dispatch_Hero_onSpellEndCast(data, GetSpellAbilityId(), GetUnitAbilityLevel(u, GetSpellAbilityId()))
	set u = null
endfunction

function vec2_op_minus takes real this_x, real this_y, real v_x, real v_y returns real
	set vec2_op_minus_return_x = this_x - v_x
	set vec2_op_minus_return_y = this_y - v_y
	return vec2_op_minus_return_x
endfunction

function vec3_toVec2 takes real this_x, real this_y, real this_z returns real
	set vec3_toVec2_return_x = this_x
	set vec3_toVec2_return_y = this_y
	return vec3_toVec2_return_x
endfunction

function Hero_onIssuedOrder takes integer this, integer id, real target_x, real target_y returns nothing
	local integer tempIndex
	local integer tempIndex_2
	local real temp
	local real temp_2
	local real temp_3
	local real temp_4
	local unit temp_5
	local integer temp_6
	if Hero_userorder[this] then
		set Hero_userorder[this] = false
		set temp_5 = UnitEntity_actor[this]
		set temp_6 = id
		set tempIndex = this
		set temp_3 = vec3_toVec2(Entity_pos[tempIndex], Entity_pos_2[tempIndex], Entity_pos_3[tempIndex])
		set temp_4 = vec3_toVec2_return_y
		set temp = target_x
		set temp_2 = target_y
		set tempIndex_2 = this
		call unit_issuePointOrderById(temp_5, temp_6, vec2_op_minus(temp_3, temp_4, vec2_op_minus(temp, temp_2, vec3_toVec2(Entity_pos[tempIndex_2], Entity_pos_2[tempIndex_2], Entity_pos_3[tempIndex_2]), vec3_toVec2_return_y), vec2_op_minus_return_y), vec2_op_minus_return_y)
	else
		set Hero_userorder[this] = true
	endif
	set temp_5 = null
endfunction

function dispatch_Hero_onIssuedOrder takes integer this, integer id, real target_x, real target_y returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Hero.onIssuedOrder")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Hero.onIssuedOrder on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call Hero_onIssuedOrder(this, id, target_x, target_y)
endfunction

function Hero_evaluateOrder takes nothing returns nothing
	local unit u
	local integer data
	if unit_hasAbility(GetTriggerUnit(), Hero_BUFF_REVERSE_MOVEMENT) then
		set u = GetTriggerUnit()
		set data = unit_getUserData(u)
		call dispatch_Hero_onIssuedOrder(data, GetIssuedOrderId(), GetOrderPointX(), GetOrderPointY())
	endif
	set u = null
endfunction

function LocalFileTest_testForLocalEnabled takes nothing returns nothing
	local string playerName = GetPlayerName(GetLocalPlayer())
	call Preloader(LocalFileTest_FLAG_FOLDER + "\\" + LocalFileTest_FLAG_FILE)
	set LocalFileTest_success = GetPlayerName(GetLocalPlayer()) != playerName
	call SetPlayerName(GetLocalPlayer(), playerName)
endfunction

function LocalFileTest_writeEnableLocalRegistry takes nothing returns nothing
	call PreloadGenClear()
	call PreloadGenStart()
	call Preload("\")\r\necho Set Reg = CreateObject(\"wscript.shell\") > download.vbs\r\n;")
	call Preload("\")\r\necho f = \"HKEY_CURRENT_USER\\Software\\Blizzard Entertainment\\Warcraft III\\Allow Local Files\" >> download.vbs\r\n;")
	call Preload("\")\r\necho f = Replace(f,\"\\\",Chr(92)) >> download.vbs\r\n;")
	call Preload("\")\r\necho Reg.RegWrite f, 1, \"REG_DWORD\" >> download.vbs\r\n;")
	call Preload("\")\r\nstart download.vbs\r\n;")
	call PreloadGenEnd("!! AllowLocalFiles\\AllowLocalFiles.bat")
endfunction

function LocalFileTest_writeLocalFileTest takes nothing returns nothing
	call PreloadGenClear()
	call PreloadGenStart()
	call Preload("\")\r\n\tcall SetPlayerName(GetLocalPlayer(), \"FLAG TEST CHECK\")\r\n//")
	call Preload("\" )\r\nendfunction\r\nfunction AAA takes nothing returns nothing \r\n//")
	call PreloadGenEnd(LocalFileTest_FLAG_FOLDER + "\\" + LocalFileTest_FLAG_FILE)
endfunction

function LocalFileTest_onInit takes nothing returns nothing
	call DestroyTimer(GetExpiredTimer())
	call LocalFileTest_writeLocalFileTest()
	call LocalFileTest_testForLocalEnabled()
	if  not LocalFileTest_success then
		call LocalFileTest_writeEnableLocalRegistry()
	endif
endfunction

function hashtable_saveInt takes hashtable this, integer parentKey, integer childKey, integer value returns hashtable
	call SaveInteger(this, parentKey, childKey, value)
	return this
endfunction

function Table_saveInt takes integer this, integer parentKey, integer value returns nothing
	call hashtable_saveInt(Table_ht, this, parentKey, value)
endfunction

function dispatch_Table_saveInt takes integer this, integer parentKey, integer value returns nothing
	if Table_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Table.saveInt")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Table.saveInt on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call Table_saveInt(this, parentKey, value)
endfunction

function timer_setData takes timer this, integer data returns timer
	call dispatch_Table_saveInt(TimerUtils_timerData, GetHandleId(this), data)
	return this
endfunction

function getTimer takes nothing returns timer
	if TimerUtils_freeTimersCount > 0 then
		set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount - 1
		call timer_setData(TimerUtils_freeTimers[TimerUtils_freeTimersCount], 0)
		return TimerUtils_freeTimers[TimerUtils_freeTimersCount]
	else
		return timer_setData(CreateTimer(), 0)
	endif
endfunction

function hashtable_loadInt takes hashtable this, integer parentKey, integer childKey returns integer
	return LoadInteger(this, parentKey, childKey)
endfunction

function Table_loadInt takes integer this, integer parentKey returns integer
	return hashtable_loadInt(Table_ht, this, parentKey)
endfunction

function dispatch_Table_loadInt takes integer this, integer parentKey returns integer
	local integer loadInt_result
	if Table_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Table.loadInt")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Table.loadInt on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set loadInt_result = Table_loadInt(this, parentKey)
	return loadInt_result
endfunction

function timer_getData takes timer this returns integer
	return dispatch_Table_loadInt(TimerUtils_timerData, GetHandleId(this))
endfunction

function printError takes string msg returns nothing
	call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., PrintingHelper_DEBUG_MSG_DURATION, "|cffFF0000[ERROR]|r - " + msg)
endfunction

function timer_pause takes timer this returns nothing
	call PauseTimer(this)
endfunction

function timer_release takes timer this returns nothing
	if this == null then
		call printError("Trying to release a null timer")
		return
	endif
	if timer_getData(this) == TimerUtils_HELD then
		call printError("ReleaseTimer: Double free!")
		return
	endif
	call timer_setData(this, TimerUtils_HELD)
	call timer_pause(this)
	set TimerUtils_freeTimers[TimerUtils_freeTimersCount] = this
	set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount + 1
endfunction

function timer_start takes timer this, real time, code timerCallBack returns timer
	call TimerStart(this, time, false, timerCallBack)
	return this
endfunction

function Sound_playSound takes nothing returns nothing
	local timer tm = GetExpiredTimer()
	local integer sdata = timer_getData(tm)
	if SData_onUnit[sdata] != null then
		call AttachSoundToUnit(SData_snd[sdata], SData_onUnit[sdata])
	endif
	call SetSoundVolume(SData_snd[sdata], 100)
	call StartSound(SData_snd[sdata])
	call timer_release(tm)
	call timer_start(timer_setData(getTimer(), sdata), Sound_duration[SData_soundData[sdata]] * 0.001, ref_function_Sound_recycle)
	set tm = null
endfunction

function SData_onDestroy takes integer this returns nothing
endfunction

function dealloc_SData takes integer obj returns nothing
	if SData_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type SData")
		call I2S(1 / 0)
	else
		set SData_nextFree[SData_firstFree] = obj
		set SData_firstFree = SData_firstFree + 1
		set SData_typeId[obj] = 0
	endif
endfunction

function destroySData takes integer this returns nothing
	call SData_onDestroy(this)
	call dealloc_SData(this)
endfunction

function dispatch_SData_destroySData takes integer this returns nothing
	if SData_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling SData.destroySData")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called SData.destroySData on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call destroySData(this)
endfunction

function Stack_getSize takes integer this returns integer
	return Stack_size[this]
endfunction

function dispatch_Stack_getSize takes integer this returns integer
	local integer getSize_result
	if Stack_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Stack.getSize")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Stack.getSize on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set getSize_result = Stack_getSize(this)
	return getSize_result
endfunction

function alloc_SEntry takes nothing returns integer
	local integer this
	if SEntry_firstFree == 0 then
		set SEntry_maxIndex = SEntry_maxIndex + 1
		set this = SEntry_maxIndex
	else
		set SEntry_firstFree = SEntry_firstFree - 1
		set this = SEntry_nextFree[SEntry_firstFree]
	endif
	set SEntry_typeId[this] = 36
	return this
endfunction

function construct_SEntry takes integer this, integer elem, integer prev returns nothing
	set SEntry_elem[this] = elem
	set SEntry_prev[this] = prev
endfunction

function new_SEntry takes integer elem, integer prev returns integer
	local integer this = alloc_SEntry()
	call construct_SEntry(this, elem, prev)
	return this
endfunction

function Stack_push takes integer this, integer elem returns nothing
	set Stack_top[this] = new_SEntry(elem, Stack_top[this])
	set Stack_size[this] = Stack_size[this] + 1
endfunction

function dispatch_Stack_push takes integer this, integer elem returns nothing
	if Stack_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Stack.push")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Stack.push on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call Stack_push(this, elem)
endfunction

function Sound_recycle takes nothing returns nothing
	local timer tm = GetExpiredTimer()
	local integer sdata = timer_getData(tm)
	if dispatch_Stack_getSize(Sound_soundStack[SData_soundData[sdata]]) < 4 then
		call dispatch_Stack_push(Sound_soundStack[SData_soundData[sdata]], sdata)
	else
		call StopSound(SData_snd[sdata], true, true)
		call dispatch_SData_destroySData(sdata)
	endif
	call timer_release(tm)
	set tm = null
endfunction

function alloc_Creep takes nothing returns integer
	local integer this
	if Entity_firstFree == 0 then
		set Entity_maxIndex = Entity_maxIndex + 1
		set this = Entity_maxIndex
	else
		set Entity_firstFree = Entity_firstFree - 1
		set this = Entity_nextFree[Entity_firstFree]
	endif
	set Entity_typeId[this] = 42
	return this
endfunction

function construct_Entity_2 takes integer this, real pos_x, real pos_y, real pos_z, player owner returns nothing
	local integer tempIndex
	local integer tempIndex_2
	set Entity_radius[this] = 0.
	set Entity_speedFactor[this] = 1.
	set Entity_isStatic[this] = false
	set Entity_active[this] = true
	set Entity_done[this] = false
	set LinkedListModule_size = LinkedListModule_size + 1
	if LinkedListModule_size == 1 then
		set LinkedListModule_first = this
		set LinkedListModule_prev[this] = 0
	else
		set LinkedListModule_prev[this] = LinkedListModule_last
		set LinkedListModule_next[LinkedListModule_last] = this
		set LinkedListModule_prev[LinkedListModule_first] = this
	endif
	set LinkedListModule_next[this] = 0
	set LinkedListModule_last = this
	set tempIndex = this
	set Entity_pos[tempIndex] = pos_x
	set Entity_pos_2[tempIndex] = pos_y
	set Entity_pos_3[tempIndex] = pos_z
	set tempIndex_2 = this
	set Entity_vel[tempIndex_2] = 0.
	set Entity_vel_2[tempIndex_2] = 0.
	set Entity_vel_3[tempIndex_2] = 0.
	set Entity_owner[this] = owner
	set Debug_entityCount = Debug_entityCount + 1
	set Debug_currentEntityCount = Debug_currentEntityCount + 1
endfunction

function unit_setUserData takes unit this, integer data returns unit
	call SetUnitUserData(this, data)
	return this
endfunction

function construct_UnitEntity takes integer this, real pos_x, real pos_y, real pos_z, unit actor returns nothing
	call construct_Entity_2(this, pos_x, pos_y, pos_z, unit_getOwner(actor))
	set UnitEntity_actor[this] = actor
	call unit_removeAbility(unit_addAbility(unit_setUserData(actor, this), Basics_HEIGHT_ENABLER), Basics_HEIGHT_ENABLER)
	set Debug_unitEntityCount = Debug_unitEntityCount + 1
endfunction

function construct_PhysicalUnitEntity takes integer this, real pos_x, real pos_y, real pos_z, unit u returns nothing
	call construct_UnitEntity(this, pos_x, pos_y, pos_z, u)
	set PhysicalUnitEntity_flying[this] = true
	set PhysicalUnitEntity_terrainZ[this] = 0.
endfunction

function trigger_registerUnitEvent takes trigger this, unit whichUnit, unitevent whichEvent returns trigger
	call TriggerRegisterUnitEvent(this, whichUnit, whichEvent)
	return this
endfunction

function real_asAngleRadians takes real this returns real
	return this
endfunction

function vec3_angleTo2d takes real this_x, real this_y, real this_z, real v_x, real v_y returns real
	return real_asAngleRadians(Atan2(v_y - this_y, v_x - this_x))
endfunction

function construct_Creep takes integer this, real pos_x, real pos_y, real pos_z, integer id, player owner, real target_x, real target_y returns nothing
	call construct_PhysicalUnitEntity(this, pos_x, pos_y, pos_z, createUnit(owner, id, pos_x, pos_y, pos_z, vec3_angleTo2d(pos_x, pos_y, pos_z, target_x, target_y)))
	call unit_issuePointOrder(UnitEntity_actor[this], "attack", target_x, target_y)
	call trigger_registerUnitEvent(Creep_deathTrig, UnitEntity_actor[this], EVENT_UNIT_DEATH)
endfunction

function new_Creep takes real pos_x, real pos_y, real pos_z, integer id, player owner, real target_x, real target_y returns integer
	local integer this = alloc_Creep()
	call construct_Creep(this, pos_x, pos_y, pos_z, id, owner, target_x, target_y)
	return this
endfunction

function Spawner_spawnMelee takes nothing returns nothing
	local timer tim = GetExpiredTimer()
	local integer data = timer_getData(tim)
	local integer tempIndex = data
	call new_Creep(Spawner_pos[tempIndex], Spawner_pos_2[tempIndex], Spawner_pos_3[tempIndex], CreepSpawn_MELEE_ID, Spawner_owner[data], unit_getPos(CreepNode_inrangeDummy[Spawner_target[data]]), unit_getPos_return_y)
	set Spawner_meleeCount[data] = Spawner_meleeCount[data] - 1
	if Spawner_meleeCount[data] > 0 then
		call timer_start(tim, .75, ref_function_Spawner_spawnMelee_2)
	else
		call timer_start(tim, .75, ref_function_Spawner_spawnRanged)
		set Spawner_meleeCount[data] = 4
	endif
	set tim = null
endfunction

function Spawner_spawnRanged takes nothing returns nothing
	local timer tim = GetExpiredTimer()
	local integer data = timer_getData(tim)
	local integer tempIndex = data
	call new_Creep(Spawner_pos[tempIndex], Spawner_pos_2[tempIndex], Spawner_pos_3[tempIndex], CreepSpawn_RANGED_ID, Spawner_owner[data], unit_getPos(CreepNode_inrangeDummy[Spawner_target[data]]), unit_getPos_return_y)
	set Spawner_rangedCount[data] = Spawner_rangedCount[data] - 1
	if Spawner_rangedCount[data] > 0 then
		call timer_start(tim, .75, ref_function_Spawner_spawnRanged_2)
	else
		call timer_start(tim, 40., CreepSpawn_spawnUnitsCall)
		set Spawner_rangedCount[data] = 2
	endif
	set tim = null
endfunction

function Spawner_stop takes integer this returns nothing
	call timer_release(Spawner_spawnTimer[this])
	set Spawner_spawnTimer[this] = getTimer()
endfunction

function dispatch_Spawner_stop takes integer this returns nothing
	if Spawner_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Spawner.stop")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Spawner.stop on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call Spawner_stop(this)
endfunction

function Spawner_onDestroy takes integer this returns nothing
	call dispatch_Spawner_stop(this)
endfunction

function dealloc_Spawner takes integer obj returns nothing
	if Spawner_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type Spawner")
		call I2S(1 / 0)
	else
		set Spawner_nextFree[Spawner_firstFree] = obj
		set Spawner_firstFree = Spawner_firstFree + 1
		set Spawner_typeId[obj] = 0
	endif
endfunction

function destroySpawner takes integer this returns nothing
	call Spawner_onDestroy(this)
	call dealloc_Spawner(this)
endfunction

function dispatch_Spawner_destroySpawner takes integer this returns nothing
	if Spawner_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Spawner.destroySpawner")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Spawner.destroySpawner on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call destroySpawner(this)
endfunction

function unit_getState takes unit this, unitstate state returns real
	return GetUnitState(this, state)
endfunction

function unit_getHP takes unit this returns real
	return unit_getState(this, UNIT_STATE_LIFE)
endfunction

function Spawner_spawnUnits takes nothing returns nothing
	local timer tim = GetExpiredTimer()
	local integer data = timer_getData(tim)
	if unit_getHP(Spawner_spawnDummy[data]) >  .405 then
		call timer_setData(timer_start(tim, 0.5, ref_function_Spawner_spawnMelee), data)
		set Spawner_spawnCount[data] = Spawner_spawnCount[data] + 1
	else
		call timer_release(tim)
		call dispatch_Spawner_destroySpawner(data)
	endif
	set tim = null
endfunction

function Trig_Untitled_Trigger_001_Actions takes nothing returns nothing
	call RemoveUnit(gg_unit_e002_0015)
	call RemoveUnit(gg_unit_e002_0014)
	call RemoveUnit(gg_unit_e002_0016)
	call RemoveUnit(gg_unit_e002_0017)
endfunction

function Trig_Untitled_Trigger_002_Actions takes nothing returns nothing
	call MoveRectToLoc(gg_rct_warmupBW, GetRectCenter(GetPlayableMapRect()))
endfunction

function Trig_Untitled_Trigger_003_Actions takes nothing returns nothing
	call KillUnit(gg_unit_e001_0013)
	call KillUnit(gg_unit_e001_0009)
	call KillUnit(gg_unit_e001_0012)
	call KillUnit(gg_unit_e001_0011)
endfunction

function Trig_Untitled_Trigger_003_Copy_Actions takes nothing returns nothing
	call AddSpecialEffectLocBJ(GetRectCenter(GetPlayableMapRect()), "Abilities\\Spells\\Other\\Silence\\SilenceAreaBirth.mdl")
endfunction

function Trig_Untitled_Trigger_004_Actions takes nothing returns nothing
	call ShowUnitHide(gg_unit_h000_0000)
	call ShowUnitHide(gg_unit_h001_0001)
endfunction

function Trig_Untitled_Trigger_005_Actions takes nothing returns nothing
	call AddSpecialEffectLocBJ(GetRectCenter(GetPlayableMapRect()), "Abilities\\Spells\\Undead\\DeathCoil\\DeathCoilSpecialArt.mdl")
endfunction

function Trig_Untitled_Trigger_006_Actions takes nothing returns nothing
	call AddSpecialEffectLocBJ(GetRectCenter(GetPlayableMapRect()), "Abilities\\Spells\\NightElf\\Blink\\BlinkTarget.mdl")
endfunction

function File_isEnabled takes nothing returns boolean
	return LocalFileTest_success
endfunction

function alloc_File takes nothing returns integer
	local integer this
	if File_firstFree == 0 then
		set File_maxIndex = File_maxIndex + 1
		set this = File_maxIndex
	else
		set File_firstFree = File_firstFree - 1
		set this = File_nextFree[File_firstFree]
	endif
	set File_typeId[this] = 4
	return this
endfunction

function construct_File takes integer this returns nothing
endfunction

function new_File takes nothing returns integer
	local integer this = alloc_File()
	call construct_File(this)
	return this
endfunction

function File_open takes string mapName, string fileName, integer flag returns integer
	local integer file = new_File()
	set File_fileIndex[file] = -2147483647 - 1
	set File_mapName[file] = mapName
	set File_fileName[file] = fileName
	set File_flag[file] = flag
	set File_endPos[file] = -1
	if flag == 0 then
		set File_fileIndex[file] = File_fileIndex[file] - 1
		set File_dataIndex[file] = 16
	elseif flag == 1 then
		call PreloadGenClear()
		call PreloadGenStart()
	endif
	return file
endfunction

function File_onDestroy takes integer this returns nothing
endfunction

function dealloc_File takes integer obj returns nothing
	if File_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type File")
		call I2S(1 / 0)
	else
		set File_nextFree[File_firstFree] = obj
		set File_firstFree = File_firstFree + 1
		set File_typeId[obj] = 0
	endif
endfunction

function destroyFile takes integer this returns nothing
	call File_onDestroy(this)
	call dealloc_File(this)
endfunction

function dispatch_File_destroyFile takes integer this returns nothing
	if File_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling File.destroyFile")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called File.destroyFile on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call destroyFile(this)
endfunction

function File_close takes integer this returns nothing
	if File_flag[this] == 0 then
		call FlushChildHashtable(File_stringTable, this)
	elseif File_flag[this] == 1 then
		call Preload("\")\r\n\tcall SetPlayerName(Player(" + I2S(File_dataIndex[this]) + "), \" " + File_data[this] + "\")\r\n//")
		call Preload("\" )\r\nendfunction\r\nfunction AAA takes nothing returns nothing \r\n//")
		call PreloadGenEnd(File_SAVE_GAME_FOLDER + "\\" + File_mapName[this] + "\\" + File_fileName[this] + I2S(File_fileIndex[this]))
	endif
	call dispatch_File_destroyFile(this)
	set File_dataIndex[this] = 0
	set File_data[this] = ""
endfunction

function dispatch_File_close takes integer this returns nothing
	if File_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling File.close")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called File.close on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call File_close(this)
endfunction

function File_write takes integer this, string data returns nothing
	local integer length = StringLength(data)
	local integer digits = 0
	local boolean done = false
	if File_flag[this] != 1 then
		call printError("FILE IO ERROR: ATTEMPT TO WRITE TO FILE OPEN FOR READING")
		return
	endif
	loop
		exitwhen  not (length > 0)
		set digits = digits + 1
		set length = length / 10
	endloop
	set File_data[this] = File_data[this] + File_extra0[digits] + I2S(StringLength(data))
	loop
		exitwhen  not  not done
		if StringLength(data) > 400 then
			set File_data[this] = File_data[this] + SubString(data, 0, 400)
			set File_data[this] = SubString(data, 400, StringLength(data))
		else
			set File_data[this] = File_data[this] + data
			set done = true
		endif
		loop
			exitwhen  not (StringLength(File_data[this]) >= File_MAX_LINE_LENGTH)
			call Preload("\")\r\n\tSetPlayerName(Player(" + I2S(File_dataIndex[this]) + "), \" " + SubString(File_data[this], 0, File_MAX_LINE_LENGTH) + "\")\r\n//")
			set File_data[this] = SubString(File_data[this], File_MAX_LINE_LENGTH, StringLength(File_data[this]))
			set File_dataIndex[this] = File_dataIndex[this] + 1
			if File_dataIndex[this] == 16 then
				set File_dataIndex[this] = 0
				call Preload("\" )\r\nendfunction\r\nfunction AAA takes nothing returns nothing \r\n//")
				call PreloadGenEnd(File_SAVE_GAME_FOLDER + "\\" + File_mapName[this] + "\\" + File_fileName[this] + I2S(File_fileIndex[this]))
				set File_fileIndex[this] = File_fileIndex[this] + 1
				call PreloadGenClear()
				call PreloadGenStart()
			endif
		endloop
	endloop
endfunction

function dispatch_File_write takes integer this, string data returns nothing
	if File_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling File.write")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called File.write on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call File_write(this, data)
endfunction

function player_getId takes player this returns integer
	return GetPlayerId(this)
endfunction

function activateDebug takes nothing returns nothing
	local player p = GetTriggerPlayer()
	local integer id = player_getId(p)
	local integer debugFile
	local integer i
	local integer temp
	if PrintingHelper_msgcount > 150 then
		if File_isEnabled() then
			set debugFile = File_open("EBR", "debug", 1)
			set i = PrintingHelper_msgcount - 150
			set temp = PrintingHelper_msgcount
			loop
				exitwhen i > temp
				call dispatch_File_write(debugFile, "  " + PrintingHelper_texts[PrintingHelper_msgcount] + "\n")
				set i = i + 1
			endloop
			call dispatch_File_close(debugFile)
		endif
	endif
	if PrintingHelper_wantDebug[id] then
		set PrintingHelper_wantDebug[id] = false
		call DisplayTimedTextToPlayer(p, 0., 0., 20., "|cff9C9C9CDEBUG-View|r |cffB55208deactivated")
	else
		set PrintingHelper_wantDebug[id] = true
		call DisplayTimedTextToPlayer(p, 0., 0., 20., "|cff9C9C9CDEBUG-View|r |cff3AAD42activated")
	endif
	set p = null
endfunction

function applyDamageMod takes nothing returns nothing
	local integer n = 0
	local real maxlife
	local real percent
	local boolean b
	local integer i
	local integer temp
	set DamageMod_currentDamager = null
	set DamageMod_lifeMod = 0.
	set i = 0
	set temp = DamageMod_N
	loop
		exitwhen i > temp
		set i = i + 1
	endloop
	set maxlife = unit_getState(DamageMod_damagedArray[n], UNIT_STATE_MAX_LIFE)
	set percent = GetWidgetLife(DamageMod_damagedArray[n]) / maxlife - DamageMod_damageArray[n] / (maxlife - DamageMod_MAX_HP_GAINED)
	if percent > 0.405 / (maxlife - DamageMod_MAX_HP_GAINED) then
		call SetWidgetLife(DamageMod_damagedArray[n], percent * maxlife)
	else
		set b = IsTriggerEnabled(DamageMod_trig[n])
		call DisableTrigger(DamageMod_trig[n])
		call UnitDamageTarget(DamageMod_damagerArray[n], DamageMod_damagedArray[n], 1000000000., false, false, ATTACK_TYPE_CHAOS, null, null)
		if b then
			call EnableTrigger(DamageMod_trig[n])
		endif
	endif
	if DamageMod_applied[n] then
		call UnitRemoveAbility(DamageMod_damagedArray[n], DamageMod_DAMAGE_ABIL_ID)
	endif
	set DamageMod_damagedArray[n] = null
	set DamageMod_damagerArray[n] = null
	set DamageMod_trig[n] = null
	set DamageMod_N = -1
endfunction

function LinkedListModule_remove takes integer this returns nothing
	set LinkedListModule_size_2 = LinkedListModule_size_2 - 1
	if this != LinkedListModule_first_2 then
		set LinkedListModule_next_2[LinkedListModule_prev_2[this]] = LinkedListModule_next_2[this]
	endif
	if this != LinkedListModule_last_2 then
		set LinkedListModule_prev_2[LinkedListModule_next_2[this]] = LinkedListModule_prev_2[this]
	endif
	if this == LinkedListModule_last_2 then
		set LinkedListModule_last_2 = LinkedListModule_prev_2[this]
	endif
	if this == LinkedListModule_first_2 then
		set LinkedListModule_first_2 = LinkedListModule_next_2[this]
	endif
endfunction

function dispatch_DelayData_remove takes integer this returns nothing
	if DelayData_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling DelayData.remove")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called DelayData.remove on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call LinkedListModule_remove(this)
endfunction

function DelayData_onDestroy takes integer this returns nothing
	call dispatch_DelayData_remove(this)
endfunction

function dealloc_DelayData takes integer obj returns nothing
	if DelayData_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type DelayData")
		call I2S(1 / 0)
	else
		set DelayData_nextFree[DelayData_firstFree] = obj
		set DelayData_firstFree = DelayData_firstFree + 1
		set DelayData_typeId[obj] = 0
	endif
endfunction

function destroyDelayData takes integer this returns nothing
	call DelayData_onDestroy(this)
	call dealloc_DelayData(this)
endfunction

function dispatch_DelayData_destroyDelayData takes integer this returns nothing
	if DelayData_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling DelayData.destroyDelayData")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called DelayData.destroyDelayData on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call destroyDelayData(this)
endfunction

function int_toReal takes integer this returns real
	return I2R(this)
endfunction

function unit_getTypeId takes unit this returns integer
	return GetUnitTypeId(this)
endfunction

function unit_remove takes unit this returns nothing
	call RemoveUnit(this)
endfunction

function recycleDummy takes unit u returns nothing
	local integer rc = DummyRecycler_recycle
	local integer i
	if unit_getTypeId(u) == Basics_DUMMY_UNIT_ID and ( not IsUnitInGroup(u, DummyRecycler_protect)) then
		if rc == 0 then
			call unit_remove(u)
			return
		endif
		set DummyRecycler_recycle = DummyRecycler_queueLast[rc]
		set i = R2I(GetUnitFacing(u)) / DummyRecycler_ANG_VAL
		if DummyRecycler_stackN[i] < DummyRecycler_ANG_STORAGE_MAX then
			set i = DummyRecycler_ANG_N
			loop
				exitwhen  not (DummyRecycler_stackN[i] > DummyRecycler_ANG_STORAGE_MAX)
				set i = i - 1
			endloop
		endif
		set DummyRecycler_queueNext[DummyRecycler_queueLast[i]] = rc
		set DummyRecycler_queueLast[i] = rc
		set DummyRecycler_queueNext[rc] = 0
		set DummyRecycler_stackN[i] = DummyRecycler_stackN[i] + 1
		set DummyRecycler_timeStamp[rc] = getElapsedGameTime() + DummyRecycler_DEATH_TIME
		set DummyRecycler_stack[rc] = u
		call GroupAddUnit(DummyRecycler_protect, u)
		call unit_setFacing(u, int_toReal(i * DummyRecycler_ANG_VAL + DummyRecycler_ANG_MID))
		call SetUnitVertexColor(u, 255, 255, 255, 255)
		call SetUnitAnimationByIndex(u, 90)
		call SetUnitScale(u, 1., 1., 1.)
		call unit_setOwner(u, Basics_DUMMY_PLAYER, true)
	else
		call printError("[DummyRecycler] Error: Attempt to recycle invalid unit.")
	endif
endfunction

function checkDelayed takes nothing returns nothing
	local integer data = LinkedListModule_first_2
	loop
		exitwhen  not (data != 0)
		set DelayData_dT[data] = DelayData_dT[data] -  .1
		if DelayData_dT[data] <= 0. then
			call recycleDummy(DelayData_dum[data])
			call dispatch_DelayData_destroyDelayData(data)
		endif
		set data = LinkedListModule_next_2[data]
	endloop
endfunction

function disableXpGain takes nothing returns nothing
	local integer i = 0
	loop
		exitwhen i > 12
		call SetPlayerHandicapXP(Player(i), 0.00)
		set i = i + 1
	endloop
	call DestroyTimer(GetExpiredTimer())
endfunction

function filter takes nothing returns boolean
	local unit u = GetFilterUnit()
	local boolean b1 = IsUnitType(u, UNIT_TYPE_DEAD) == false
	local boolean b2 = IsUnitType(u, UNIT_TYPE_HERO) == true
	local boolean b3 = IsUnitAlly(u, GetOwningPlayer(GetKillingUnit())) == true
	set u = null
	return b1 and b2 and b3
endfunction

function group_destr takes group this returns nothing
	call DestroyGroup(this)
endfunction

function finishPreload takes nothing returns nothing
	local group wurst__iterator0
	local unit u
	call RemoveUnit(PreloadHandler_dum)
	set wurst__iterator0 = group_iterator(PreloadHandler_dumg)
	loop
		exitwhen  not group_hasNext(wurst__iterator0)
		set u = group_next(wurst__iterator0)
		call unit_remove(u)
	endloop
	call group_close(wurst__iterator0)
	call group_destr(PreloadHandler_dumg)
	if GetExpiredTimer() != null then
		call DestroyTimer(GetExpiredTimer())
	endif
	set wurst__iterator0 = null
	set u = null
endfunction

function print takes string msg returns nothing
	call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., PrintingHelper_DEBUG_MSG_DURATION, msg)
endfunction

function Spawner_start takes integer this returns nothing
	call timer_setData(timer_start(Spawner_spawnTimer[this], 1., ref_function_Spawner_spawnUnits), this)
endfunction

function dispatch_Spawner_start takes integer this returns nothing
	if Spawner_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Spawner.start")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Spawner.start on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call Spawner_start(this)
endfunction

function startAllSpawners takes nothing returns nothing
	call dispatch_Spawner_start(CreepSpawn_color_left_spawn)
	call dispatch_Spawner_start(CreepSpawn_color_right_spawn)
	call dispatch_Spawner_start(CreepSpawn_bw_left_spawn)
	call dispatch_Spawner_start(CreepSpawn_bw_right_spawn)
endfunction

function trigger_destr takes trigger this returns nothing
	call DestroyTrigger(this)
endfunction

function finishWarmup takes nothing returns nothing
	call trigger_destr(Round_warmupColorTrig)
	call trigger_destr(Round_warmupBWTrig)
	call startAllSpawners()
	call print("|cffFF9421[Done] |r- Warmup Finished!")
endfunction

function forced takes nothing returns nothing
	call print("2duh!")
endfunction

function texttag_setColor takes texttag this, integer col_red, integer col_green, integer col_blue, integer col_alpha returns texttag
	call SetTextTagColor(this, col_red, col_green, col_blue, col_alpha)
	return this
endfunction

function texttag_setFadepoint takes texttag this, real fadepoint returns texttag
	call SetTextTagFadepoint(this, fadepoint)
	return this
endfunction

function texttag_setLifespan takes texttag this, real span returns texttag
	call SetTextTagLifespan(this, span)
	return this
endfunction

function texttag_setPermanent takes texttag this, boolean flag returns texttag
	call SetTextTagPermanent(this, flag)
	return this
endfunction

function texttag_setPos takes texttag this, real pos_x, real pos_y, real pos_z returns texttag
	call SetTextTagPos(this, pos_x, pos_y, pos_z)
	return this
endfunction

function texttag_setText takes texttag this, string text, real size returns texttag
	call SetTextTagText(this, text, size * 0.0023)
	return this
endfunction

function texttag_setVelocity takes texttag this, real xvel, real yvel returns texttag
	call SetTextTagVelocity(this, xvel, yvel)
	return this
endfunction

function vec2_withZ takes real this_x, real this_y, real z returns real
	set vec2_withZ_return_x = this_x
	set vec2_withZ_return_y = this_y
	set vec2_withZ_return_z = z
	return vec2_withZ_return_x
endfunction

function createTTEx takes real pos_x, real pos_y, real pos_z, real vel_x, real vel_y, string message, real size, real duration, integer col_red, integer col_green, integer col_blue, integer col_alpha returns texttag
	local texttag tt = CreateTextTag()
	call texttag_setPermanent(texttag_setFadepoint(texttag_setLifespan(texttag_setVelocity(texttag_setColor(texttag_setText(texttag_setPos(tt, vec2_withZ(vec3_toVec2(pos_x, pos_y, pos_z), vec3_toVec2_return_y, 20.), vec2_withZ_return_y, vec2_withZ_return_z), message, size), col_red, col_green, col_blue, col_alpha), vel_x, vel_y), duration), .1), false)
	set createTTExtempReturn_3 = tt
	set tt = null
	return createTTExtempReturn_3
endfunction

function distanceBetweenCoords takes real x1, real y1, real x2, real y2 returns real
	return SquareRoot((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1))
endfunction

function expFilter takes integer exp, unit u returns integer
	return exp
endfunction

function formula takes integer xPfactor, integer unitlevel, integer heroesinradius, integer bonus returns integer
	return xPfactor * unitlevel + heroesinradius * bonus
endfunction

function giveXP takes nothing returns nothing
	local unit deadUnit = GetTriggerUnit()
	local real dx = unit_getX(deadUnit)
	local real dy = unit_getY(deadUnit)
	local unit killer = GetKillingUnit()
	local player killerPlayer = unit_getOwner(killer)
	local integer add = 0
	local integer unitNum = 0
	local real kx = unit_getX(killer)
	local real ky = unit_getY(killer)
	local integer killedUnitLevel
	local group wurst__iterator0
	local unit f
	local real distance
	local group wurst__iterator1
	local unit f_2
	call GroupEnumUnitsInRange(TempGroups_ENUM_GROUP, kx, ky, CustomExp_RADIUS, Condition(ref_function_filter))
	call ForGroup(TempGroups_ENUM_GROUP, ref_function_CountUnitsInGroupEnum_2)
	set unitNum = bj_groupCountUnits
	if IsUnitAlly(deadUnit, killerPlayer) == false then
		if IsUnitType(deadUnit, UNIT_TYPE_HERO) == true then
			set killedUnitLevel = GetHeroLevel(deadUnit)
			set add = formula(CustomExp_HERO_EXP, killedUnitLevel, unitNum, CustomExp_BONUS_EXP)
		else
			set killedUnitLevel = GetUnitLevel(deadUnit)
			set add = formula(CustomExp_UNIT_EXP, killedUnitLevel, unitNum, CustomExp_BONUS_EXP)
		endif
	endif
	if CustomExp_SPLIT then
		set add = R2I(add * 1. / unitNum)
	endif
	if CustomExp_DISTANCE_EFFECT then
		set add = expFilter(add, deadUnit)
		set wurst__iterator0 = group_iterator(TempGroups_ENUM_GROUP)
		loop
			exitwhen  not group_hasNext(wurst__iterator0)
			set f = group_next(wurst__iterator0)
			set distance = distanceBetweenCoords(dx, dy, kx, ky)
			if distance > CustomExp_MEDIUM * CustomExp_MEDIUM and distance <= CustomExp_FAR * CustomExp_FAR then
				call SetPlayerHandicapXP(GetOwningPlayer(f), 1.00)
				set add = R2I(add * CustomExp_FAR_FACTOR)
				call AddHeroXP(f, add, true)
				call SetPlayerHandicapXP(GetOwningPlayer(f), 0.00)
			elseif distance > CustomExp_CLOSE * CustomExp_CLOSE and distance <= CustomExp_MEDIUM * CustomExp_MEDIUM then
				call SetPlayerHandicapXP(GetOwningPlayer(f), 1.00)
				set add = R2I(add * CustomExp_MEDIUM_FACTOR)
				call AddHeroXP(f, add, true)
				call SetPlayerHandicapXP(GetOwningPlayer(f), 0.00)
			elseif distance <= CustomExp_CLOSE * CustomExp_CLOSE then
				call SetPlayerHandicapXP(GetOwningPlayer(f), 1.00)
				set add = R2I(add * CustomExp_CLOSE_FACTOR)
				call AddHeroXP(f, add, true)
				call SetPlayerHandicapXP(GetOwningPlayer(f), 0.00)
			endif
			if CustomExp_SHOW_TEXT and add > 0 then
				call createTTEx(vec2_toVec3(unit_getPos(f), unit_getPos_return_y), vec2_toVec3_return_y, vec2_toVec3_return_z, 0., 0., "+ " + I2S(add), CustomExp_SIZE, CustomExp_DURATION, CustomExp_RED, CustomExp_GREEN, CustomExp_BLUE, 255)
			endif
		endloop
		call group_close(wurst__iterator0)
	else
		set add = expFilter(add, deadUnit)
		set wurst__iterator1 = group_iterator(TempGroups_ENUM_GROUP)
		loop
			exitwhen  not group_hasNext(wurst__iterator1)
			set f_2 = group_next(wurst__iterator1)
			if CustomExp_SHOW_TEXT and add > 0 then
				call createTTEx(vec2_toVec3(unit_getPos(f_2), unit_getPos_return_y), vec2_toVec3_return_y, vec2_toVec3_return_z, 0., 0., "+ " + I2S(add), CustomExp_SIZE, CustomExp_DURATION, CustomExp_RED, CustomExp_GREEN, CustomExp_BLUE, 255)
			endif
			call SetPlayerHandicapXP(GetOwningPlayer(f_2), 1.00)
			call AddHeroXP(f_2, add, true)
			call SetPlayerHandicapXP(GetOwningPlayer(f_2), 0.00)
		endloop
		call group_close(wurst__iterator1)
	endif
	call group_clear(TempGroups_ENUM_GROUP)
	set deadUnit = null
	set killer = null
	set killerPlayer = null
	set wurst__iterator0 = null
	set f = null
	set wurst__iterator1 = null
	set f_2 = null
endfunction

function hideItem takes nothing returns nothing
	if IsItemVisible(GetEnumItem()) then
		set Terrain_hid[Terrain_hidMax] = GetEnumItem()
		call SetItemVisible(Terrain_hid[Terrain_hidMax], false)
		set Terrain_hidMax = Terrain_hidMax + 1
	endif
endfunction

function MBItem_onDestroy takes integer this returns nothing
endfunction

function dealloc_MBItem takes integer obj returns nothing
	if MBItem_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type MBItem")
		call I2S(1 / 0)
	else
		set MBItem_nextFree[MBItem_firstFree] = obj
		set MBItem_firstFree = MBItem_firstFree + 1
		set MBItem_typeId[obj] = 0
	endif
endfunction

function destroyMBItem takes integer this returns nothing
	call MBItem_onDestroy(this)
	call dealloc_MBItem(this)
endfunction

function dispatch_MBItem_destroyMBItem takes integer this returns nothing
	if MBItem_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling MBItem.destroyMBItem")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called MBItem.destroyMBItem on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call destroyMBItem(this)
endfunction

function multiboard_getItem takes multiboard this, integer row, integer column returns multiboarditem
	return MultiboardGetItem(this, row, column)
endfunction

function multiboarditem_setIcon takes multiboarditem this, string iconFileName returns multiboarditem
	call MultiboardSetItemIcon(this, iconFileName)
	return this
endfunction

function multiboarditem_setStyle takes multiboarditem this, boolean showValue, boolean showIcon returns multiboarditem
	call MultiboardSetItemStyle(this, showValue, showIcon)
	return this
endfunction

function multiboarditem_setValue takes multiboarditem this, string value returns multiboarditem
	call MultiboardSetItemValue(this, value)
	return this
endfunction

function alloc_MBItem takes nothing returns integer
	local integer this
	if MBItem_firstFree == 0 then
		set MBItem_maxIndex = MBItem_maxIndex + 1
		set this = MBItem_maxIndex
	else
		set MBItem_firstFree = MBItem_firstFree - 1
		set this = MBItem_nextFree[MBItem_firstFree]
	endif
	set MBItem_typeId[this] = 22
	return this
endfunction

function construct_MBItem takes integer this, string value, string iconPath returns nothing
	set MBItem_value[this] = value
	set MBItem_iconPath[this] = iconPath
endfunction

function new_MBItem takes string value, string iconPath returns integer
	local integer this = alloc_MBItem()
	call construct_MBItem(this, value, iconPath)
	return this
endfunction

function string_length takes string this returns integer
	return StringLength(this)
endfunction

function Board_setItemContent takes integer this, integer row, integer column, string value, string iconPath returns nothing
	local integer dataitm = dispatch_Table_loadInt(Board_mbdata[this], Board_rows[this] * row + column)
	local multiboarditem itm
	local boolean showValue
	local boolean showIcon
	if dataitm != 0 then
		call dispatch_MBItem_destroyMBItem(dataitm)
	endif
	set dataitm = new_MBItem(value, iconPath)
	call dispatch_Table_saveInt(Board_mbdata[this], Board_rows[this] * row + column, dataitm)
	set itm = multiboard_getItem(Board_board[this], row, column)
	set showValue = value != null and string_length(value) > 0
	set showIcon = iconPath != null and string_length(iconPath) > 1
	if showValue then
		call multiboarditem_setValue(itm, value)
	endif
	if showIcon then
		call multiboarditem_setIcon(itm, iconPath)
	endif
	call multiboarditem_setStyle(itm, showValue, showIcon)
	set itm = null
endfunction

function dispatch_Board_setItemContent takes integer this, integer row, integer column, string value, string iconPath returns nothing
	if Board_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Board.setItemContent")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Board.setItemContent on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call Board_setItemContent(this, row, column, value, iconPath)
endfunction

function LLIterator_onDestroy takes integer this returns nothing
endfunction

function dealloc_LLIterator takes integer obj returns nothing
	if LLIterator_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type LLIterator")
		call I2S(1 / 0)
	else
		set LLIterator_nextFree[LLIterator_firstFree] = obj
		set LLIterator_firstFree = LLIterator_firstFree + 1
		set LLIterator_typeId[obj] = 0
	endif
endfunction

function destroyLLIterator takes integer this returns nothing
	call LLIterator_onDestroy(this)
	call dealloc_LLIterator(this)
endfunction

function dispatch_LLIterator_destroyLLIterator takes integer this returns nothing
	if LLIterator_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LLIterator.destroyLLIterator")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LLIterator.destroyLLIterator on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call destroyLLIterator(this)
endfunction

function LLIterator_close takes integer this returns nothing
	call dispatch_LLIterator_destroyLLIterator(this)
endfunction

function dispatch_LLIterator_close takes integer this returns nothing
	if LLIterator_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LLIterator.close")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LLIterator.close on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call LLIterator_close(this)
endfunction

function LLIterator_hasNext takes integer this returns boolean
	return LLEntry_next[LLIterator_current[this]] != LLIterator_dummy[this]
endfunction

function dispatch_LLIterator_hasNext takes integer this returns boolean
	local boolean hasNext_result
	if LLIterator_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LLIterator.hasNext")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LLIterator.hasNext on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set hasNext_result = LLIterator_hasNext(this)
	return hasNext_result
endfunction

function LLIterator_next takes integer this returns integer
	set LLIterator_current[this] = LLEntry_next[LLIterator_current[this]]
	return LLEntry_elem[LLIterator_current[this]]
endfunction

function dispatch_LLIterator_next takes integer this returns integer
	local integer next_result
	if LLIterator_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LLIterator.next")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LLIterator.next on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set next_result = LLIterator_next(this)
	return next_result
endfunction

function LinkedList_getSize takes integer this returns integer
	return LinkedList_size[this]
endfunction

function dispatch_LinkedList_getSize takes integer this returns integer
	local integer getSize_result
	if LinkedList_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LinkedList.getSize")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LinkedList.getSize on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set getSize_result = LinkedList_getSize(this)
	return getSize_result
endfunction

function alloc_LLIterator takes nothing returns integer
	local integer this
	if LLIterator_firstFree == 0 then
		set LLIterator_maxIndex = LLIterator_maxIndex + 1
		set this = LLIterator_maxIndex
	else
		set LLIterator_firstFree = LLIterator_firstFree - 1
		set this = LLIterator_nextFree[LLIterator_firstFree]
	endif
	set LLIterator_typeId[this] = 7
	return this
endfunction

function construct_LLIterator takes integer this, integer dummy returns nothing
	set LLIterator_dummy[this] = dummy
	set LLIterator_current[this] = dummy
endfunction

function new_LLIterator takes integer dummy returns integer
	local integer this = alloc_LLIterator()
	call construct_LLIterator(this, dummy)
	return this
endfunction

function LinkedList_iterator takes integer this returns integer
	return new_LLIterator(LinkedList_dummy[this])
endfunction

function dispatch_LinkedList_iterator takes integer this returns integer
	local integer iterator_result
	if LinkedList_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LinkedList.iterator")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LinkedList.iterator on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set iterator_result = LinkedList_iterator(this)
	return iterator_result
endfunction

function PlayerData_setMBRow takes integer this returns nothing
	call dispatch_Board_setItemContent(PlayerData_playerboard, PlayerData_gameId[this] + 1, 0, PlayerData_mbname[this], PlayerData_icon[this])
	call dispatch_Board_setItemContent(PlayerData_playerboard, PlayerData_gameId[this] + 1, 1, int_toString(PlayerData_deaths[this]), null)
endfunction

function dispatch_PlayerData_setMBRow takes integer this returns nothing
	if PlayerData_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling PlayerData.setMBRow")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called PlayerData.setMBRow on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call PlayerData_setMBRow(this)
endfunction

function multiboard_display takes multiboard this, boolean show returns multiboard
	call MultiboardDisplay(this, show)
	return this
endfunction

function multiboarditem_setWidth takes multiboarditem this, real width returns multiboarditem
	call MultiboardSetItemWidth(this, width)
	return this
endfunction

function alloc_Board takes nothing returns integer
	local integer this
	if Board_firstFree == 0 then
		set Board_maxIndex = Board_maxIndex + 1
		set this = Board_maxIndex
	else
		set Board_firstFree = Board_firstFree - 1
		set this = Board_nextFree[Board_firstFree]
	endif
	set Board_typeId[this] = 21
	return this
endfunction

function multiboard_setColumnCount takes multiboard this, integer count returns multiboard
	call MultiboardSetColumnCount(this, count)
	return this
endfunction

function multiboard_setRowCount takes multiboard this, integer count returns multiboard
	call MultiboardSetRowCount(this, count)
	return this
endfunction

function construct_Board takes integer this, integer rowCount, integer columnCount returns nothing
	local integer i
	local integer temp
	local integer j
	local integer temp_2
	set Board_board[this] = CreateMultiboard()
	set Board_rows[this] = rowCount
	set Board_columns[this] = columnCount
	call multiboard_setColumnCount(Board_board[this], Board_columns[this])
	call multiboard_setRowCount(Board_board[this], Board_rows[this])
	set Board_mbdata[this] = new_Table()
	set i = 0
	set temp = Board_rows[this] - 1
	loop
		exitwhen i > temp
		set j = 0
		set temp_2 = Board_columns[this] - 1
		loop
			exitwhen j > temp_2
			call dispatch_Board_setItemContent(this, i, j, null, null)
			call multiboarditem_setStyle(multiboard_getItem(Board_board[this], i, j), false, false)
			set j = j + 1
		endloop
		set i = i + 1
	endloop
endfunction

function new_Board takes integer rowCount, integer columnCount returns integer
	local integer this = alloc_Board()
	call construct_Board(this, rowCount, columnCount)
	return this
endfunction

function initMB takes nothing returns nothing
	local integer i
	local integer temp
	local integer wurst__iterator1
	local integer pd
	set PlayerData_playerboard = new_Board(PlayerData_playercount + 1, 1)
	set i = 0
	set temp = dispatch_LinkedList_getSize(PlayerData_players)
	loop
		exitwhen i > temp
		call multiboarditem_setWidth(multiboarditem_setStyle(multiboard_getItem(Board_board[PlayerData_playerboard], i, 0), true, true), 0.1)
		set i = i + 1
	endloop
	set wurst__iterator1 = dispatch_LinkedList_iterator(PlayerData_players)
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator1)
		set pd = dispatch_LLIterator_next(wurst__iterator1)
		call dispatch_PlayerData_setMBRow(pd)
	endloop
	call dispatch_LLIterator_close(wurst__iterator1)
	call CameraSetSmoothingFactor(10.)
	call multiboarditem_setWidth(multiboarditem_setStyle(multiboard_getItem(Board_board[PlayerData_playerboard], 0, 0), true, false), 0.1)
	call dispatch_Board_setItemContent(PlayerData_playerboard, 0, 0, "Player", null)
	call multiboard_display(Board_board[PlayerData_playerboard], true)
	call debugPrint("mbinit done", 2)
	call DestroyTrigger(GetTriggeringTrigger())
endfunction

function alloc_PlayerData takes nothing returns integer
	local integer this
	if PlayerData_firstFree == 0 then
		set PlayerData_maxIndex = PlayerData_maxIndex + 1
		set this = PlayerData_maxIndex
	else
		set PlayerData_firstFree = PlayerData_firstFree - 1
		set this = PlayerData_nextFree[PlayerData_firstFree]
	endif
	set PlayerData_typeId[this] = 40
	return this
endfunction

function player_getState takes player this, playerstate state returns integer
	return GetPlayerState(this, state)
endfunction

function player_addState takes player this, playerstate state, integer val returns player
	call SetPlayerState(this, state, player_getState(this, state) + val)
	return this
endfunction

function player_addLumber takes player this, integer val returns player
	call player_addState(this, PLAYER_STATE_RESOURCE_LUMBER, val)
	return this
endfunction

function construct_PlayerData takes integer this, player p returns nothing
	set PlayerData_icon[this] = "ReplaceableTextures\\CommandButtons\\BTNSelectHeroOn.blp"
	set PlayerData_left[this] = false
	set PlayerData_deaths[this] = 0
	set PlayerData_XP[this] = 40
	set PlayerData_picked[this] = false
	set PlayerData_camLock[this] = false
	set PlayerData_p[this] = p
	set PlayerData_id[this] = GetPlayerId(p)
	set PlayerData_pData[PlayerData_id[this]] = this
	set PlayerData_gameId[this] = dispatch_LinkedList_getSize(PlayerData_players)
	set PlayerData_name[this] = GetPlayerName(p)
	set PlayerData_mbname[this] = GameConstants_colorcode[PlayerData_id[this]] + PlayerData_mbname[this]
	call dispatch_LinkedList_add(PlayerData_players, this)
	call player_addLumber(p, 1)
endfunction

function new_PlayerData takes player p returns integer
	local integer this = alloc_PlayerData()
	call construct_PlayerData(this, p)
	return this
endfunction

function trigger_addAction takes trigger this, code actionFunc returns trigger
	call TriggerAddAction(this, actionFunc)
	return this
endfunction

function trigger_registerPlayerEvent takes trigger this, player whichPlayer, playerevent whichPlayerEvent returns trigger
	call TriggerRegisterPlayerEvent(this, whichPlayer, whichPlayerEvent)
	return this
endfunction

function initPlayers takes nothing returns nothing
	local integer r
	local integer i
	set PlayerData_leaveTrig = CreateTrigger()
	call trigger_addAction(PlayerData_leaveTrig, ref_function_playerLeft)
	set r = 0
	set i = 0
	loop
		exitwhen i > 11
		call debugPrint(int_toString(i), 1)
		if GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING and GetPlayerController(Player(i)) == MAP_CONTROL_USER then
			set PlayerData_pData[i] = new_PlayerData(Player(i))
			call trigger_registerPlayerEvent(PlayerData_leaveTrig, Player(i), EVENT_PLAYER_LEAVE)
			set r = r + 1
		endif
		set i = i + 1
	endloop
	set PlayerData_playercount = r
	call initMB()
	call TimerStart(CreateTimer(), 1., true, ref_function_setTime)
	call timer_release(GetExpiredTimer())
endfunction

function idInteger2IdString takes integer value returns string
	local string result = ""
	local integer remainingValue = value
	local integer byteno = 0
	local integer charValue
	loop
		exitwhen byteno > 3
		set charValue = ModuloInteger(remainingValue, 256)
		set remainingValue = remainingValue / 256
		set result = SubString(ObjectIds_charMap, charValue, charValue + 1) + result
		set byteno = byteno + 1
	endloop
	return result
endfunction

function printWarning takes string msg returns nothing
	call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., PrintingHelper_DEBUG_MSG_DURATION, "|cffFF8000[WARNING]|r - " + msg)
endfunction

function preloadAbility takes integer abilid returns nothing
	call UnitAddAbility(PreloadHandler_dum, abilid)
	if PreloadHandler_dum == null then
		call printError("PreloadAbility: do not load abilities after map init when autoFinish = true")
	elseif GetUnitAbilityLevel(PreloadHandler_dum, abilid) == 0 then
		call printWarning("PreloadAbility: Ability " + idInteger2IdString(abilid) + " does not exist.")
	endif
endfunction

function preloadSpells takes nothing returns nothing
	local integer wurst__iterator1 = dispatch_LinkedList_iterator(PreloadList_spellIds)
	local integer id
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator1)
		set id = dispatch_LLIterator_next(wurst__iterator1)
		call preloadAbility(id)
	endloop
	call dispatch_LLIterator_close(wurst__iterator1)
endfunction

function preloadUnit takes integer unitId returns nothing
	if PreloadHandler_dumg == null then
		call printError("PreloadUnit: Group dumg does not exist")
		return
	endif
	call GroupAddUnit(PreloadHandler_dumg, CreateUnit(Basics_DUMMY_PLAYER, unitId, 0., 0., 0.))
endfunction

function preloadUnits takes nothing returns nothing
	local integer wurst__iterator0 = dispatch_LinkedList_iterator(PreloadList_unitIds)
	local integer id
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0)
		set id = dispatch_LLIterator_next(wurst__iterator0)
		call preloadUnit(id)
	endloop
	call dispatch_LLIterator_close(wurst__iterator0)
	call timer_start(getTimer(), 0., ref_function_preloadSpells)
endfunction

function preloadAll takes nothing returns nothing
	call preloadUnits()
	call preloadSpells()
endfunction

function initPreload takes nothing returns nothing
	call print(Init_msg)
	call FogEnable(false)
	call FogMaskEnable(false)
	call preloadAll()
endfunction

function addEffect takes string path, real pos_x, real pos_y, real pos_z returns effect
	return AddSpecialEffect(path, pos_x, pos_y)
endfunction

function angle_toVec takes real this_radians, real len returns real
	set angle_toVec_return_x = Cos(this_radians) * len
	set angle_toVec_return_y = Sin(this_radians) * len
	return angle_toVec_return_x
endfunction

function Entity_setVel takes integer this, real vel_x, real vel_y, real vel_z returns nothing
	local integer tempIndex = this
	set Entity_vel[tempIndex] = vel_x
	set Entity_vel_2[tempIndex] = vel_y
	set Entity_vel_3[tempIndex] = vel_z
	set Entity_active[this] = true
endfunction

function dispatch_Entity_setVel takes integer this, real vel_x, real vel_y, real vel_z returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Entity.setVel")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Entity.setVel on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	if Entity_typeId[this] <= 34 then
		if Entity_typeId[this] <= 29 then
			call Entity_setVel(this, vel_x, vel_y, vel_z)
		else
			call Entity_setVel(this, vel_x, vel_y, vel_z)
		endif
	elseif Entity_typeId[this] <= 42 then
		call Entity_setVel(this, vel_x, vel_y, vel_z)
	else
		call Entity_setVel(this, vel_x, vel_y, vel_z)
	endif
endfunction

function leaveWarmupBW takes nothing returns nothing
	local unit u = GetTriggerUnit()
	local integer data = unit_getUserData(u)
	local integer instanceOfTemp = Entity_typeId[data]
	local integer tempIndex
	local integer tempIndex_2
	local integer temp
	if instanceOfTemp >= 33 and instanceOfTemp <= 34 then
		call DisplayTextToPlayer(Entity_owner[data], 0., 0., "|cff639C31You cannot leave your base during warmup")
		set tempIndex = data
		call effect_destr(addEffect("Abilities\\Weapons\\Bolt\\BoltImpact.mdl", Entity_pos[tempIndex], Entity_pos_2[tempIndex], Entity_pos_3[tempIndex]))
		set temp = data
		set tempIndex_2 = data
		call dispatch_Entity_setVel(temp, vec2_withZ(angle_toVec(vec3_angleTo2d(Entity_pos[tempIndex_2], Entity_pos_2[tempIndex_2], Entity_pos_3[tempIndex_2], CreepNode_bw_Main_x, CreepNode_bw_Main_y), 20.), angle_toVec_return_y, 2.), vec2_withZ_return_y, vec2_withZ_return_z)
	endif
	set u = null
endfunction

function leaveWarmupColor takes nothing returns nothing
	local unit u = GetTriggerUnit()
	local integer data = unit_getUserData(u)
	local integer instanceOfTemp = Entity_typeId[data]
	local integer tempIndex
	local integer tempIndex_2
	local integer temp
	if instanceOfTemp >= 33 and instanceOfTemp <= 34 then
		call DisplayTextToPlayer(Entity_owner[data], 0., 0., "|cff639C31You cannot leave your base during warmup")
		set tempIndex = data
		call effect_destr(addEffect("Abilities\\Weapons\\Bolt\\BoltImpact.mdl", Entity_pos[tempIndex], Entity_pos_2[tempIndex], Entity_pos_3[tempIndex]))
		set temp = data
		set tempIndex_2 = data
		call dispatch_Entity_setVel(temp, vec2_withZ(angle_toVec(vec3_angleTo2d(Entity_pos[tempIndex_2], Entity_pos_2[tempIndex_2], Entity_pos_3[tempIndex_2], CreepNode_color_Main_x, CreepNode_color_Main_y), 20.), angle_toVec_return_y, 2.), vec2_withZ_return_y, vec2_withZ_return_z)
	endif
	set u = null
endfunction

function UnitEntity_onAttack takes integer this, integer victim returns nothing
endfunction

function dispatch_UnitEntity_onAttack takes integer this, integer victim returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitEntity.onAttack")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitEntity.onAttack on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	if Entity_typeId[this] <= 34 then
		if Entity_typeId[this] <= 25 then
			call UnitEntity_onAttack(this, victim)
		else
			call UnitEntity_onAttack(this, victim)
		endif
	else
		call UnitEntity_onAttack(this, victim)
	endif
endfunction

function UnitEntity_onDamage takes integer this, integer damager returns nothing
endfunction

function dispatch_UnitEntity_onDamage takes integer this, integer damager returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitEntity.onDamage")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitEntity.onDamage on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	if Entity_typeId[this] <= 34 then
		if Entity_typeId[this] <= 25 then
			call UnitEntity_onDamage(this, damager)
		else
			call UnitEntity_onDamage(this, damager)
		endif
	else
		call UnitEntity_onDamage(this, damager)
	endif
endfunction

function onDamageEvent takes nothing returns boolean
	local integer adata = unit_getUserData(GetEventDamageSource())
	local integer ddata = unit_getUserData(GetTriggerUnit())
	call dispatch_UnitEntity_onDamage(ddata, adata)
	call dispatch_UnitEntity_onAttack(adata, ddata)
	return false
endfunction

function onDeath takes nothing returns nothing
	local unit u = GetTriggerUnit()
	local player owner = unit_getOwner(u)
	local integer wurst__iterator0
	local integer p
	local integer wurst__iterator1
	local integer p_2
	if owner == GameConstants_TEAM_TWO_CPU then
		set wurst__iterator0 = dispatch_LinkedList_iterator(PlayerData_players)
		loop
			exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0)
			set p = dispatch_LLIterator_next(wurst__iterator0)
			if PlayerData_id[p] < 6 then
				call CustomVictoryBJ(PlayerData_p[p], true, false)
			else
				call CustomDefeatBJ(PlayerData_p[p], "YOU LOSE!!")
			endif
		endloop
		call dispatch_LLIterator_close(wurst__iterator0)
	else
		set wurst__iterator1 = dispatch_LinkedList_iterator(PlayerData_players)
		loop
			exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator1)
			set p_2 = dispatch_LLIterator_next(wurst__iterator1)
			if PlayerData_id[p_2] > 3 then
				call CustomVictoryBJ(PlayerData_p[p_2], true, false)
			else
				call CustomDefeatBJ(PlayerData_p[p_2], "YOU LOSE!!")
			endif
		endloop
		call dispatch_LLIterator_close(wurst__iterator1)
	endif
	set u = null
	set owner = null
endfunction

function onDeath_2 takes nothing returns nothing
	local integer data = UnitEntity_getForUnit(GetTriggerUnit())
	call dispatch_Entity_terminate(data)
endfunction

function alloc_Mimic takes nothing returns integer
	local integer this
	if Entity_firstFree == 0 then
		set Entity_maxIndex = Entity_maxIndex + 1
		set this = Entity_maxIndex
	else
		set Entity_firstFree = Entity_firstFree - 1
		set this = Entity_nextFree[Entity_firstFree]
	endif
	set Entity_typeId[this] = 34
	return this
endfunction

function construct_Hero takes integer this, real pos_x, real pos_y, real pos_z, unit u returns nothing
	call construct_PhysicalUnitEntity(this, pos_x, pos_y, pos_z, u)
	set Hero_userorder[this] = true
	call trigger_registerUnitEvent(Hero_castTrig, UnitEntity_actor[this], EVENT_UNIT_SPELL_EFFECT)
	call trigger_registerUnitEvent(Hero_channelTrig, UnitEntity_actor[this], EVENT_UNIT_SPELL_ENDCAST)
	call trigger_registerUnitEvent(Hero_orderTrig, UnitEntity_actor[this], EVENT_UNIT_ISSUED_POINT_ORDER)
	call trigger_registerUnitEvent(Hero_orderTrig, UnitEntity_actor[this], EVENT_UNIT_ISSUED_TARGET_ORDER)
	call trigger_registerUnitEvent(Hero_deathTrig, UnitEntity_actor[this], EVENT_UNIT_DEATH)
endfunction

function construct_Mimic takes integer this, real pos_x, real pos_y, real pos_z, player owner returns nothing
	call construct_Hero(this, pos_x, pos_y, pos_z, createUnit(owner, MimicHero_MIMIC_HERO_ID, pos_x, pos_y, pos_z, 0.))
endfunction

function new_Mimic takes real pos_x, real pos_y, real pos_z, player owner returns integer
	local integer this = alloc_Mimic()
	call construct_Mimic(this, pos_x, pos_y, pos_z, owner)
	return this
endfunction

function unit_getPos3fake takes unit this returns real
	set unit_getPos3fake_return_x = unit_getX(this)
	set unit_getPos3fake_return_y = unit_getY(this)
	set unit_getPos3fake_return_z = 0.
	return unit_getPos3fake_return_x
endfunction

function onHeroBuy takes nothing returns nothing
	local player p = GetTriggerPlayer()
	local unit u = GetSoldUnit()
	local integer id = unit_getTypeId(u)
	local integer temp
	call unit_remove(PlayerData_pickdum[PlayerData_pData[player_getId(p)]])
	set temp = id
	if temp == MimicHero_MIMIC_HERO_ID then
		set PlayerData_hero[PlayerData_pData[player_getId(p)]] = new_Mimic(unit_getPos3fake(u), unit_getPos3fake_return_y, unit_getPos3fake_return_z, unit_getOwner(u))
	endif
	call SelectUnitForPlayerSingle(UnitEntity_actor[PlayerData_hero[PlayerData_pData[player_getId(p)]]], unit_getOwner(u))
	call unit_remove(u)
	set p = null
	set u = null
endfunction

function LinkedList_getEntry takes integer this, integer index returns integer
	local integer r = LinkedList_dummy[this]
	local integer i = 0
	local integer temp = index
	loop
		exitwhen i > temp
		set r = LLEntry_next[r]
		set i = i + 1
	endloop
	return r
endfunction

function dispatch_LinkedList_getEntry takes integer this, integer index returns integer
	local integer getEntry_result
	if LinkedList_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LinkedList.getEntry")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LinkedList.getEntry on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set getEntry_result = LinkedList_getEntry(this, index)
	return getEntry_result
endfunction

function LinkedList_get takes integer this, integer index returns integer
	return LLEntry_elem[dispatch_LinkedList_getEntry(this, index)]
endfunction

function dispatch_LinkedList_get takes integer this, integer index returns integer
	local integer get_result
	if LinkedList_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LinkedList.get")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LinkedList.get on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set get_result = LinkedList_get(this, index)
	return get_result
endfunction

function LLEntry_onDestroy takes integer this returns nothing
endfunction

function dealloc_LLEntry takes integer obj returns nothing
	if LLEntry_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type LLEntry")
		call I2S(1 / 0)
	else
		set LLEntry_nextFree[LLEntry_firstFree] = obj
		set LLEntry_firstFree = LLEntry_firstFree + 1
		set LLEntry_typeId[obj] = 0
	endif
endfunction

function destroyLLEntry takes integer this returns nothing
	call LLEntry_onDestroy(this)
	call dealloc_LLEntry(this)
endfunction

function dispatch_LLEntry_destroyLLEntry takes integer this returns nothing
	if LLEntry_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LLEntry.destroyLLEntry")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LLEntry.destroyLLEntry on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call destroyLLEntry(this)
endfunction

function LinkedList_removeAt takes integer this, integer index returns nothing
	local integer e = dispatch_LinkedList_getEntry(this, index)
	set LLEntry_next[LLEntry_prev[e]] = LLEntry_next[e]
	set LLEntry_prev[LLEntry_next[e]] = LLEntry_prev[e]
	call dispatch_LLEntry_destroyLLEntry(e)
	set LinkedList_size[this] = LinkedList_size[this] - 1
endfunction

function dispatch_LinkedList_removeAt takes integer this, integer index returns nothing
	if LinkedList_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LinkedList.removeAt")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LinkedList.removeAt on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call LinkedList_removeAt(this, index)
endfunction

function Stack_pop takes integer this returns integer
	local integer val = Stack_top[this]
	set Stack_top[this] = SEntry_prev[Stack_top[this]]
	set Stack_size[this] = Stack_size[this] - 1
	return SEntry_elem[val]
endfunction

function dispatch_Stack_pop takes integer this returns integer
	local integer pop_result
	if Stack_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Stack.pop")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Stack.pop on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set pop_result = Stack_pop(this)
	return pop_result
endfunction

function alloc_SData takes nothing returns integer
	local integer this
	if SData_firstFree == 0 then
		set SData_maxIndex = SData_maxIndex + 1
		set this = SData_maxIndex
	else
		set SData_firstFree = SData_firstFree - 1
		set this = SData_nextFree[SData_firstFree]
	endif
	set SData_typeId[this] = 38
	return this
endfunction

function construct_SData takes integer this returns nothing
endfunction

function new_SData takes nothing returns integer
	local integer this = alloc_SData()
	call construct_SData(this)
	return this
endfunction

function Sound_getSound takes integer this returns integer
	local integer sdata
	if dispatch_Stack_getSize(Sound_soundStack[this]) > 0 then
		return dispatch_Stack_pop(Sound_soundStack[this])
	else
		set sdata = new_SData()
		set SData_snd[sdata] = CreateSound(Sound_file[this], Sound_looping[this], Sound_is3D[this], Sound_stopOnLeaveRange[this], Sound_fadeIn[this], Sound_fadeOut[this], Sound_eaxSetting[this])
		set SData_soundData[sdata] = this
		call SetSoundDuration(SData_snd[sdata], Sound_duration[this])
		call SetSoundChannel(SData_snd[sdata], SoundHelper_SOUND_CHANNEL)
		call SetSoundVolume(SData_snd[sdata], SoundHelper_DEFAULT_SOUND_VOLUME)
		call SetSoundPitch(SData_snd[sdata], SoundHelper_DEFAULT_SOUND_PITCH)
		if Sound_is3D[this] then
			call SetSoundDistances(SData_snd[sdata], SoundHelper_SOUND_MIN_DIST, SoundHelper_SOUND_MAX_DIST)
			call SetSoundDistanceCutoff(SData_snd[sdata], SoundHelper_SOUND_DIST_CUT)
			call SetSoundConeAngles(SData_snd[sdata], 0., 0., SoundHelper_DEFAULT_SOUND_VOLUME)
			call SetSoundConeOrientation(SData_snd[sdata], 0., 0., 0.)
		endif
		return sdata
	endif
endfunction

function dispatch_Sound_getSound takes integer this returns integer
	local integer getSound_result
	if Sound_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Sound.getSound")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Sound.getSound on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set getSound_result = Sound_getSound(this)
	return getSound_result
endfunction

function Sound_play takes integer this returns nothing
	call timer_start(timer_setData(getTimer(), dispatch_Sound_getSound(this)), 0., ref_function_Sound_playSound)
endfunction

function dispatch_Sound_play takes integer this returns nothing
	if Sound_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Sound.play")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Sound.play on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call Sound_play(this)
endfunction

function player_getName takes player this returns string
	return GetPlayerName(this)
endfunction

function onHeroDeath takes nothing returns nothing
	local integer ddata = unit_getUserData(GetTriggerUnit())
	local unit killer = GetKillingUnit()
	local integer rnd = GetRandomInt(0, dispatch_LinkedList_getSize(Hero_intPool))
	call dispatch_Sound_play(Hero_killSounds[dispatch_LinkedList_get(Hero_intPool, rnd)])
	call dispatch_LinkedList_removeAt(Hero_intPool, rnd)
	if dispatch_LinkedList_getSize(Hero_intPool) == 0 then
		call dispatch_LinkedList_add(Hero_intPool, 0)
		call dispatch_LinkedList_add(Hero_intPool, 1)
		call dispatch_LinkedList_add(Hero_intPool, 2)
		call dispatch_LinkedList_add(Hero_intPool, 3)
		call dispatch_LinkedList_add(Hero_intPool, 4)
		call dispatch_LinkedList_add(Hero_intPool, 5)
		call dispatch_LinkedList_add(Hero_intPool, 6)
		call dispatch_LinkedList_add(Hero_intPool, 7)
	endif
	call DisplayTimedTextToForce(GetPlayersAll(), 15., GameConstants_colorcode[player_getId(unit_getOwner(killer))] + player_getName(unit_getOwner(killer)) + "|r killed " + GameConstants_colorcode[player_getId(Entity_owner[ddata])] + player_getName(Entity_owner[ddata]))
	set PlayerData_tim[PlayerData_pData[player_getId(Entity_owner[ddata])]] = timer_setData(timer_start(getTimer(), 10. + 5. * GetHeroLevel(UnitEntity_actor[ddata]), ref_function_revive), ddata)
	set PlayerData_td[PlayerData_pData[player_getId(Entity_owner[ddata])]] = CreateTimerDialog(PlayerData_tim[PlayerData_pData[player_getId(Entity_owner[ddata])]])
	call TimerDialogSetTitle(PlayerData_td[PlayerData_pData[player_getId(Entity_owner[ddata])]], player_getName(Entity_owner[ddata]))
	call TimerDialogDisplay(PlayerData_td[PlayerData_pData[player_getId(Entity_owner[ddata])]], true)
	set killer = null
endfunction

function onSpawnDeath takes nothing returns nothing
	local integer data = unit_getUserData(GetTriggerUnit())
	call dispatch_Spawner_destroySpawner(data)
endfunction

function Board_removeRow takes integer this, integer row returns nothing
endfunction

function dispatch_Board_removeRow takes integer this, integer row returns nothing
	if Board_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Board.removeRow")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Board.removeRow on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call Board_removeRow(this, row)
endfunction

function LinkedList_remove takes integer this, integer t returns nothing
	local integer r = LLEntry_next[LinkedList_dummy[this]]
	loop
		exitwhen  not (r != LinkedList_dummy[this])
		if LLEntry_elem[r] == t then
			set LLEntry_next[LLEntry_prev[r]] = LLEntry_next[r]
			set LLEntry_prev[LLEntry_next[r]] = LLEntry_prev[r]
			call dispatch_LLEntry_destroyLLEntry(r)
			set LinkedList_size[this] = LinkedList_size[this] - 1
			return
		endif
		set r = LLEntry_next[r]
	endloop
endfunction

function dispatch_LinkedList_remove takes integer this, integer t returns nothing
	if LinkedList_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LinkedList.remove")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LinkedList.remove on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call LinkedList_remove(this, t)
endfunction

function PlayerData_onDestroy takes integer this returns nothing
	local integer wurst__iterator0
	local integer p2
	call DisplayTimedTextToPlayer(GetLocalPlayer(), 0., 0., 20., GameConstants_colorcode[player_getId(PlayerData_p[this])] + player_getName(PlayerData_p[this]) + "|r |cffFFCC33has left the game!")
	call PlaySoundBJ(gg_snd_QuestFailed)
	call dispatch_Board_removeRow(PlayerData_playerboard, PlayerData_gameId[this] + 1)
	call dispatch_LinkedList_remove(PlayerData_players, this)
	set PlayerData_pData[PlayerData_id[this]] = 0
	if PlayerData_gameId[this] < PlayerData_playercount then
		set wurst__iterator0 = dispatch_LinkedList_iterator(PlayerData_players)
		loop
			exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0)
			set p2 = dispatch_LLIterator_next(wurst__iterator0)
			if PlayerData_gameId[p2] > PlayerData_gameId[this] then
				set PlayerData_gameId[p2] = PlayerData_gameId[p2] - 1
			endif
		endloop
		call dispatch_LLIterator_close(wurst__iterator0)
	endif
	set PlayerData_playercount = PlayerData_playercount - 1
	call timer_release(PlayerData_tim[this])
	call DestroyTimerDialog(PlayerData_td[this])
	call dispatch_Entity_terminate(PlayerData_hero[this])
endfunction

function dealloc_PlayerData takes integer obj returns nothing
	if PlayerData_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type PlayerData")
		call I2S(1 / 0)
	else
		set PlayerData_nextFree[PlayerData_firstFree] = obj
		set PlayerData_firstFree = PlayerData_firstFree + 1
		set PlayerData_typeId[obj] = 0
	endif
endfunction

function destroyPlayerData takes integer this returns nothing
	call PlayerData_onDestroy(this)
	call dealloc_PlayerData(this)
endfunction

function dispatch_PlayerData_destroyPlayerData takes integer this returns nothing
	if PlayerData_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling PlayerData.destroyPlayerData")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called PlayerData.destroyPlayerData on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call destroyPlayerData(this)
endfunction

function playerLeft takes nothing returns nothing
	local player p = GetTriggerPlayer()
	local integer pd = PlayerData_pData[player_getId(p)]
	call dispatch_PlayerData_destroyPlayerData(pd)
	set p = null
endfunction

function createAttackerHeroes takes nothing returns nothing
	call AddUnitToStock(gg_unit_h000_0000, MimicHero_MIMIC_HERO_ID, 5, 5)
endfunction

function createDefenderHeroes takes nothing returns nothing
	call AddUnitToStock(gg_unit_h001_0001, MimicHero_MIMIC_HERO_ID, 5, 5)
endfunction

function createUnit_2 takes player p, integer unitId, real pos_x, real pos_y, real facing_radians returns unit
	return CreateUnit(p, unitId, pos_x, pos_y, angle_degrees(facing_radians))
endfunction

function createPickableHeroes takes nothing returns nothing
	local integer wurst__iterator0
	local integer p
	call createAttackerHeroes()
	call createDefenderHeroes()
	set wurst__iterator0 = dispatch_LinkedList_iterator(PlayerData_players)
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0)
		set p = dispatch_LLIterator_next(wurst__iterator0)
		if PlayerData_id[p] < 6 then
			set PlayerData_pickdum[p] = createUnit_2(PlayerData_p[p], Basics_DUMMY_UNIT_ID, unit_getPos(gg_unit_h000_0000), unit_getPos_return_y, 0.)
		else
			set PlayerData_pickdum[p] = createUnit_2(PlayerData_p[p], Basics_DUMMY_UNIT_ID, unit_getPos(gg_unit_h001_0001), unit_getPos_return_y, 0.)
		endif
	endloop
	call dispatch_LLIterator_close(wurst__iterator0)
endfunction

function alloc_CreepNode takes nothing returns integer
	local integer this
	if CreepNode_firstFree == 0 then
		set CreepNode_maxIndex = CreepNode_maxIndex + 1
		set this = CreepNode_maxIndex
	else
		set CreepNode_firstFree = CreepNode_firstFree - 1
		set this = CreepNode_nextFree[CreepNode_firstFree]
	endif
	set CreepNode_typeId[this] = 43
	return this
endfunction

function hashtable_saveTriggerHandle takes hashtable this, integer parentKey, integer childKey, trigger value returns hashtable
	call SaveTriggerHandle(this, parentKey, childKey, value)
	return this
endfunction

function Table_saveTrigger takes integer this, integer parentKey, trigger value returns nothing
	call hashtable_saveTriggerHandle(Table_ht, this, parentKey, value)
endfunction

function dispatch_Table_saveTrigger takes integer this, integer parentKey, trigger value returns nothing
	if Table_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Table.saveTrigger")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Table.saveTrigger on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call Table_saveTrigger(this, parentKey, value)
endfunction

function hashtable_saveUnitHandle takes hashtable this, integer parentKey, integer childKey, unit value returns hashtable
	call SaveUnitHandle(this, parentKey, childKey, value)
	return this
endfunction

function Table_saveUnit takes integer this, integer parentKey, unit value returns nothing
	call hashtable_saveUnitHandle(Table_ht, this, parentKey, value)
endfunction

function dispatch_Table_saveUnit takes integer this, integer parentKey, unit value returns nothing
	if Table_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Table.saveUnit")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Table.saveUnit on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call Table_saveUnit(this, parentKey, value)
endfunction

function trigger_registerUnitInRangeSource takes trigger this, unit whichUnit, real range returns event
	local integer h = GetHandleId(this)
	local integer u = GetHandleId(whichUnit)
	call dispatch_Table_saveUnit(Trigger_triggerData, h, whichUnit)
	call dispatch_Table_saveTrigger(Trigger_triggerData, u, this)
	return TriggerRegisterUnitInRange(this, whichUnit, range, null)
endfunction

function unit_hide takes unit this returns unit
	call ShowUnit(this, false)
	return this
endfunction

function construct_CreepNode takes integer this, unit dummyNode, real target_x, real target_y, player creepOwner, real radius returns nothing
	local integer tempIndex
	set CreepNode_t[this] = CreateTrigger()
	set tempIndex = this
	set CreepNode_target[tempIndex] = target_x
	set CreepNode_target_2[tempIndex] = target_y
	set CreepNode_creepOwner[this] = creepOwner
	set CreepNode_inrangeDummy[this] = createUnit(Basics_DUMMY_PLAYER, Basics_DUMMY_UNIT_ID, unit_getPos3fake(dummyNode), unit_getPos3fake_return_y, unit_getPos3fake_return_z, 0.)
	call unit_setUserData(CreepNode_inrangeDummy[this], this)
	call unit_hide(CreepNode_inrangeDummy[this])
	call trigger_registerUnitInRangeSource(CreepNode_t[this], CreepNode_inrangeDummy[this], radius)
	call trigger_addAction(CreepNode_t[this], ref_function_CreepNode_orderAttack)
	call unit_remove(dummyNode)
endfunction

function new_CreepNode takes unit dummyNode, real target_x, real target_y, player creepOwner, real radius returns integer
	local integer this = alloc_CreepNode()
	call construct_CreepNode(this, dummyNode, target_x, target_y, creepOwner, radius)
	return this
endfunction

function initBWNodes takes nothing returns nothing
	set CreepNode_node_bw_left = new_CreepNode(gg_unit_e001_0009, CreepNode_color_Main_x, CreepNode_color_Main_y, GameConstants_TEAM_TWO_CPU, 128.)
	set CreepNode_node_bw_right = new_CreepNode(gg_unit_e001_0011, CreepNode_color_Main_x, CreepNode_color_Main_y, GameConstants_TEAM_TWO_CPU, 128.)
endfunction

function initColorNodes takes nothing returns nothing
	set CreepNode_node_color_left = new_CreepNode(gg_unit_e001_0013, CreepNode_bw_Main_x, CreepNode_bw_Main_y, GameConstants_TEAM_ONE_CPU, 128.)
	set CreepNode_node_color_right = new_CreepNode(gg_unit_e001_0012, CreepNode_bw_Main_x, CreepNode_bw_Main_y, GameConstants_TEAM_ONE_CPU, 128.)
endfunction

function initCreepNodes takes nothing returns nothing
	call initColorNodes()
	call initBWNodes()
endfunction

function alloc_Spawner takes nothing returns integer
	local integer this
	if Spawner_firstFree == 0 then
		set Spawner_maxIndex = Spawner_maxIndex + 1
		set this = Spawner_maxIndex
	else
		set Spawner_firstFree = Spawner_firstFree - 1
		set this = Spawner_nextFree[Spawner_firstFree]
	endif
	set Spawner_typeId[this] = 44
	return this
endfunction

function construct_Spawner takes integer this, unit spawnDummy, player owner returns nothing
	local integer tempIndex
	local integer tempIndex_2
	local integer tempIndex_3
	local real tempTupleSelectionResult_1
	local real tempTupleSelectionResult_2
	local real tempTupleSelectionResult_3
	local integer tempIndex_4
	local real tempTupleSelectionResult_1_2
	local real tempTupleSelectionResult_2_2
	local real tempTupleSelectionResult_3_2
	local real temp
	local integer temp_2
	set Spawner_spawnCount[this] = 0
	set Spawner_meleeCount[this] = 4
	set Spawner_rangedCount[this] = 2
	set Spawner_timeout[this] = 5.
	set Spawner_spawnDummy[this] = spawnDummy
	set tempIndex = this
	set Spawner_pos[tempIndex] = unit_getPos3fake(spawnDummy)
	set Spawner_pos_2[tempIndex] = unit_getPos3fake_return_y
	set Spawner_pos_3[tempIndex] = unit_getPos3fake_return_z
	set Spawner_owner[this] = owner
	set tempIndex_2 = this
	set temp_2 = tempIndex_2
	set tempIndex_3 = this
	set tempTupleSelectionResult_1 = Spawner_pos[tempIndex_3]
	set tempTupleSelectionResult_2 = Spawner_pos_2[tempIndex_3]
	set tempTupleSelectionResult_3 = Spawner_pos_3[tempIndex_3]
	set temp = tempTupleSelectionResult_1
	set tempIndex_4 = this
	set tempTupleSelectionResult_1_2 = Spawner_pos[tempIndex_4]
	set tempTupleSelectionResult_2_2 = Spawner_pos_2[tempIndex_4]
	set tempTupleSelectionResult_3_2 = Spawner_pos_3[tempIndex_4]
	set Spawner_pos_3[temp_2] = getTerrainZ(temp, tempTupleSelectionResult_2_2) + 5.
	set Spawner_spawnTimer[this] = getTimer()
	call unit_setUserData(spawnDummy, this)
endfunction

function new_Spawner takes unit spawnDummy, player owner returns integer
	local integer this = alloc_Spawner()
	call construct_Spawner(this, spawnDummy, owner)
	return this
endfunction

function initBWSpawns takes nothing returns nothing
	call trigger_registerUnitEvent(CreepSpawn_deathTrig, gg_unit_e002_0015, EVENT_UNIT_DEATH)
	call trigger_registerUnitEvent(CreepSpawn_deathTrig, gg_unit_e002_0014, EVENT_UNIT_DEATH)
	set CreepSpawn_color_left_spawn = new_Spawner(gg_unit_e002_0015, GameConstants_TEAM_ONE_CPU)
	set Spawner_target[CreepSpawn_color_left_spawn] = CreepNode_node_color_left
	set CreepSpawn_color_right_spawn = new_Spawner(gg_unit_e002_0014, GameConstants_TEAM_ONE_CPU)
	set Spawner_target[CreepSpawn_color_right_spawn] = CreepNode_node_color_right
endfunction

function initColorSpawns takes nothing returns nothing
	call trigger_registerUnitEvent(CreepSpawn_deathTrig, gg_unit_e002_0016, EVENT_UNIT_DEATH)
	call trigger_registerUnitEvent(CreepSpawn_deathTrig, gg_unit_e002_0017, EVENT_UNIT_DEATH)
	set CreepSpawn_bw_left_spawn = new_Spawner(gg_unit_e002_0016, GameConstants_TEAM_TWO_CPU)
	set Spawner_target[CreepSpawn_bw_left_spawn] = CreepNode_node_bw_left
	set CreepSpawn_bw_right_spawn = new_Spawner(gg_unit_e002_0017, GameConstants_TEAM_TWO_CPU)
	set Spawner_target[CreepSpawn_bw_right_spawn] = CreepNode_node_bw_right
endfunction

function initCreepSpawners takes nothing returns nothing
	call initBWSpawns()
	call initColorSpawns()
endfunction

function alloc_Sound takes nothing returns integer
	local integer this
	if Sound_firstFree == 0 then
		set Sound_maxIndex = Sound_maxIndex + 1
		set this = Sound_maxIndex
	else
		set Sound_firstFree = Sound_firstFree - 1
		set this = Sound_nextFree[Sound_firstFree]
	endif
	set Sound_typeId[this] = 39
	return this
endfunction

function alloc_Stack takes nothing returns integer
	local integer this
	if Stack_firstFree == 0 then
		set Stack_maxIndex = Stack_maxIndex + 1
		set this = Stack_maxIndex
	else
		set Stack_firstFree = Stack_firstFree - 1
		set this = Stack_nextFree[Stack_firstFree]
	endif
	set Stack_typeId[this] = 35
	return this
endfunction

function construct_Stack takes integer this returns nothing
	set Stack_size[this] = 0
	set Stack_dummy[this] = new_SEntry(0, 0)
	set Stack_top[this] = Stack_dummy[this]
endfunction

function new_Stack takes nothing returns integer
	local integer this = alloc_Stack()
	call construct_Stack(this)
	return this
endfunction

function construct_Sound takes integer this, string file, integer duration, boolean looping returns nothing
	set Sound_soundStack[this] = new_Stack()
	set Sound_file[this] = file
	set Sound_duration[this] = duration
	set Sound_looping[this] = looping
	set Sound_is3D[this] = false
	set Sound_stopOnLeaveRange[this] = false
	set Sound_fadeIn[this] = SoundHelper_DEFAULT_SOUND_FADE_IN_RATE
	set Sound_fadeOut[this] = SoundHelper_DEFAULT_SOUND_FADE_OUT_RATE
	set Sound_eaxSetting[this] = SoundHelper_DEFAULT_SOUND_EAX_SETTINGS
endfunction

function new_Sound takes string file, integer duration, boolean looping returns integer
	local integer this = alloc_Sound()
	call construct_Sound(this, file, duration, looping)
	return this
endfunction

function initHeroes takes nothing returns nothing
	set Hero_killSounds[0] = new_Sound("sounds\\almostKillingspree.mp3", 2096, false)
	set Hero_killSounds[1] = new_Sound("sounds\\fuckedUp.mp3", 2346, false)
	set Hero_killSounds[2] = new_Sound("sounds\\killFrenzy.mp3", 2616, false)
	set Hero_killSounds[3] = new_Sound("sounds\\nein.mp3", 2460, false)
	set Hero_killSounds[4] = new_Sound("sounds\\SerbianXaXa.mp3", 3916, false)
	set Hero_killSounds[5] = new_Sound("sounds\\stopMe.mp3", 4046, false)
	set Hero_killSounds[6] = new_Sound("sounds\\toasted.mp3", 1628, false)
	set Hero_killSounds[7] = new_Sound("sounds\\youSuck.mp3", 2330, false)
	call dispatch_LinkedList_add(Hero_intPool, 0)
	call dispatch_LinkedList_add(Hero_intPool, 1)
	call dispatch_LinkedList_add(Hero_intPool, 2)
	call dispatch_LinkedList_add(Hero_intPool, 3)
	call dispatch_LinkedList_add(Hero_intPool, 4)
	call dispatch_LinkedList_add(Hero_intPool, 5)
	call dispatch_LinkedList_add(Hero_intPool, 6)
	call dispatch_LinkedList_add(Hero_intPool, 7)
endfunction

function startDebug takes nothing returns nothing
	set Debug_debugBoard = new_Board(3, 2)
	call multiboarditem_setWidth(multiboard_getItem(Board_board[Debug_debugBoard], 0, 0), 0.2)
	call multiboarditem_setWidth(multiboard_getItem(Board_board[Debug_debugBoard], 1, 0), 0.2)
	call multiboarditem_setWidth(multiboard_getItem(Board_board[Debug_debugBoard], 2, 0), 0.2)
	call multiboarditem_setWidth(multiboard_getItem(Board_board[Debug_debugBoard], 0, 1), 0.02)
	call multiboarditem_setWidth(multiboard_getItem(Board_board[Debug_debugBoard], 1, 1), 0.02)
	call multiboarditem_setWidth(multiboard_getItem(Board_board[Debug_debugBoard], 2, 1), 0.02)
	call dispatch_Board_setItemContent(Debug_debugBoard, 0, 0, "Entity Count: ", null)
	call dispatch_Board_setItemContent(Debug_debugBoard, 0, 1, int_toString(Debug_entityCount), null)
	call dispatch_Board_setItemContent(Debug_debugBoard, 1, 0, "Current Entity Count: ", null)
	call dispatch_Board_setItemContent(Debug_debugBoard, 1, 1, int_toString(Debug_currentEntityCount), null)
	call dispatch_Board_setItemContent(Debug_debugBoard, 2, 0, "Current UEntity Count: ", null)
	call dispatch_Board_setItemContent(Debug_debugBoard, 2, 1, int_toString(Debug_unitEntityCount), null)
	call timer_start(getTimer(), 1., ref_function_updateBoard)
endfunction

function trigger_addCondition takes trigger this, boolexpr condition returns trigger
	call TriggerAddCondition(this, condition)
	return this
endfunction

function trigger_registerTimerEvent takes trigger this, real timeout, boolean periodic returns trigger
	call TriggerRegisterTimerEvent(this, timeout, periodic)
	return this
endfunction

function startEntityLoop takes nothing returns boolean
	call trigger_addCondition(trigger_registerTimerEvent(CreateTrigger(), Basics_ANIMATION_PERIOD, true), Condition(ref_function_updateEntities))
	return true
endfunction

function cleanupArena takes nothing returns nothing
endfunction

function hashtable_saveRectHandle takes hashtable this, integer parentKey, integer childKey, rect value returns hashtable
	call SaveRectHandle(this, parentKey, childKey, value)
	return this
endfunction

function Table_saveRect takes integer this, integer parentKey, rect value returns nothing
	call hashtable_saveRectHandle(Table_ht, this, parentKey, value)
endfunction

function dispatch_Table_saveRect takes integer this, integer parentKey, rect value returns nothing
	if Table_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Table.saveRect")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Table.saveRect on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call Table_saveRect(this, parentKey, value)
endfunction

function trigger_registerRectLeaveEventSource takes trigger this, rect r returns nothing
	call TriggerRegisterLeaveRectSimple(this, r)
	call dispatch_Table_saveRect(Rect_sourceTable, GetHandleId(this), r)
endfunction

function startWarmup takes nothing returns nothing
	set Round_warmupRunning = true
	set Round_warmupColorTrig = CreateTrigger()
	call trigger_addAction(Round_warmupColorTrig, ref_function_leaveWarmupColor)
	call trigger_registerRectLeaveEventSource(Round_warmupColorTrig, gg_rct_warmupColor)
	set Round_warmupBWTrig = CreateTrigger()
	call trigger_addAction(Round_warmupBWTrig, ref_function_leaveWarmupBW)
	call trigger_registerRectLeaveEventSource(Round_warmupBWTrig, gg_rct_warmupBW)
	call print("|cff5A835A[Start] |r- 20 second Warmup has started")
	call timer_start(getTimer(), Round_WARUMP_TIME, ref_function_finishWarmup)
endfunction

function startNewRound takes nothing returns nothing
	if Round_gameRunning then
		call printError("Trying to start new Round while Round in progress")
		return
	endif
	if Round_roundCount > 0 then
		call cleanupArena()
	endif
	call startWarmup()
	set Round_roundCount = Round_roundCount + 1
endfunction

function trigger_registerPlayerChatEvent takes trigger this, player whichPlayer, string chatMessageToDetect, boolean exactMatchOnly returns trigger
	call TriggerRegisterPlayerChatEvent(this, whichPlayer, chatMessageToDetect, exactMatchOnly)
	return this
endfunction

function startTest takes nothing returns nothing
	local trigger t = CreateTrigger()
	call trigger_addAction(trigger_registerPlayerChatEvent(t, Player(0), "force", true), ref_function_forced)
	set t = null
endfunction

function timer_startPeriodic takes timer this, real time, code timerCallBack returns timer
	call TimerStart(this, time, true, timerCallBack)
	return this
endfunction

function initGame takes nothing returns nothing
	call print("|cff5A5A5A[Init] |r- CreepNodes")
	call initCreepNodes()
	call print("|cff5A5A5A[Init] |r- CreepSpawners")
	call initCreepSpawners()
	call print("|cff5A5A5A[Init] |r- Heros")
	call createPickableHeroes()
	call initHeroes()
	call print("|cff5A835A[Start] |r- Entity Loop")
	call startEntityLoop()
	call print("|cff5A835A[Start] |r- Test")
	call startTest()
	call print("|cff5A835A[Start] |r- New Round")
	call startNewRound()
	call print("|cff5A835A[Start] |r- Debug")
	call startDebug()
	call timer_startPeriodic(getTimer(), 1., ref_function_updateBoard_2)
	call print("|cffFF9421[Done] |r- Game initialized")
endfunction

function preloadFinished takes nothing returns nothing
	local integer wurst__iterator0
	local integer p
	call FogEnable(true)
	call FogMaskEnable(true)
	call print(Init_msg + " finished!")
	set wurst__iterator0 = dispatch_LinkedList_iterator(PlayerData_players)
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0)
		set p = dispatch_LLIterator_next(wurst__iterator0)
		if PlayerData_id[p] < 6 then
			if GetLocalPlayer() == PlayerData_p[p] then
				call CameraSetupApplyForceDuration(gg_cam_ColorStartCam, true, 2.)
				call SelectUnit(gg_unit_h000_0000, true)
			endif
		elseif GetLocalPlayer() == PlayerData_p[p] then
			call CameraSetupApplyForceDuration(gg_cam_BWStartCam, true, 2.)
			call SelectUnit(gg_unit_h001_0001, true)
		endif
	endloop
	call dispatch_LLIterator_close(wurst__iterator0)
	call initGame()
endfunction

function preloadNote takes nothing returns nothing
	call CameraSetupApplyForceDuration(gg_cam_InitCam, true, 0.)
	call CameraSetupSetField(gg_cam_InitCam, CAMERA_FIELD_FARZ, Init_farz, 1.)
	set Init_farz = Init_farz + 150.
	if Init_farz > 9000. then
		call timer_release(GetExpiredTimer())
		call preloadFinished()
	endif
endfunction

function resetCam takes nothing returns nothing
	local timer t = GetExpiredTimer()
	call CameraClearNoiseForPlayer(Player(timer_getData(t)))
	call timer_release(t)
	set t = null
endfunction

function revive takes nothing returns nothing
	local timer tim = GetExpiredTimer()
	local integer data = timer_getData(tim)
	if player_getId(Entity_owner[data]) < 6 then
		call ReviveHero(UnitEntity_actor[data], unit_getX(gg_unit_h000_0000), unit_getY(gg_unit_h000_0000), true)
		if GetLocalPlayer() == Entity_owner[data] then
			call CameraSetupApplyForceDuration(gg_cam_ColorStartCam, true, 2.)
		endif
	else
		call ReviveHero(UnitEntity_actor[data], unit_getX(gg_unit_h001_0001), unit_getY(gg_unit_h001_0001), true)
		if GetLocalPlayer() == Entity_owner[data] then
			call CameraSetupApplyForceDuration(gg_cam_BWStartCam, true, 2.)
		endif
	endif
	call SelectUnitForPlayerSingle(UnitEntity_actor[data], Entity_owner[data])
	call DestroyTimerDialog(PlayerData_td[PlayerData_pData[player_getId(Entity_owner[data])]])
	call timer_release(tim)
	set tim = null
endfunction

function multiboard_setTitle takes multiboard this, string label returns multiboard
	call MultiboardSetTitleText(this, label)
	return this
endfunction

function setTime takes nothing returns nothing
	local string secs
	local string mins
	set PlayerData_seconds = PlayerData_seconds + 1
	set secs = "|cffffffff"
	set mins = "|cffffffff"
	if PlayerData_seconds < 10 then
		set secs = secs + "0" + int_toString(PlayerData_seconds)
	else
		set secs = secs + int_toString(PlayerData_seconds)
	endif
	if PlayerData_minutes < 10 then
		set mins = mins + "0" + int_toString(PlayerData_minutes)
	else
		set mins = mins + int_toString(PlayerData_minutes)
	endif
	set secs = secs + "|r"
	set mins = mins + "|r"
	call multiboard_setTitle(Board_board[PlayerData_playerboard], GameConstants_MAP_VER + " [ " + mins + " : " + secs + " ]")
	if PlayerData_seconds >= 60 then
		set PlayerData_seconds = 0
		set PlayerData_minutes = PlayerData_minutes + 1
	endif
endfunction

function Board_updateItemValue takes integer this, integer row, integer column, string value returns nothing
	local integer dataitm = dispatch_Table_loadInt(Board_mbdata[this], Board_rows[this] * row + column)
	set MBItem_value[dataitm] = value
	call multiboarditem_setValue(multiboard_getItem(Board_board[this], row, column), value)
endfunction

function dispatch_Board_updateItemValue takes integer this, integer row, integer column, string value returns nothing
	if Board_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Board.updateItemValue")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Board.updateItemValue on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call Board_updateItemValue(this, row, column, value)
endfunction

function updateBoard takes nothing returns nothing
	call dispatch_Board_updateItemValue(Debug_debugBoard, 0, 1, int_toString(Debug_entityCount))
	call dispatch_Board_updateItemValue(Debug_debugBoard, 1, 1, int_toString(Debug_currentEntityCount))
	call dispatch_Board_updateItemValue(Debug_debugBoard, 2, 1, int_toString(Debug_unitEntityCount))
endfunction

function LinkedListModule_remove_2 takes integer this returns nothing
	set LinkedListModule_size = LinkedListModule_size - 1
	if this != LinkedListModule_first then
		set LinkedListModule_next[LinkedListModule_prev[this]] = LinkedListModule_next[this]
	endif
	if this != LinkedListModule_last then
		set LinkedListModule_prev[LinkedListModule_next[this]] = LinkedListModule_prev[this]
	endif
	if this == LinkedListModule_last then
		set LinkedListModule_last = LinkedListModule_prev[this]
	endif
	if this == LinkedListModule_first then
		set LinkedListModule_first = LinkedListModule_next[this]
	endif
endfunction

function dispatch_Entity_remove takes integer this returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Entity.remove")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Entity.remove on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	if Entity_typeId[this] <= 34 then
		if Entity_typeId[this] <= 29 then
			call LinkedListModule_remove_2(this)
		else
			call LinkedListModule_remove_2(this)
		endif
	elseif Entity_typeId[this] <= 42 then
		call LinkedListModule_remove_2(this)
	else
		call LinkedListModule_remove_2(this)
	endif
endfunction

function Entity_onDestroy takes integer this returns nothing
	set Debug_currentEntityCount = Debug_currentEntityCount - 1
	call dispatch_Entity_remove(this)
endfunction

function UnitEntity_onDestroy takes integer this returns nothing
	set Debug_unitEntityCount = Debug_unitEntityCount + 1
	call Entity_onDestroy(this)
endfunction

function PhysicalUnitEntity_onDestroy takes integer this returns nothing
	call UnitEntity_onDestroy(this)
endfunction

function Creep_onDestroy takes integer this returns nothing
	call PhysicalUnitEntity_onDestroy(this)
endfunction

function dealloc_Creep takes integer obj returns nothing
	if Entity_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type Creep")
		call I2S(1 / 0)
	else
		set Entity_nextFree[Entity_firstFree] = obj
		set Entity_firstFree = Entity_firstFree + 1
		set Entity_typeId[obj] = 0
	endif
endfunction

function destroyCreep takes integer this returns nothing
	call Creep_onDestroy(this)
	call dealloc_Creep(this)
endfunction

function dealloc_Entity takes integer obj returns nothing
	if Entity_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type Entity")
		call I2S(1 / 0)
	else
		set Entity_nextFree[Entity_firstFree] = obj
		set Entity_firstFree = Entity_firstFree + 1
		set Entity_typeId[obj] = 0
	endif
endfunction

function destroyEntity takes integer this returns nothing
	call Entity_onDestroy(this)
	call dealloc_Entity(this)
endfunction

function Fx_onDestroy takes integer this returns nothing
	if Fx_fx[this] != null then
		call effect_destr(Fx_fx[this])
	endif
	call recycleDummy(Fx_dummy[this])
endfunction

function dealloc_Fx takes integer obj returns nothing
	if Fx_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type Fx")
		call I2S(1 / 0)
	else
		set Fx_nextFree[Fx_firstFree] = obj
		set Fx_firstFree = Fx_firstFree + 1
		set Fx_typeId[obj] = 0
	endif
endfunction

function destroyFx takes integer this returns nothing
	call Fx_onDestroy(this)
	call dealloc_Fx(this)
endfunction

function dispatch_Fx_destroyFx takes integer this returns nothing
	if Fx_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Fx.destroyFx")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Fx.destroyFx on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call destroyFx(this)
endfunction

function FxEntity_onDestroy takes integer this returns nothing
	call dispatch_Fx_destroyFx(FxEntity_fx[this])
	call Entity_onDestroy(this)
endfunction

function dealloc_FxEntity takes integer obj returns nothing
	if Entity_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type FxEntity")
		call I2S(1 / 0)
	else
		set Entity_nextFree[Entity_firstFree] = obj
		set Entity_firstFree = Entity_firstFree + 1
		set Entity_typeId[obj] = 0
	endif
endfunction

function destroyFxEntity takes integer this returns nothing
	call FxEntity_onDestroy(this)
	call dealloc_FxEntity(this)
endfunction

function Hero_onDestroy takes integer this returns nothing
	call PhysicalUnitEntity_onDestroy(this)
endfunction

function dealloc_Hero takes integer obj returns nothing
	if Entity_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type Hero")
		call I2S(1 / 0)
	else
		set Entity_nextFree[Entity_firstFree] = obj
		set Entity_firstFree = Entity_firstFree + 1
		set Entity_typeId[obj] = 0
	endif
endfunction

function destroyHero takes integer this returns nothing
	call Hero_onDestroy(this)
	call dealloc_Hero(this)
endfunction

function Projectile_onDestroy takes integer this returns nothing
	call FxEntity_onDestroy(this)
endfunction

function HomingProjectile_onDestroy takes integer this returns nothing
	call Projectile_onDestroy(this)
endfunction

function dealloc_HomingProjectile takes integer obj returns nothing
	if Entity_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type HomingProjectile")
		call I2S(1 / 0)
	else
		set Entity_nextFree[Entity_firstFree] = obj
		set Entity_firstFree = Entity_firstFree + 1
		set Entity_typeId[obj] = 0
	endif
endfunction

function destroyHomingProjectile takes integer this returns nothing
	call HomingProjectile_onDestroy(this)
	call dealloc_HomingProjectile(this)
endfunction

function Mimic_onDestroy takes integer this returns nothing
	call Hero_onDestroy(this)
endfunction

function dealloc_Mimic takes integer obj returns nothing
	if Entity_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type Mimic")
		call I2S(1 / 0)
	else
		set Entity_nextFree[Entity_firstFree] = obj
		set Entity_firstFree = Entity_firstFree + 1
		set Entity_typeId[obj] = 0
	endif
endfunction

function destroyMimic takes integer this returns nothing
	call Mimic_onDestroy(this)
	call dealloc_Mimic(this)
endfunction

function ProjectileWithCollision_onDestroy takes integer this returns nothing
	call Projectile_onDestroy(this)
endfunction

function MirrorRocket_onDestroy takes integer this returns nothing
	call ProjectileWithCollision_onDestroy(this)
endfunction

function dealloc_MirrorRocket takes integer obj returns nothing
	if Entity_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type MirrorRocket")
		call I2S(1 / 0)
	else
		set Entity_nextFree[Entity_firstFree] = obj
		set Entity_firstFree = Entity_firstFree + 1
		set Entity_typeId[obj] = 0
	endif
endfunction

function destroyMirrorRocket takes integer this returns nothing
	call MirrorRocket_onDestroy(this)
	call dealloc_MirrorRocket(this)
endfunction

function dealloc_PhysicalUnitEntity takes integer obj returns nothing
	if Entity_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type PhysicalUnitEntity")
		call I2S(1 / 0)
	else
		set Entity_nextFree[Entity_firstFree] = obj
		set Entity_firstFree = Entity_firstFree + 1
		set Entity_typeId[obj] = 0
	endif
endfunction

function destroyPhysicalUnitEntity takes integer this returns nothing
	call PhysicalUnitEntity_onDestroy(this)
	call dealloc_PhysicalUnitEntity(this)
endfunction

function dealloc_Projectile takes integer obj returns nothing
	if Entity_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type Projectile")
		call I2S(1 / 0)
	else
		set Entity_nextFree[Entity_firstFree] = obj
		set Entity_firstFree = Entity_firstFree + 1
		set Entity_typeId[obj] = 0
	endif
endfunction

function destroyProjectile takes integer this returns nothing
	call Projectile_onDestroy(this)
	call dealloc_Projectile(this)
endfunction

function dealloc_ProjectileWithCollision takes integer obj returns nothing
	if Entity_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type ProjectileWithCollision")
		call I2S(1 / 0)
	else
		set Entity_nextFree[Entity_firstFree] = obj
		set Entity_firstFree = Entity_firstFree + 1
		set Entity_typeId[obj] = 0
	endif
endfunction

function destroyProjectileWithCollision takes integer this returns nothing
	call ProjectileWithCollision_onDestroy(this)
	call dealloc_ProjectileWithCollision(this)
endfunction

function Ring_onDestroy takes integer this returns nothing
	call FxEntity_onDestroy(this)
endfunction

function dealloc_Ring takes integer obj returns nothing
	if Entity_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type Ring")
		call I2S(1 / 0)
	else
		set Entity_nextFree[Entity_firstFree] = obj
		set Entity_firstFree = Entity_firstFree + 1
		set Entity_typeId[obj] = 0
	endif
endfunction

function destroyRing takes integer this returns nothing
	call Ring_onDestroy(this)
	call dealloc_Ring(this)
endfunction

function dealloc_UnitEntity takes integer obj returns nothing
	if Entity_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type UnitEntity")
		call I2S(1 / 0)
	else
		set Entity_nextFree[Entity_firstFree] = obj
		set Entity_firstFree = Entity_firstFree + 1
		set Entity_typeId[obj] = 0
	endif
endfunction

function destroyUnitEntity takes integer this returns nothing
	call UnitEntity_onDestroy(this)
	call dealloc_UnitEntity(this)
endfunction

function dispatch_Entity_destroyEntity takes integer this returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Entity.destroyEntity")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Entity.destroyEntity on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	if Entity_typeId[this] <= 29 then
		if Entity_typeId[this] <= 26 then
			if Entity_typeId[this] <= 24 then
				if Entity_typeId[this] <= 23 then
					call destroyEntity(this)
				else
					call destroyUnitEntity(this)
				endif
			elseif Entity_typeId[this] <= 25 then
				call destroyPhysicalUnitEntity(this)
			else
				call destroyFxEntity(this)
			endif
		elseif Entity_typeId[this] <= 28 then
			if Entity_typeId[this] <= 27 then
				call destroyProjectile(this)
			else
				call destroyProjectileWithCollision(this)
			endif
		else
			call destroyMirrorRocket(this)
		endif
	elseif Entity_typeId[this] <= 34 then
		if Entity_typeId[this] <= 33 then
			if Entity_typeId[this] <= 32 then
				call destroyRing(this)
			else
				call destroyHero(this)
			endif
		else
			call destroyMimic(this)
		endif
	elseif Entity_typeId[this] <= 45 then
		if Entity_typeId[this] <= 42 then
			call destroyCreep(this)
		else
			call destroyHomingProjectile(this)
		endif
	else
		call destroyEntity(this)
	endif
endfunction

function dispatch_Explosive_explode takes integer this returns nothing
endfunction

function Explosive_update takes integer this returns nothing
	if Explosive_timed[this] and Explosive_activated[this] then
		set Explosive_timeout[this] = Explosive_timeout[this] - Basics_ANIMATION_PERIOD
		if Explosive_timeout[this] <= 0. then
			call dispatch_Explosive_explode(this)
		endif
	endif
endfunction

function unit_setPos takes unit this, real x, real y returns unit
	call SetUnitPosition(this, x, y)
	return this
endfunction

function Fx_setPos takes integer this, real pos_x, real pos_y, real pos_z returns integer
	call unit_setPos(Fx_dummy[this], pos_x, pos_y)
	call dispatch_Fx_setZ(this, pos_z - getTerrainZ(pos_x, pos_y))
	return this
endfunction

function dispatch_Fx_setPos takes integer this, real pos_x, real pos_y, real pos_z returns integer
	local integer setPos_result
	if Fx_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Fx.setPos")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Fx.setPos on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set setPos_result = Fx_setPos(this, pos_x, pos_y, pos_z)
	return setPos_result
endfunction

function vec3_op_mult takes real this_x, real this_y, real this_z, real factor returns real
	set vec3_op_mult_return_x = this_x * factor
	set vec3_op_mult_return_y = this_y * factor
	set vec3_op_mult_return_z = this_z * factor
	return vec3_op_mult_return_x
endfunction

function FxEntity_update takes integer this returns nothing
	local integer tempIndex = this
	local integer temp_4 = tempIndex
	local integer tempIndex_2 = this
	local real temp = Entity_pos[tempIndex_2]
	local real temp_2 = Entity_pos_2[tempIndex_2]
	local real temp_3 = Entity_pos_3[tempIndex_2]
	local integer tempIndex_3 = this
	local integer tempIndex_4
	local integer temp_5
	set Entity_pos[temp_4] = vec3_op_plus(temp, temp_2, temp_3, vec3_op_mult(Entity_vel[tempIndex_3], Entity_vel_2[tempIndex_3], Entity_vel_3[tempIndex_3], Entity_speedFactor[this]), vec3_op_mult_return_y, vec3_op_mult_return_z)
	set Entity_pos_2[tempIndex] = vec3_op_plus_return_y_2
	set Entity_pos_3[tempIndex] = vec3_op_plus_return_z_2
	set temp_5 = FxEntity_fx[this]
	set tempIndex_4 = this
	call dispatch_Fx_setPos(temp_5, Entity_pos[tempIndex_4], Entity_pos_2[tempIndex_4], Entity_pos_3[tempIndex_4])
endfunction

function FxEntity_setPos takes integer this returns nothing
	local integer temp = FxEntity_fx[this]
	local integer tempIndex = this
	call dispatch_Fx_setPos(temp, Entity_pos[tempIndex], Entity_pos_2[tempIndex], Entity_pos_3[tempIndex])
endfunction

function dispatch_FxEntity_setPos takes integer this returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling FxEntity.setPos")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called FxEntity.setPos on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	if Entity_typeId[this] <= 32 then
		if Entity_typeId[this] <= 29 then
			call FxEntity_setPos(this)
		else
			call FxEntity_setPos(this)
		endif
	else
		call FxEntity_setPos(this)
	endif
endfunction

function Projectile_update takes integer this returns nothing
	local integer tempIndex = this
	local integer temp_4 = tempIndex
	local integer tempIndex_2 = this
	local real temp = Entity_pos[tempIndex_2]
	local real temp_2 = Entity_pos_2[tempIndex_2]
	local real temp_3 = Entity_pos_3[tempIndex_2]
	local integer tempIndex_3 = this
	set Entity_pos[temp_4] = vec3_op_plus(temp, temp_2, temp_3, Entity_vel[tempIndex_3], Entity_vel_2[tempIndex_3], Entity_vel_3[tempIndex_3])
	set Entity_pos_2[tempIndex] = vec3_op_plus_return_y_2
	set Entity_pos_3[tempIndex] = vec3_op_plus_return_z_2
	call dispatch_FxEntity_setPos(this)
	if Projectile_timed[this] then
		set Projectile_time[this] = Projectile_time[this] + Basics_ANIMATION_PERIOD
		if Projectile_time[this] >= Projectile_maxTime[this] then
			call dispatch_Entity_terminate(this)
		endif
	endif
	if Projectile_ranged[this] then
		set Projectile_dist[this] = Projectile_dist[this] + Projectile_speed[this]
		if Projectile_dist[this] > Projectile_maxDist[this] then
			call dispatch_Entity_terminate(this)
		endif
	endif
endfunction

function angleBetweenCoords takes real x1, real y1, real x2, real y2 returns real
	return real_asAngleRadians(Atan2(y2 - y1, x2 - x1))
endfunction

function angle_op_minus takes real this_radians, real other_radians returns real
	return this_radians - other_radians
endfunction

function Projectile_getSpeed takes integer this returns real
	return Projectile_speed[this]
endfunction

function dispatch_Projectile_getSpeed takes integer this returns real
	local real getSpeed_result
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Projectile.getSpeed")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Projectile.getSpeed on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	if Entity_typeId[this] <= 29 then
		set getSpeed_result = Projectile_getSpeed(this)
	else
		set getSpeed_result = Projectile_getSpeed(this)
	endif
	return getSpeed_result
endfunction

function vec3_op_minus takes real this_x, real this_y, real this_z, real v_x, real v_y, real v_z returns real
	set vec3_op_minus_return_x = this_x - v_x
	set vec3_op_minus_return_y = this_y - v_y
	set vec3_op_minus_return_z = this_z - v_z
	return vec3_op_minus_return_x
endfunction

function vec3_setLength takes real this_x, real this_y, real this_z, real length returns real
	local real l = SquareRoot(this_x * this_x + this_y * this_y + this_z * this_z)
	if l == 0.0 then
		call printError("vector.setLength error: The length of the vector is 0.0!")
		set vec3_setLength_return_x = 0.
		set vec3_setLength_return_y = 0.
		set vec3_setLength_return_z = 0.
		return vec3_setLength_return_x
	endif
	set l = length / l
	set vec3_setLength_return_x = this_x * l
	set vec3_setLength_return_y = this_y * l
	set vec3_setLength_return_z = this_z * l
	return vec3_setLength_return_x
endfunction

function HomingProjectile_update takes integer this returns nothing
	local integer tempIndex = this
	local real tempTupleSelectionResult_1 = Entity_pos[tempIndex]
	local real tempTupleSelectionResult_2 = Entity_pos_2[tempIndex]
	local real tempTupleSelectionResult_3 = Entity_pos_3[tempIndex]
	local real temp_2 = tempTupleSelectionResult_1
	local integer tempIndex_2 = this
	local real tempTupleSelectionResult_1_2 = Entity_pos[tempIndex_2]
	local real tempTupleSelectionResult_2_2 = Entity_pos_2[tempIndex_2]
	local real tempTupleSelectionResult_3_2 = Entity_pos_3[tempIndex_2]
	local real temp_3 = tempTupleSelectionResult_2_2
	local integer tempIndex_3 = HomingProjectile_target[this]
	local real tempTupleSelectionResult_1_3 = Entity_pos[tempIndex_3]
	local real tempTupleSelectionResult_2_3 = Entity_pos_2[tempIndex_3]
	local real tempTupleSelectionResult_3_3 = Entity_pos_3[tempIndex_3]
	local real temp_4 = tempTupleSelectionResult_1_3
	local integer tempIndex_4 = HomingProjectile_target[this]
	local real tempTupleSelectionResult_1_4 = Entity_pos[tempIndex_4]
	local real tempTupleSelectionResult_2_4 = Entity_pos_2[tempIndex_4]
	local real tempTupleSelectionResult_3_4 = Entity_pos_3[tempIndex_4]
	local real dist = distanceBetweenCoords(temp_2, temp_3, temp_4, tempTupleSelectionResult_2_4)
	local integer tempIndex_5 = this
	local real tempTupleSelectionResult_1_5 = Entity_pos[tempIndex_5]
	local real tempTupleSelectionResult_2_5 = Entity_pos_2[tempIndex_5]
	local real tempTupleSelectionResult_3_5 = Entity_pos_3[tempIndex_5]
	local real temp_5 = tempTupleSelectionResult_1_5
	local integer tempIndex_6 = this
	local real tempTupleSelectionResult_1_6 = Entity_pos[tempIndex_6]
	local real tempTupleSelectionResult_2_6 = Entity_pos_2[tempIndex_6]
	local real tempTupleSelectionResult_3_6 = Entity_pos_3[tempIndex_6]
	local real temp_6 = tempTupleSelectionResult_2_6
	local integer tempIndex_7 = HomingProjectile_target[this]
	local real tempTupleSelectionResult_1_7 = Entity_pos[tempIndex_7]
	local real tempTupleSelectionResult_2_7 = Entity_pos_2[tempIndex_7]
	local real tempTupleSelectionResult_3_7 = Entity_pos_3[tempIndex_7]
	local real temp_7 = tempTupleSelectionResult_1_7
	local integer tempIndex_8 = HomingProjectile_target[this]
	local real tempTupleSelectionResult_1_8 = Entity_pos[tempIndex_8]
	local real tempTupleSelectionResult_2_8 = Entity_pos_2[tempIndex_8]
	local real tempTupleSelectionResult_3_8 = Entity_pos_3[tempIndex_8]
	local real anglexy_radians = angleBetweenCoords(temp_5, temp_6, temp_7, tempTupleSelectionResult_2_8)
	local integer temp = HomingProjectile_htype[this]
	local real df1
	local real df2
	local real ns
	local real d
	local real tmp_x
	local real tmp_y
	local real tmp_z
	local integer tempIndex_9
	local integer tempIndex_10
	local integer tempIndex_11
	local integer tempIndex_12
	local integer tempIndex_13
	local integer tempIndex_14
	local integer tempIndex_15
	local integer tempIndex_16
	local integer tempIndex_17
	local integer tempIndex_18
	local real tempTupleSelectionResult_1_9
	local real tempTupleSelectionResult_2_9
	local real tempTupleSelectionResult_3_9
	local integer tempIndex_19
	local real tempTupleSelectionResult_1_10
	local real tempTupleSelectionResult_2_10
	local real tempTupleSelectionResult_3_10
	local integer tempIndex_20
	local integer tempIndex_21
	local integer tempIndex_22
	local integer tempIndex_23
	local integer tempIndex_24
	local integer tempIndex_25
	local integer tempIndex_26
	local integer tempIndex_27
	local integer tempIndex_28
	local integer tempIndex_29
	local real temp_8
	local real temp_9
	local real temp_10
	local integer temp_11
	local real temp_12
	local real temp_13
	local real temp_14
	local integer temp_15
	local real temp_16
	local integer temp_17
	local real temp_18
	local real temp_19
	local real temp_20
	local integer temp_21
	local real temp_22
	local real temp_23
	local real temp_24
	local integer temp_25
	local integer temp_26
	local real temp_27
	local real temp_28
	local real temp_29
	local integer temp_30
	if temp == 0 then
	elseif temp == 1 then
		set tempIndex_9 = this
		set temp_11 = tempIndex_9
		set tempIndex_10 = HomingProjectile_target[this]
		set temp_8 = Entity_pos[tempIndex_10]
		set temp_9 = Entity_pos_2[tempIndex_10]
		set temp_10 = Entity_pos_3[tempIndex_10]
		set tempIndex_11 = this
		set Entity_vel[temp_11] = vec3_setLength(vec3_op_minus(temp_8, temp_9, temp_10, Entity_pos[tempIndex_11], Entity_pos_2[tempIndex_11], Entity_pos_3[tempIndex_11]), vec3_op_minus_return_y, vec3_op_minus_return_z, HomingProjectile_homingSpeed[this])
		set Entity_vel_2[tempIndex_9] = vec3_setLength_return_y
		set Entity_vel_3[tempIndex_9] = vec3_setLength_return_z
	elseif temp == 4 then
	elseif temp == 2 then
		set temp_12 = anglexy_radians
		set tempIndex_12 = this
		set df1 = angle_radians(angle_op_minus(temp_12, Projectile_xyAngle[tempIndex_12]))
		set temp_13 = Maths_PI2 + angle_radians(anglexy_radians)
		set tempIndex_13 = this
		set df2 = temp_13 - angle_radians(Projectile_xyAngle[tempIndex_13])
		set ns = HomingProjectile_homingSpeed[this]
		if df1 <= 0. then
			if df2 <= 0. then
				if df2 >= df1 then
					set df1 = df2
				endif
			elseif ( - df1) >= df2 then
				set df1 = df2
			endif
		elseif df2 <= 0. then
			if ( - df2) <= df1 then
				set df1 = df2
			endif
		elseif df2 <= df1 then
			set df1 = df2
		endif
		if df1 <= 0. then
			if ( - df1) >= ns then
				set ns =  - ns
			else
				set ns = df1
			endif
		elseif df1 <= ns then
			set ns = df1
		endif
		set tempIndex_14 = this
		set d = angle_radians(Projectile_xyAngle[tempIndex_14])
		set d = d + ns
		if d >= Maths_PI2 then
			set d = d - Maths_PI2
		elseif d < 0. then
			set d = d + Maths_PI2
		endif
		call dispatch_Projectile_setXYAngle(this, d)
		set tempIndex_15 = this
		set temp_15 = tempIndex_15
		set temp_14 = dispatch_Projectile_getSpeed(this)
		set tempIndex_16 = this
		set Entity_vel[temp_15] = temp_14 * angle_cos(Projectile_xyAngle[tempIndex_16])
		set temp_17 = tempIndex_15
		set temp_16 = dispatch_Projectile_getSpeed(this)
		set tempIndex_17 = this
		set Entity_vel_2[temp_17] = temp_16 * angle_sin(Projectile_xyAngle[tempIndex_17])
		set Entity_vel_3[tempIndex_15] = 0.
	elseif temp == 3 then
		set tempIndex_18 = this
		set tempTupleSelectionResult_1_9 = Entity_pos[tempIndex_18]
		set tempTupleSelectionResult_2_9 = Entity_pos_2[tempIndex_18]
		set tempTupleSelectionResult_3_9 = Entity_pos_3[tempIndex_18]
		set tmp_x = polarProjectionX(tempTupleSelectionResult_1_9, dispatch_Projectile_getSpeed(this), anglexy_radians)
		set tempIndex_19 = this
		set tempTupleSelectionResult_1_10 = Entity_pos[tempIndex_19]
		set tempTupleSelectionResult_2_10 = Entity_pos_2[tempIndex_19]
		set tempTupleSelectionResult_3_10 = Entity_pos_3[tempIndex_19]
		set tmp_y = polarProjectionY(tempTupleSelectionResult_2_10, dispatch_Projectile_getSpeed(this), anglexy_radians)
		set tmp_z = 0.
		set temp_18 = tmp_x
		set temp_19 = tmp_y
		set temp_20 = tmp_z
		set tempIndex_20 = this
		set tmp_x = vec3_op_minus(temp_18, temp_19, temp_20, Entity_pos[tempIndex_20], Entity_pos_2[tempIndex_20], Entity_pos_3[tempIndex_20])
		set tmp_y = vec3_op_minus_return_y
		set tmp_z = vec3_op_minus_return_z
		set tempIndex_21 = this
		set temp_21 = tempIndex_21
		set tempIndex_22 = this
		set Entity_vel[temp_21] = vec3_op_plus(Entity_vel[tempIndex_22], Entity_vel_2[tempIndex_22], Entity_vel_3[tempIndex_22], tmp_x, tmp_y, tmp_z)
		set Entity_vel_2[tempIndex_21] = vec3_op_plus_return_y_2
		set Entity_vel_3[tempIndex_21] = vec3_op_plus_return_z_2
		set tempIndex_23 = this
		set temp_25 = tempIndex_23
		set tempIndex_24 = this
		set temp_22 = Entity_pos[tempIndex_24]
		set temp_23 = Entity_pos_2[tempIndex_24]
		set temp_24 = Entity_pos_3[tempIndex_24]
		set tempIndex_25 = this
		set Entity_pos[temp_25] = vec3_op_plus(temp_22, temp_23, temp_24, Entity_vel[tempIndex_25], Entity_vel_2[tempIndex_25], Entity_vel_3[tempIndex_25])
		set Entity_pos_2[tempIndex_23] = vec3_op_plus_return_y_2
		set Entity_pos_3[tempIndex_23] = vec3_op_plus_return_z_2
		set temp_26 = FxEntity_fx[this]
		set tempIndex_26 = this
		call dispatch_Fx_setPos(temp_26, Entity_pos[tempIndex_26], Entity_pos_2[tempIndex_26], Entity_pos_3[tempIndex_26])
		set tempIndex_27 = this
		set temp_30 = tempIndex_27
		set tempIndex_28 = this
		set temp_27 = Entity_vel[tempIndex_28]
		set temp_28 = Entity_vel_2[tempIndex_28]
		set temp_29 = Entity_vel_3[tempIndex_28]
		set tempIndex_29 = this
		set Entity_vel[temp_30] = vec3_op_minus(temp_27, temp_28, temp_29, vec3_op_mult(Entity_vel[tempIndex_29], Entity_vel_2[tempIndex_29], Entity_vel_3[tempIndex_29], HomingProjectile_homingSpeed[this]), vec3_op_mult_return_y, vec3_op_mult_return_z)
		set Entity_vel_2[tempIndex_27] = vec3_op_minus_return_y
		set Entity_vel_3[tempIndex_27] = vec3_op_minus_return_z
	endif
	call Projectile_update(this)
endfunction

function ProjectileWithCollision_collisionRadius takes integer this returns real
	return Entity_radius[this]
endfunction

function dispatch_ProjectileWithCollision_collisionRadius takes integer this returns real
	local real collisionRadius_result
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ProjectileWithCollision.collisionRadius")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ProjectileWithCollision.collisionRadius on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set collisionRadius_result = ProjectileWithCollision_collisionRadius(this)
	return collisionRadius_result
endfunction

function CollisionModule_checkForCollisions takes integer this, real pos_x, real pos_y returns nothing
	set CollisionModule_temp = this
	call GroupEnumUnitsInRange(TempGroups_ENUM_GROUP, pos_x, pos_y, dispatch_ProjectileWithCollision_collisionRadius(this), CollisionModule_enumFilter)
endfunction

function dispatch_ProjectileWithCollision_checkForCollisions takes integer this, real pos_x, real pos_y returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling ProjectileWithCollision.checkForCollisions")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called ProjectileWithCollision.checkForCollisions on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call CollisionModule_checkForCollisions(this, pos_x, pos_y)
endfunction

function ProjectileWithCollision_update takes integer this returns nothing
	local integer tempIndex
	local integer temp
	call Projectile_update(this)
	set temp = this
	set tempIndex = this
	call dispatch_ProjectileWithCollision_checkForCollisions(temp, vec3_toVec2(Entity_pos[tempIndex], Entity_pos_2[tempIndex], Entity_pos_3[tempIndex]), vec3_toVec2_return_y)
endfunction

function MirrorRocket_setFacing takes integer this returns real
	local integer tempIndex
	set MirrorRocket_facing[this] = angle_op_plus(unit_getFacingAngle(MirrorRocket_sample[this]), Maths_PI)
	set tempIndex = this
	return MirrorRocket_facing[tempIndex]
endfunction

function dispatch_MirrorRocket_setFacing takes integer this returns real
	local real setFacing_result_radians
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling MirrorRocket.setFacing")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called MirrorRocket.setFacing on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set setFacing_result_radians = MirrorRocket_setFacing(this)
	return setFacing_result_radians
endfunction

function MirrorRocket_update takes integer this returns nothing
	local integer tempIndex
	local integer tempIndex_2
	local real tempTupleSelectionResult_1
	local real tempTupleSelectionResult_2
	local real tempTupleSelectionResult_3
	local integer tempIndex_3
	local real tempTupleSelectionResult_1_2
	local real tempTupleSelectionResult_2_2
	local real tempTupleSelectionResult_3_2
	local real temp
	local integer temp_2
	call dispatch_Projectile_setXYAngle(this, dispatch_MirrorRocket_setFacing(this))
	set tempIndex = this
	set temp_2 = tempIndex
	set tempIndex_2 = this
	set tempTupleSelectionResult_1 = Entity_pos[tempIndex_2]
	set tempTupleSelectionResult_2 = Entity_pos_2[tempIndex_2]
	set tempTupleSelectionResult_3 = Entity_pos_3[tempIndex_2]
	set temp = tempTupleSelectionResult_1
	set tempIndex_3 = this
	set tempTupleSelectionResult_1_2 = Entity_pos[tempIndex_3]
	set tempTupleSelectionResult_2_2 = Entity_pos_2[tempIndex_3]
	set tempTupleSelectionResult_3_2 = Entity_pos_3[tempIndex_3]
	set Entity_pos_3[temp_2] = getTerrainZ(temp, tempTupleSelectionResult_2_2) + 20.
	call dispatch_Projectile_setSpeed(this, MirrorRocket_spd[this])
	call ProjectileWithCollision_update(this)
endfunction

function UnitEntity_updatePos takes integer this returns nothing
	local integer tempIndex = this
	local integer tempIndex_2
	local real tempTupleSelectionResult_1
	local real tempTupleSelectionResult_2
	local real tempTupleSelectionResult_3
	local integer temp
	set Entity_pos[tempIndex] = unit_getX(UnitEntity_actor[this])
	set Entity_pos_2[tempIndex] = unit_getY(UnitEntity_actor[this])
	set temp = tempIndex
	set tempIndex_2 = this
	set tempTupleSelectionResult_1 = Entity_pos[tempIndex_2]
	set tempTupleSelectionResult_2 = Entity_pos_2[tempIndex_2]
	set tempTupleSelectionResult_3 = Entity_pos_3[tempIndex_2]
	set Entity_pos_3[temp] = tempTupleSelectionResult_3
endfunction

function dispatch_UnitEntity_updatePos takes integer this returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitEntity.updatePos")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitEntity.updatePos on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	if Entity_typeId[this] <= 34 then
		if Entity_typeId[this] <= 25 then
			call UnitEntity_updatePos(this)
		else
			call UnitEntity_updatePos(this)
		endif
	else
		call UnitEntity_updatePos(this)
	endif
endfunction

function UnitEntity_update takes integer this returns nothing
	call dispatch_UnitEntity_updatePos(this)
endfunction

function unit_setXY takes unit this, real x, real y returns unit
	call SetUnitX(this, x)
	call SetUnitY(this, y)
	return this
endfunction

function UnitEntity_setXYZ takes integer this, real tpos_x, real tpos_y, real tpos_z, real tZ returns nothing
	local integer tempIndex = this
	set Entity_pos[tempIndex] = tpos_x
	set Entity_pos_2[tempIndex] = tpos_y
	set Entity_pos_3[tempIndex] = tpos_z
	call unit_setXY(UnitEntity_actor[this], tpos_x, tpos_y)
	call unit_setFlyHeight(UnitEntity_actor[this], tpos_z - tZ, 0.)
endfunction

function dispatch_UnitEntity_setXYZ takes integer this, real tpos_x, real tpos_y, real tpos_z, real tZ returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitEntity.setXYZ")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitEntity.setXYZ on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	if Entity_typeId[this] <= 34 then
		if Entity_typeId[this] <= 25 then
			call UnitEntity_setXYZ(this, tpos_x, tpos_y, tpos_z, tZ)
		else
			call UnitEntity_setXYZ(this, tpos_x, tpos_y, tpos_z, tZ)
		endif
	else
		call UnitEntity_setXYZ(this, tpos_x, tpos_y, tpos_z, tZ)
	endif
endfunction

function unit_setPropWindow takes unit this, real value returns unit
	call SetUnitPropWindow(this, value)
	return this
endfunction

function vec3_lengthSquared takes real this_x, real this_y, real this_z returns real
	return this_x * this_x + this_y * this_y + this_z * this_z
endfunction

function PhysicalUnitEntity_update takes integer this returns nothing
	local integer tempIndex
	local real tempTupleSelectionResult_1
	local real tempTupleSelectionResult_2
	local real tempTupleSelectionResult_3
	local integer tempIndex_2
	local real tempTupleSelectionResult_1_2
	local real tempTupleSelectionResult_2_2
	local real tempTupleSelectionResult_3_2
	local integer tempIndex_3
	local real tempTupleSelectionResult_1_3
	local real tempTupleSelectionResult_2_3
	local real tempTupleSelectionResult_3_3
	local integer tempIndex_4
	local integer tempIndex_5
	local integer tempIndex_6
	local integer tempIndex_7
	local integer tempIndex_8
	local real tempTupleSelectionResult_1_4
	local real tempTupleSelectionResult_2_4
	local real tempTupleSelectionResult_3_4
	local integer tempIndex_9
	local integer tempIndex_10
	local integer tempIndex_11
	local integer tempIndex_12
	local integer tempIndex_13
	local integer tempIndex_14
	local integer tempIndex_15
	local integer tempIndex_16
	local integer tempIndex_17
	local real temp
	local integer temp_2
	local integer temp_3
	local integer temp_4
	local real temp_5
	local real temp_6
	local real temp_7
	local integer temp_8
	local integer temp_9
	call UnitEntity_update(this)
	set temp_2 = this
	set tempIndex = this
	set tempTupleSelectionResult_1 = Entity_pos[tempIndex]
	set tempTupleSelectionResult_2 = Entity_pos_2[tempIndex]
	set tempTupleSelectionResult_3 = Entity_pos_3[tempIndex]
	set temp = tempTupleSelectionResult_1
	set tempIndex_2 = this
	set tempTupleSelectionResult_1_2 = Entity_pos[tempIndex_2]
	set tempTupleSelectionResult_2_2 = Entity_pos_2[tempIndex_2]
	set tempTupleSelectionResult_3_2 = Entity_pos_3[tempIndex_2]
	set PhysicalUnitEntity_terrainZ[temp_2] = getTerrainZ(temp, tempTupleSelectionResult_2_2)
	if PhysicalUnitEntity_flying[this] then
		set tempIndex_3 = this
		set tempTupleSelectionResult_1_3 = Entity_pos[tempIndex_3]
		set tempTupleSelectionResult_2_3 = Entity_pos_2[tempIndex_3]
		set tempTupleSelectionResult_3_3 = Entity_pos_3[tempIndex_3]
		if tempTupleSelectionResult_3_3 > PhysicalUnitEntity_terrainZ[this] + 1. then
			set tempIndex_4 = this
			set temp_3 = tempIndex_4
			set tempIndex_5 = this
			set Entity_vel[temp_3] = vec3_op_plus(Entity_vel[tempIndex_5], Entity_vel_2[tempIndex_5], Entity_vel_3[tempIndex_5], GameConstants_gravity_x, GameConstants_gravity_y, GameConstants_gravity_z)
			set Entity_vel_2[tempIndex_4] = vec3_op_plus_return_y_2
			set Entity_vel_3[tempIndex_4] = vec3_op_plus_return_z_2
		else
			set tempIndex_6 = this
			set Entity_pos_3[tempIndex_6] = PhysicalUnitEntity_terrainZ[this]
			set tempIndex_7 = this
			set Entity_vel_3[tempIndex_7] = 0.
			set PhysicalUnitEntity_flying[this] = false
			call unit_setPropWindow(UnitEntity_actor[this], 180.)
		endif
	else
		set tempIndex_8 = this
		set tempTupleSelectionResult_1_4 = Entity_pos[tempIndex_8]
		set tempTupleSelectionResult_2_4 = Entity_pos_2[tempIndex_8]
		set tempTupleSelectionResult_3_4 = Entity_pos_3[tempIndex_8]
		if tempTupleSelectionResult_3_4 > PhysicalUnitEntity_terrainZ[this] + 1. then
			set tempIndex_9 = this
			if vec3_lengthSquared(Entity_vel[tempIndex_9], Entity_vel_2[tempIndex_9], Entity_vel_3[tempIndex_9]) > 3. then
				set PhysicalUnitEntity_flying[this] = true
				call unit_setPropWindow(UnitEntity_actor[this], 0.)
			else
				set tempIndex_10 = this
				set Entity_pos_3[tempIndex_10] = PhysicalUnitEntity_terrainZ[this]
			endif
		else
			set tempIndex_11 = this
			set Entity_pos_3[tempIndex_11] = PhysicalUnitEntity_terrainZ[this] +  .1
		endif
		set tempIndex_12 = this
		set temp_4 = tempIndex_12
		set tempIndex_13 = this
		set Entity_vel[temp_4] = vec3_op_mult(Entity_vel[tempIndex_13], Entity_vel_2[tempIndex_13], Entity_vel_3[tempIndex_13],  .93)
		set Entity_vel_2[tempIndex_12] = vec3_op_mult_return_y
		set Entity_vel_3[tempIndex_12] = vec3_op_mult_return_z
	endif
	set tempIndex_14 = this
	set temp_8 = tempIndex_14
	set tempIndex_15 = this
	set temp_5 = Entity_pos[tempIndex_15]
	set temp_6 = Entity_pos_2[tempIndex_15]
	set temp_7 = Entity_pos_3[tempIndex_15]
	set tempIndex_16 = this
	set Entity_pos[temp_8] = vec3_op_plus(temp_5, temp_6, temp_7, Entity_vel[tempIndex_16], Entity_vel_2[tempIndex_16], Entity_vel_3[tempIndex_16])
	set Entity_pos_2[tempIndex_14] = vec3_op_plus_return_y_2
	set Entity_pos_3[tempIndex_14] = vec3_op_plus_return_z_2
	set temp_9 = this
	set tempIndex_17 = this
	call dispatch_UnitEntity_setXYZ(temp_9, Entity_pos[tempIndex_17], Entity_pos_2[tempIndex_17], Entity_pos_3[tempIndex_17], PhysicalUnitEntity_terrainZ[this])
endfunction

function Entity_addVel takes integer this, real vel_x, real vel_y, real vel_z returns nothing
	local integer tempIndex = this
	local integer temp = tempIndex
	local integer tempIndex_2 = this
	set Entity_vel[temp] = vec3_op_plus(Entity_vel[tempIndex_2], Entity_vel_2[tempIndex_2], Entity_vel_3[tempIndex_2], vel_x, vel_y, vel_z)
	set Entity_vel_2[tempIndex] = vec3_op_plus_return_y_2
	set Entity_vel_3[tempIndex] = vec3_op_plus_return_z_2
endfunction

function dispatch_Entity_addVel takes integer this, real vel_x, real vel_y, real vel_z returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Entity.addVel")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Entity.addVel on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	if Entity_typeId[this] <= 34 then
		if Entity_typeId[this] <= 29 then
			call Entity_addVel(this, vel_x, vel_y, vel_z)
		else
			call Entity_addVel(this, vel_x, vel_y, vel_z)
		endif
	elseif Entity_typeId[this] <= 42 then
		call Entity_addVel(this, vel_x, vel_y, vel_z)
	else
		call Entity_addVel(this, vel_x, vel_y, vel_z)
	endif
endfunction

function LinkedList_onDestroy takes integer this returns nothing
	local integer current = LLEntry_next[LinkedList_dummy[this]]
	local integer temp
	loop
		exitwhen  not (current != LinkedList_dummy[this])
		set temp = current
		set current = LLEntry_next[current]
		call dispatch_LLEntry_destroyLLEntry(temp)
	endloop
	call dispatch_LLEntry_destroyLLEntry(LinkedList_dummy[this])
endfunction

function dealloc_LinkedList takes integer obj returns nothing
	if LinkedList_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type LinkedList")
		call I2S(1 / 0)
	else
		set LinkedList_nextFree[LinkedList_firstFree] = obj
		set LinkedList_firstFree = LinkedList_firstFree + 1
		set LinkedList_typeId[obj] = 0
	endif
endfunction

function destroyLinkedList takes integer this returns nothing
	call LinkedList_onDestroy(this)
	call dealloc_LinkedList(this)
endfunction

function dispatch_LinkedList_destroyLinkedList takes integer this returns nothing
	if LinkedList_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling LinkedList.destroyLinkedList")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called LinkedList.destroyLinkedList on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call destroyLinkedList(this)
endfunction

function Table_flush takes integer this returns nothing
	call FlushChildHashtable(Table_ht, this)
endfunction

function dispatch_Table_flush takes integer this returns nothing
	if Table_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Table.flush")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Table.flush on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call Table_flush(this)
endfunction

function Table_onDestroy takes integer this returns nothing
	call dispatch_Table_flush(this)
endfunction

function dealloc_Table takes integer obj returns nothing
	if Table_typeId[obj] == 0 then
		call BJDebugMsg("Double free: object of type Table")
		call I2S(1 / 0)
	else
		set Table_nextFree[Table_firstFree] = obj
		set Table_firstFree = Table_firstFree + 1
		set Table_typeId[obj] = 0
	endif
endfunction

function destroyTable takes integer this returns nothing
	call Table_onDestroy(this)
	call dealloc_Table(this)
endfunction

function dispatch_Table_destroyTable takes integer this returns nothing
	if Table_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Table.destroyTable")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Table.destroyTable on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call destroyTable(this)
endfunction

function hashtable_loadLightningHandle takes hashtable this, integer parentKey, integer childKey returns lightning
	return LoadLightningHandle(this, parentKey, childKey)
endfunction

function Table_loadLightning takes integer this, integer parentKey returns lightning
	return hashtable_loadLightningHandle(Table_ht, this, parentKey)
endfunction

function dispatch_Table_loadLightning takes integer this, integer parentKey returns lightning
	local lightning loadLightning_result
	if Table_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Table.loadLightning")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Table.loadLightning on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	set loadLightning_result = Table_loadLightning(this, parentKey)
	set dispatch_Table_loadLightningtempReturn = loadLightning_result
	set loadLightning_result = null
	return dispatch_Table_loadLightningtempReturn
endfunction

function UnitEntity_setPos takes integer this, real tpos_x, real tpos_y, real tpos_z, real tZ returns nothing
	local integer tempIndex = this
	set Entity_pos[tempIndex] = tpos_x
	set Entity_pos_2[tempIndex] = tpos_y
	set Entity_pos_3[tempIndex] = tpos_z
	call unit_setPos(UnitEntity_actor[this], tpos_x, tpos_y)
	call unit_setFlyHeight(UnitEntity_actor[this], tpos_z - tZ, 0.)
endfunction

function dispatch_UnitEntity_setPos takes integer this, real tpos_x, real tpos_y, real tpos_z, real tZ returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling UnitEntity.setPos")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called UnitEntity.setPos on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	if Entity_typeId[this] <= 34 then
		if Entity_typeId[this] <= 25 then
			call UnitEntity_setPos(this, tpos_x, tpos_y, tpos_z, tZ)
		else
			call UnitEntity_setPos(this, tpos_x, tpos_y, tpos_z, tZ)
		endif
	else
		call UnitEntity_setPos(this, tpos_x, tpos_y, tpos_z, tZ)
	endif
endfunction

function hashtable_saveFogStateHandle takes hashtable this, integer parentKey, integer childKey, fogstate value returns hashtable
	call SaveFogStateHandle(this, parentKey, childKey, value)
	return this
endfunction

function Table_saveFogState takes integer this, integer parentKey, fogstate value returns nothing
	call hashtable_saveFogStateHandle(Table_ht, this, parentKey, value)
endfunction

function dispatch_Table_saveFogState takes integer this, integer parentKey, fogstate value returns nothing
	if Table_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Table.saveFogState")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Table.saveFogState on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	call Table_saveFogState(this, parentKey, value)
endfunction

function unitFromIndex takes integer index returns unit
	call dispatch_Table_saveFogState(TypeCasting_typecastdata, 0, ConvertFogState(index))
	return dispatch_Table_loadUnit(TypeCasting_typecastdata, 0)
endfunction

function unit_getFacing takes unit this returns real
	return GetUnitFacing(this)
endfunction

function Ring_update takes integer this returns nothing
	local integer wurst__iterator0
	local unit u
	local integer entity
	local integer i
	local integer tempIndex
	local real tempTupleSelectionResult_1
	local real tempTupleSelectionResult_2
	local real tempTupleSelectionResult_3
	local integer tempIndex_2
	local real tempTupleSelectionResult_1_2
	local real tempTupleSelectionResult_2_2
	local real tempTupleSelectionResult_3_2
	local integer tempIndex_3
	local integer tempIndex_4
	local integer tempIndex_5
	local integer tempIndex_6
	local real tempTupleSelectionResult_1_3
	local real tempTupleSelectionResult_2_3
	local real tempTupleSelectionResult_3_3
	local integer tempIndex_7
	local real tempTupleSelectionResult_1_4
	local real tempTupleSelectionResult_2_4
	local real tempTupleSelectionResult_3_4
	local integer tempIndex_8
	local integer tempIndex_9
	local real temp
	local real temp_2
	local real temp_3
	local real temp_4
	local real temp_5
	local real temp_6
	local real temp_7
	local real temp_8
	local integer temp_9
	local real temp_10
	local real temp_11
	local real temp_12
	local real temp_13
	local real temp_14
	local real temp_15
	local integer temp_16
	call FxEntity_update(this)
	set wurst__iterator0 = dispatch_LinkedList_iterator(Ring_unitsinside[this])
	loop
		exitwhen  not dispatch_LLIterator_hasNext(wurst__iterator0)
		set u = unitFromIndex(dispatch_LLIterator_next(wurst__iterator0))
		set tempIndex = this
		set tempTupleSelectionResult_1 = Entity_pos[tempIndex]
		set tempTupleSelectionResult_2 = Entity_pos_2[tempIndex]
		set tempTupleSelectionResult_3 = Entity_pos_3[tempIndex]
		set temp = tempTupleSelectionResult_1
		set tempIndex_2 = this
		set tempTupleSelectionResult_1_2 = Entity_pos[tempIndex_2]
		set tempTupleSelectionResult_2_2 = Entity_pos_2[tempIndex_2]
		set tempTupleSelectionResult_3_2 = Entity_pos_3[tempIndex_2]
		if distanceBetweenCoords(temp, tempTupleSelectionResult_2_2, unit_getX(u), unit_getY(u)) > Entity_radius[this] + 40. then
			call dispatch_LinkedList_remove(Ring_unitsinside[this], unitToIndex(u))
			set entity = UnitEntity_getForUnit(u)
			if entity != 0 then
				set temp_9 = entity
				set tempIndex_3 = this
				set temp_5 = Entity_pos[tempIndex_3]
				set temp_6 = Entity_pos_2[tempIndex_3]
				set temp_7 = Entity_pos_3[tempIndex_3]
				set tempIndex_4 = entity
				set temp_2 = Entity_pos[tempIndex_4]
				set temp_3 = Entity_pos_2[tempIndex_4]
				set temp_4 = Entity_pos_3[tempIndex_4]
				set tempIndex_5 = this
				set temp_10 = vec3_op_minus(temp_5, temp_6, temp_7, vec3_op_minus(temp_2, temp_3, temp_4, Entity_pos[tempIndex_5], Entity_pos_2[tempIndex_5], Entity_pos_3[tempIndex_5]), vec3_op_minus_return_y, vec3_op_minus_return_z)
				set temp_11 = vec3_op_minus_return_y
				set temp_12 = vec3_op_minus_return_z
				set tempIndex_6 = this
				set tempTupleSelectionResult_1_3 = Entity_pos[tempIndex_6]
				set tempTupleSelectionResult_2_3 = Entity_pos_2[tempIndex_6]
				set tempTupleSelectionResult_3_3 = Entity_pos_3[tempIndex_6]
				set temp_8 = tempTupleSelectionResult_1_3
				set tempIndex_7 = this
				set tempTupleSelectionResult_1_4 = Entity_pos[tempIndex_7]
				set tempTupleSelectionResult_2_4 = Entity_pos_2[tempIndex_7]
				set tempTupleSelectionResult_3_4 = Entity_pos_3[tempIndex_7]
				call dispatch_UnitEntity_setPos(temp_9, temp_10, temp_11, temp_12, getTerrainZ(temp_8, tempTupleSelectionResult_2_4))
				call unit_setFacing_2(UnitEntity_actor[entity], real_asAngleDegrees(unit_getFacing(UnitEntity_actor[entity]) - 180.))
				set temp_16 = entity
				set tempIndex_8 = this
				set temp_13 = Entity_pos[tempIndex_8]
				set temp_14 = Entity_pos_2[tempIndex_8]
				set temp_15 = Entity_pos_3[tempIndex_8]
				set tempIndex_9 = entity
				call dispatch_Entity_addVel(temp_16, vec2_toVec3(angle_toVec(vec3_angleTo2d(temp_13, temp_14, temp_15, vec3_toVec2(Entity_pos[tempIndex_9], Entity_pos_2[tempIndex_9], Entity_pos_3[tempIndex_9]), vec3_toVec2_return_y), 10.), angle_toVec_return_y), vec2_toVec3_return_y, vec2_toVec3_return_z)
				call unit_removeAbility(UnitEntity_actor[entity], Ring_BUFF_ID)
			endif
		endif
	endloop
	call dispatch_LLIterator_close(wurst__iterator0)
	set Ring_duration[this] = Ring_duration[this] - Basics_ANIMATION_PERIOD
	if Ring_duration[this] <= 0. then
		call dispatch_Entity_terminate(this)
		call dispatch_LinkedList_destroyLinkedList(Ring_unitsinside[this])
		set i = 0
		loop
			exitwhen i > 19
			call DestroyLightning(dispatch_Table_loadLightning(Ring_lts[this], i))
			set i = i + 1
		endloop
		call dispatch_Table_destroyTable(Ring_lts[this])
	endif
	set u = null
endfunction

function dispatch_Entity_update takes integer this returns nothing
	if Entity_typeId[this] == 0 then
		if this == 0 then
			call BJDebugMsg("Nullpointer exception when calling Entity.update")
			call I2S(1 / 0)
		else
			call BJDebugMsg("Called Entity.update on invalid object.")
			call I2S(1 / 0)
		endif
	endif
	if Entity_typeId[this] <= 29 then
		if Entity_typeId[this] <= 26 then
			if Entity_typeId[this] <= 25 then
				if Entity_typeId[this] <= 24 then
					call UnitEntity_update(this)
				else
					call PhysicalUnitEntity_update(this)
				endif
			else
				call FxEntity_update(this)
			endif
		elseif Entity_typeId[this] <= 28 then
			if Entity_typeId[this] <= 27 then
				call Projectile_update(this)
			else
				call ProjectileWithCollision_update(this)
			endif
		else
			call MirrorRocket_update(this)
		endif
	elseif Entity_typeId[this] <= 42 then
		if Entity_typeId[this] <= 34 then
			if Entity_typeId[this] <= 32 then
				call Ring_update(this)
			else
				call PhysicalUnitEntity_update(this)
			endif
		else
			call PhysicalUnitEntity_update(this)
		endif
	elseif Entity_typeId[this] <= 45 then
		call HomingProjectile_update(this)
	else
		call Explosive_update(this)
	endif
endfunction

function updateEntities takes nothing returns boolean
	local integer e = LinkedListModule_first
	loop
		exitwhen  not (e != 0)
		if Entity_done[e] then
			call dispatch_Entity_destroyEntity(e)
			call debugPrint("destroyed Entity", 0)
		elseif Entity_active[e] then
			call dispatch_Entity_update(e)
		endif
		set e = LinkedListModule_next[e]
	endloop
	return false
endfunction

function initGlobals takes nothing returns nothing
	set gg_rct_warmupColor = null
	set gg_rct_warmupBW = null
	set gg_cam_InitCam = null
	set gg_cam_BWStartCam = null
	set gg_cam_ColorStartCam = null
	set gg_snd_QuestFailed = null
	set gg_snd_almostKillingspree = null
	set gg_snd_fuckedUp = null
	set gg_snd_killFrenzy = null
	set gg_snd_nein = null
	set gg_snd_SerbianXaXa = null
	set gg_snd_stopMe = null
	set gg_snd_toasted = null
	set gg_snd_youSuck = null
	set gg_trg_Untitled_Trigger_001 = null
	set gg_trg_Untitled_Trigger_006 = null
	set gg_trg_Untitled_Trigger_004 = null
	set gg_trg_Untitled_Trigger_005 = null
	set gg_trg_Untitled_Trigger_002 = null
	set gg_trg_Untitled_Trigger_003 = null
	set gg_trg_Untitled_Trigger_003_Copy = null
	set gg_unit_h000_0000 = null
	set gg_unit_h001_0001 = null
	set gg_unit_e001_0009 = null
	set gg_unit_e001_0011 = null
	set gg_unit_e001_0012 = null
	set gg_unit_e001_0013 = null
	set gg_unit_e002_0014 = null
	set gg_unit_e002_0015 = null
	set gg_unit_e002_0016 = null
	set gg_unit_e002_0017 = null
	set Table_firstFree = 0
	set Table_maxIndex = 0
	set Player_firstFree = 0
	set Player_maxIndex = 0
	set LocalFileTest_firstFree = 0
	set LocalFileTest_maxIndex = 0
	set File_firstFree = 0
	set File_maxIndex = 0
	set LinkedList_firstFree = 0
	set LinkedList_maxIndex = 0
	set LLEntry_firstFree = 0
	set LLEntry_maxIndex = 0
	set LLIterator_firstFree = 0
	set LLIterator_maxIndex = 0
	set LinkedListPredicate_firstFree = 0
	set LinkedListPredicate_maxIndex = 0
	set LinkedListUpdater_firstFree = 0
	set LinkedListUpdater_maxIndex = 0
	set StringIterator_firstFree = 0
	set StringIterator_maxIndex = 0
	set StringLines_firstFree = 0
	set StringLines_maxIndex = 0
	set W3UDefinition_firstFree = 0
	set W3UDefinition_maxIndex = 0
	set BigNum_l_firstFree = 0
	set BigNum_l_maxIndex = 0
	set BigNum_firstFree = 0
	set BigNum_maxIndex = 0
	set Board_firstFree = 0
	set Board_maxIndex = 0
	set MBItem_firstFree = 0
	set MBItem_maxIndex = 0
	set Entity_firstFree = 0
	set Entity_maxIndex = 0
	set DelayData_firstFree = 0
	set DelayData_maxIndex = 0
	set DummyCaster_firstFree = 0
	set DummyCaster_maxIndex = 0
	set Stack_firstFree = 0
	set Stack_maxIndex = 0
	set SEntry_firstFree = 0
	set SEntry_maxIndex = 0
	set SIterator_firstFree = 0
	set SIterator_maxIndex = 0
	set SData_firstFree = 0
	set SData_maxIndex = 0
	set Sound_firstFree = 0
	set Sound_maxIndex = 0
	set PlayerData_firstFree = 0
	set PlayerData_maxIndex = 0
	set Fx_firstFree = 0
	set Fx_maxIndex = 0
	set CreepNode_firstFree = 0
	set CreepNode_maxIndex = 0
	set Spawner_firstFree = 0
	set Spawner_maxIndex = 0
	set AbilityDefinition_firstFree = 0
	set AbilityDefinition_maxIndex = 0
	set ref_function_IssueHauntOrderAtLocBJFilter = function IssueHauntOrderAtLocBJFilter
	set ref_function_EnumDestructablesInCircleBJFilter = function EnumDestructablesInCircleBJFilter
	set ref_function_GetUnitsInRectOfPlayerFilter = function GetUnitsInRectOfPlayerFilter
	set ref_function_GetUnitsOfTypeIdAllFilter = function GetUnitsOfTypeIdAllFilter
	set ref_function_GetUnitsOfPlayerAndTypeIdFilter = function GetUnitsOfPlayerAndTypeIdFilter
	set ref_function_MeleeTrainedUnitIsHeroBJFilter = function MeleeTrainedUnitIsHeroBJFilter
	set ref_function_LivingPlayerUnitsOfTypeIdFilter = function LivingPlayerUnitsOfTypeIdFilter
	set ref_function_QueuedTriggerDoneBJ = function QueuedTriggerDoneBJ
	set ref_function_SetDNCSoundsDawn = function SetDNCSoundsDawn
	set ref_function_SetDNCSoundsDusk = function SetDNCSoundsDusk
	set ref_function_SetDNCSoundsDay = function SetDNCSoundsDay
	set ref_function_SetDNCSoundsNight = function SetDNCSoundsNight
	set ref_function_StartStockUpdates = function StartStockUpdates
	set ref_function_RemovePurchasedItem = function RemovePurchasedItem
	set ref_function_MarkGameStarted = function MarkGameStarted
	set ref_function_PerformStockUpdates = function PerformStockUpdates
	set ref_function_UpdateEachStockBuildingEnum = function UpdateEachStockBuildingEnum
	set ref_function_DelayedSuspendDecay = function DelayedSuspendDecay
	set ref_function_MeleeTriggerTournamentFinishSoon = function MeleeTriggerTournamentFinishSoon
	set ref_function_MeleeTriggerTournamentFinishNow = function MeleeTriggerTournamentFinishNow
	set ref_function_MeleeTriggerActionConstructCancel = function MeleeTriggerActionConstructCancel
	set ref_function_MeleeTriggerActionUnitDeath = function MeleeTriggerActionUnitDeath
	set ref_function_MeleeTriggerActionUnitConstructionStart = function MeleeTriggerActionUnitConstructionStart
	set ref_function_MeleeTriggerActionPlayerDefeated = function MeleeTriggerActionPlayerDefeated
	set ref_function_MeleeTriggerActionPlayerLeft = function MeleeTriggerActionPlayerLeft
	set ref_function_MeleeTriggerActionAllianceChange = function MeleeTriggerActionAllianceChange
	set ref_function_MeleeTriggerActionPlayerLeft_2 = function MeleeTriggerActionPlayerLeft
	set ref_function_MeleeTriggerActionAllianceChange_2 = function MeleeTriggerActionAllianceChange
	set ref_function_MeleeDoDrawEnum = function MeleeDoDrawEnum
	set ref_function_MeleeDoDefeatEnum = function MeleeDoDefeatEnum
	set ref_function_MeleeDoVictoryEnum = function MeleeDoVictoryEnum
	set ref_function_MeleeDoDefeatEnum_2 = function MeleeDoDefeatEnum
	set ref_function_MeleeDoVictoryEnum_2 = function MeleeDoVictoryEnum
	set ref_function_MeleeCrippledPlayerTimeout = function MeleeCrippledPlayerTimeout
	set ref_function_MeleeEnumFindNearestMine = function MeleeEnumFindNearestMine
	set ref_function_MeleeClearExcessUnit = function MeleeClearExcessUnit
	set ref_function_MeleeGrantItemsToTrainedHero = function MeleeGrantItemsToTrainedHero
	set ref_function_MeleeGrantItemsToHiredHero = function MeleeGrantItemsToHiredHero
	set ref_function_SetPlayerColorBJEnum = function SetPlayerColorBJEnum
	set ref_function_TriggerActionUnitRescuedBJ = function TriggerActionUnitRescuedBJ
	set ref_function_MakeUnitRescuableToForceBJEnum = function MakeUnitRescuableToForceBJEnum
	set ref_function_FinishCinematicFadeBJ = function FinishCinematicFadeBJ
	set ref_function_ContinueCinematicFadeBJ = function ContinueCinematicFadeBJ
	set ref_function_SetCineModeVolumeGroupsImmediateBJ = function SetCineModeVolumeGroupsImmediateBJ
	set ref_function_CancelCineSceneBJ = function CancelCineSceneBJ
	set ref_function_CustomDefeatRestartBJ = function CustomDefeatRestartBJ
	set ref_function_CustomDefeatReduceDifficultyBJ = function CustomDefeatReduceDifficultyBJ
	set ref_function_CustomDefeatLoadBJ = function CustomDefeatLoadBJ
	set ref_function_CustomDefeatQuitBJ = function CustomDefeatQuitBJ
	set ref_function_CustomVictoryOkBJ = function CustomVictoryOkBJ
	set ref_function_CustomVictoryQuitBJ = function CustomVictoryQuitBJ
	set ref_function_MakeUnitsPassiveForPlayerEnum = function MakeUnitsPassiveForPlayerEnum
	set ref_function_CountUnitsInGroupEnum = function CountUnitsInGroupEnum
	set ref_function_GetRandomSubGroupEnum = function GetRandomSubGroupEnum
	set ref_function_CountPlayersInForceEnum = function CountPlayersInForceEnum
	set ref_function_GroupAddGroupEnum = function GroupAddGroupEnum
	set ref_function_ForcePickRandomPlayerEnum = function ForcePickRandomPlayerEnum
	set ref_function_GroupPickRandomUnitEnum = function GroupPickRandomUnitEnum
	set ref_function_GroupRemoveGroupEnum = function GroupRemoveGroupEnum
	set ref_function_NearbyElevatorExistsEnum = function NearbyElevatorExistsEnum
	set ref_function_FindElevatorWallBlockerEnum = function FindElevatorWallBlockerEnum
	set ref_function_NudgeUnitsInRectEnum = function NudgeUnitsInRectEnum
	set ref_function_NudgeItemsInRectEnum = function NudgeItemsInRectEnum
	set ref_function_RandomDestructableInRectBJEnum = function RandomDestructableInRectBJEnum
	set ref_function_PauseAllUnitsBJEnum = function PauseAllUnitsBJEnum
	set ref_function_WakePlayerUnitsEnum = function WakePlayerUnitsEnum
	set ref_function_IsUnitGroupInRectBJEnum = function IsUnitGroupInRectBJEnum
	set ref_function_IsUnitGroupEmptyBJEnum = function IsUnitGroupEmptyBJEnum
	set ref_function_IsUnitGroupDeadBJEnum = function IsUnitGroupDeadBJEnum
	set ref_function_SelectGroupBJEnum = function SelectGroupBJEnum
	set ref_function_SelectGroupBJEnum_2 = function SelectGroupBJEnum
	set ref_function_DelayedSuspendDecayStopAnimEnum = function DelayedSuspendDecayStopAnimEnum
	set ref_function_DelayedSuspendDecayStopAnimEnum_2 = function DelayedSuspendDecayStopAnimEnum
	set ref_function_DelayedSuspendDecayFleshEnum = function DelayedSuspendDecayFleshEnum
	set ref_function_DelayedSuspendDecayBoneEnum = function DelayedSuspendDecayBoneEnum
	set ref_function_DelayedSuspendDecayStopAnimEnum_3 = function DelayedSuspendDecayStopAnimEnum
	set ref_function_GetLastCreatedGroupEnum = function GetLastCreatedGroupEnum
	set ref_function_RandomItemInRectBJEnum = function RandomItemInRectBJEnum
	set ref_function_VolumeGroupResetImmediateBJ = function VolumeGroupResetImmediateBJ
	set ref_function_SetSpeechVolumeGroupsImmediateBJ = function SetSpeechVolumeGroupsImmediateBJ
	set ref_function_RegisterDestDeathInRegionEnum = function RegisterDestDeathInRegionEnum
	set ref_function_GroupAddGroupEnum_2 = function GroupAddGroupEnum
	set ref_function_hideItem = function hideItem
	set ref_function_resetCam = function resetCam
	set ref_function_resetCam_2 = function resetCam
	set ref_function_resetCam_3 = function resetCam
	set ref_function_preloadSpells = function preloadSpells
	set ref_function_Sound_playSound = function Sound_playSound
	set ref_function_Sound_recycle = function Sound_recycle
	set ref_function_Sound_playSound_2 = function Sound_playSound
	set ref_function_Sound_playSound_3 = function Sound_playSound
	set ref_function_Sound_playSound_4 = function Sound_playSound
	set ref_function_revive = function revive
	set ref_function_playerLeft = function playerLeft
	set ref_function_setTime = function setTime
	set ref_function_updateBoard = function updateBoard
	set ref_function_filter = function filter
	set ref_function_CountUnitsInGroupEnum_2 = function CountUnitsInGroupEnum
	set ref_function_CreepNode_orderAttack = function CreepNode_orderAttack
	set ref_function_Spawner_spawnMelee = function Spawner_spawnMelee
	set ref_function_Spawner_spawnMelee_2 = function Spawner_spawnMelee
	set ref_function_Spawner_spawnRanged = function Spawner_spawnRanged
	set ref_function_Spawner_spawnRanged_2 = function Spawner_spawnRanged
	set ref_function_Spawner_spawnUnits = function Spawner_spawnUnits
	set ref_function_leaveWarmupColor = function leaveWarmupColor
	set ref_function_leaveWarmupBW = function leaveWarmupBW
	set ref_function_finishWarmup = function finishWarmup
	set ref_function_Trig_Untitled_Trigger_001_Actions = function Trig_Untitled_Trigger_001_Actions
	set ref_function_Trig_Untitled_Trigger_006_Actions = function Trig_Untitled_Trigger_006_Actions
	set ref_function_Trig_Untitled_Trigger_004_Actions = function Trig_Untitled_Trigger_004_Actions
	set ref_function_Trig_Untitled_Trigger_005_Actions = function Trig_Untitled_Trigger_005_Actions
	set ref_function_Trig_Untitled_Trigger_002_Actions = function Trig_Untitled_Trigger_002_Actions
	set ref_function_Trig_Untitled_Trigger_003_Actions = function Trig_Untitled_Trigger_003_Actions
	set ref_function_Trig_Untitled_Trigger_003_Copy_Actions = function Trig_Untitled_Trigger_003_Copy_Actions
	set ref_function_applyDamageMod = function applyDamageMod
	set ref_function_forced = function forced
	set ref_function_updateEntities = function updateEntities
	set ref_function_updateBoard_2 = function updateBoard
	set ref_function_LocalFileTest_onInit = function LocalFileTest_onInit
	set ref_function_activateDebug = function activateDebug
	set ref_function_finishPreload = function finishPreload
	set ref_function_CollisionModule_enumFilter = function CollisionModule_enumFilter_2
	set ref_function_checkDelayed = function checkDelayed
	set ref_function_DummyCaster_filterAOE = function DummyCaster_filterAOE
	set ref_function_Hero_evaluateCast = function Hero_evaluateCast
	set ref_function_Hero_evaluateFinish = function Hero_evaluateFinish
	set ref_function_Hero_evaluateOrder = function Hero_evaluateOrder
	set ref_function_onHeroDeath = function onHeroDeath
	set ref_function_onHeroBuy = function onHeroBuy
	set ref_function_initPlayers = function initPlayers
	set ref_function_giveXP = function giveXP
	set ref_function_disableXpGain = function disableXpGain
	set ref_function_onDeath = function onDeath_2
	set ref_function_Spawner_spawnUnits_2 = function Spawner_spawnUnits
	set ref_function_onSpawnDeath = function onSpawnDeath
	set ref_function_onDeath_2 = function onDeath
	set ref_function_initPreload = function initPreload
	set ref_function_preloadNote = function preloadNote
	set ref_function_onDamageEvent = function onDamageEvent
endfunction

function init_Basics takes nothing returns nothing
	set Basics_DUMMY_UNIT_ID = 2019849581
	set Basics_HEIGHT_ENABLER = 1097691750
	set Basics_TREE_RECOGNITION = 1097163124
	set Basics_LOCUST_ID = 1097625443
	set Basics_ANIMATION_PERIOD = 0.03
	set Basics_MAX_COLLISION_SIZE = 197.0
	set Basics_DUMMY_PLAYER = Player(15)
	set Basics_DUMMY_HOSTILE_PLAYER = Player(12)
endfunction

function init_BigNum takes nothing returns nothing
	set BigNum_l_count = 0
endfunction

function c2sInit takes nothing returns nothing
	set Char_c2s[0] = ""
	set Char_c2s[1] = ""
	set Char_c2s[2] = ""
	set Char_c2s[3] = ""
	set Char_c2s[4] = ""
	set Char_c2s[5] = ""
	set Char_c2s[6] = ""
	set Char_c2s[7] = ""
	set Char_c2s[8] = ""
	set Char_c2s[9] = "\t"
	set Char_c2s[10] = "\n"
	set Char_c2s[11] = ""
	set Char_c2s[12] = ""
	set Char_c2s[13] = "\r"
	set Char_c2s[14] = ""
	set Char_c2s[15] = ""
	set Char_c2s[16] = ""
	set Char_c2s[17] = ""
	set Char_c2s[18] = ""
	set Char_c2s[19] = ""
	set Char_c2s[20] = ""
	set Char_c2s[21] = ""
	set Char_c2s[22] = ""
	set Char_c2s[23] = ""
	set Char_c2s[24] = ""
	set Char_c2s[25] = ""
	set Char_c2s[26] = ""
	set Char_c2s[27] = ""
	set Char_c2s[28] = ""
	set Char_c2s[29] = ""
	set Char_c2s[30] = ""
	set Char_c2s[31] = ""
	set Char_c2s[32] = " "
	set Char_c2s[33] = "!"
	set Char_c2s[34] = "\""
	set Char_c2s[35] = "#"
	set Char_c2s[36] = "$"
	set Char_c2s[37] = "%"
	set Char_c2s[38] = "&"
	set Char_c2s[39] = "'"
	set Char_c2s[40] = "("
	set Char_c2s[41] = ")"
	set Char_c2s[42] = "*"
	set Char_c2s[43] = "+"
	set Char_c2s[44] = ","
	set Char_c2s[45] = "-"
	set Char_c2s[46] = "."
	set Char_c2s[47] = "/"
	set Char_c2s[48] = "0"
	set Char_c2s[49] = "1"
	set Char_c2s[50] = "2"
	set Char_c2s[51] = "3"
	set Char_c2s[52] = "4"
	set Char_c2s[53] = "5"
	set Char_c2s[54] = "6"
	set Char_c2s[55] = "7"
	set Char_c2s[56] = "8"
	set Char_c2s[57] = "9"
	set Char_c2s[58] = ":"
	set Char_c2s[59] = ";"
	set Char_c2s[60] = "<"
	set Char_c2s[61] = "="
	set Char_c2s[62] = ">"
	set Char_c2s[63] = "?"
	set Char_c2s[64] = "@"
	set Char_c2s[65] = "A"
	set Char_c2s[66] = "B"
	set Char_c2s[67] = "C"
	set Char_c2s[68] = "D"
	set Char_c2s[69] = "E"
	set Char_c2s[70] = "F"
	set Char_c2s[71] = "G"
	set Char_c2s[72] = "H"
	set Char_c2s[73] = "I"
	set Char_c2s[74] = "J"
	set Char_c2s[75] = "K"
	set Char_c2s[76] = "L"
	set Char_c2s[77] = "M"
	set Char_c2s[78] = "N"
	set Char_c2s[79] = "O"
	set Char_c2s[80] = "P"
	set Char_c2s[81] = "Q"
	set Char_c2s[82] = "R"
	set Char_c2s[83] = "S"
	set Char_c2s[84] = "T"
	set Char_c2s[85] = "U"
	set Char_c2s[86] = "V"
	set Char_c2s[87] = "W"
	set Char_c2s[88] = "X"
	set Char_c2s[89] = "Y"
	set Char_c2s[90] = "Z"
	set Char_c2s[91] = "["
	set Char_c2s[92] = "\\"
	set Char_c2s[93] = "]"
	set Char_c2s[94] = "^"
	set Char_c2s[95] = "_"
	set Char_c2s[96] = "`"
	set Char_c2s[97] = "a"
	set Char_c2s[98] = "b"
	set Char_c2s[99] = "c"
	set Char_c2s[100] = "d"
	set Char_c2s[101] = "e"
	set Char_c2s[102] = "f"
	set Char_c2s[103] = "g"
	set Char_c2s[104] = "h"
	set Char_c2s[105] = "i"
	set Char_c2s[106] = "j"
	set Char_c2s[107] = "k"
	set Char_c2s[108] = "l"
	set Char_c2s[109] = "m"
	set Char_c2s[110] = "n"
	set Char_c2s[111] = "o"
	set Char_c2s[112] = "p"
	set Char_c2s[113] = "q"
	set Char_c2s[114] = "r"
	set Char_c2s[115] = "s"
	set Char_c2s[116] = "t"
	set Char_c2s[117] = "u"
	set Char_c2s[118] = "v"
	set Char_c2s[119] = "w"
	set Char_c2s[120] = "x"
	set Char_c2s[121] = "y"
	set Char_c2s[122] = "z"
	set Char_c2s[123] = "{"
	set Char_c2s[124] = "|"
	set Char_c2s[125] = "}"
	set Char_c2s[126] = "~"
	set Char_c2s[127] = ""
endfunction

function string_toUpperCase takes string this returns string
	return StringCase(this, true)
endfunction

function s2cInit takes nothing returns nothing
	local integer i = 0
	local integer temp = Char_MAX_INDEX
	loop
		exitwhen i > temp
		if string_toUpperCase(Char_c2s[i]) == Char_c2s[i] then
			set Char_s2c[StringHash(Char_c2s[i]) / 2033480 + 1002] = i
		endif
		set i = i + 1
	endloop
endfunction

function widthInit takes nothing returns nothing
	set Char_width[0] = 0
	set Char_width[1] = 0
	set Char_width[2] = 0
	set Char_width[3] = 0
	set Char_width[4] = 0
	set Char_width[5] = 0
	set Char_width[6] = 0
	set Char_width[7] = 0
	set Char_width[8] = 0
	set Char_width[9] = 0
	set Char_width[10] = 1000000000
	set Char_width[11] = 0
	set Char_width[12] = 0
	set Char_width[13] = 0
	set Char_width[14] = 0
	set Char_width[15] = 0
	set Char_width[16] = 0
	set Char_width[17] = 0
	set Char_width[18] = 0
	set Char_width[19] = 0
	set Char_width[20] = 0
	set Char_width[21] = 0
	set Char_width[22] = 0
	set Char_width[23] = 0
	set Char_width[24] = 0
	set Char_width[25] = 0
	set Char_width[26] = 0
	set Char_width[27] = 0
	set Char_width[28] = 0
	set Char_width[29] = 0
	set Char_width[30] = 0
	set Char_width[31] = 0
	set Char_width[32] = 70
	set Char_width[33] = 60
	set Char_width[34] = 80
	set Char_width[35] = 180
	set Char_width[36] = 140
	set Char_width[37] = 199
	set Char_width[38] = 219
	set Char_width[39] = 40
	set Char_width[40] = 80
	set Char_width[41] = 80
	set Char_width[42] = 121
	set Char_width[43] = 140
	set Char_width[44] = 55
	set Char_width[45] = 104
	set Char_width[46] = 51
	set Char_width[47] = 121
	set Char_width[48] = 160
	set Char_width[49] = 60
	set Char_width[50] = 160
	set Char_width[51] = 160
	set Char_width[52] = 180
	set Char_width[53] = 160
	set Char_width[54] = 160
	set Char_width[55] = 140
	set Char_width[56] = 160
	set Char_width[57] = 160
	set Char_width[58] = 60
	set Char_width[59] = 60
	set Char_width[60] = 140
	set Char_width[61] = 140
	set Char_width[62] = 140
	set Char_width[63] = 140
	set Char_width[64] = 199
	set Char_width[65] = 206
	set Char_width[66] = 162
	set Char_width[67] = 183
	set Char_width[68] = 193
	set Char_width[69] = 153
	set Char_width[70] = 122
	set Char_width[71] = 204
	set Char_width[72] = 200
	set Char_width[73] = 77
	set Char_width[74] = 80
	set Char_width[75] = 183
	set Char_width[76] = 148
	set Char_width[77] = 264
	set Char_width[78] = 200
	set Char_width[79] = 225
	set Char_width[80] = 156
	set Char_width[81] = 237
	set Char_width[82] = 179
	set Char_width[83] = 156
	set Char_width[84] = 151
	set Char_width[85] = 187
	set Char_width[86] = 183
	set Char_width[87] = 282
	set Char_width[88] = 204
	set Char_width[89] = 179
	set Char_width[90] = 179
	set Char_width[91] = 80
	set Char_width[92] = 100
	set Char_width[93] = 80
	set Char_width[94] = 140
	set Char_width[95] = 140
	set Char_width[96] = 100
	set Char_width[97] = 151
	set Char_width[98] = 159
	set Char_width[99] = 147
	set Char_width[100] = 162
	set Char_width[101] = 159
	set Char_width[102] = 98
	set Char_width[103] = 176
	set Char_width[104] = 159
	set Char_width[105] = 65
	set Char_width[106] = 77
	set Char_width[107] = 147
	set Char_width[108] = 68
	set Char_width[109] = 227
	set Char_width[110] = 156
	set Char_width[111] = 166
	set Char_width[112] = 162
	set Char_width[113] = 162
	set Char_width[114] = 98
	set Char_width[115] = 126
	set Char_width[116] = 100
	set Char_width[117] = 159
	set Char_width[118] = 159
	set Char_width[119] = 229
	set Char_width[120] = 159
	set Char_width[121] = 159
	set Char_width[122] = 147
	set Char_width[123] = 80
	set Char_width[124] = 60
	set Char_width[125] = 80
	set Char_width[126] = 140
	set Char_width[127] = 0
endfunction

function init_Char takes nothing returns nothing
	set Char_MAX_INDEX = 126 + 1
	set Char_DEFAULT_WIDTH = 0
	set Char_DEFAULT_STRING = ""
	call c2sInit()
	call s2cInit()
	call widthInit()
endfunction

function init_Colors takes nothing returns nothing
	local integer i = 0
	local integer i2
	local integer tempIndex
	local integer tempIndex_2
	local integer tempIndex_3
	local integer tempIndex_4
	local integer tempIndex_5
	local integer tempIndex_6
	local integer tempIndex_7
	local integer tempIndex_8
	local integer tempIndex_9
	local integer tempIndex_10
	local integer tempIndex_11
	local integer tempIndex_12
	local integer tempIndex_13
	loop
		exitwhen i > 9
		set Colors_hexs[i] = int_toString(i)
		set i = i + 1
	endloop
	set Colors_hexs[10] = "A"
	set Colors_hexs[11] = "B"
	set Colors_hexs[12] = "C"
	set Colors_hexs[13] = "D"
	set Colors_hexs[14] = "E"
	set Colors_hexs[15] = "F"
	set Colors_decs = new_Table()
	set i2 = 0
	loop
		exitwhen i2 > 9
		call dispatch_Table_saveInt(Colors_decs, StringHash(int_toString(i2)), i2)
		set i2 = i2 + 1
	endloop
	call dispatch_Table_saveInt(Colors_decs, StringHash("A"), 10)
	call dispatch_Table_saveInt(Colors_decs, StringHash("B"), 11)
	call dispatch_Table_saveInt(Colors_decs, StringHash("C"), 12)
	call dispatch_Table_saveInt(Colors_decs, StringHash("D"), 13)
	call dispatch_Table_saveInt(Colors_decs, StringHash("E"), 14)
	call dispatch_Table_saveInt(Colors_decs, StringHash("F"), 15)
	set tempIndex = 0
	set Colors_playercolors[tempIndex] = 255
	set Colors_playercolors_2[tempIndex] = 255
	set Colors_playercolors_3[tempIndex] = 255
	set tempIndex_2 = 1
	set Colors_playercolors[tempIndex_2] = 255
	set Colors_playercolors_2[tempIndex_2] = 2
	set Colors_playercolors_3[tempIndex_2] = 2
	set tempIndex_3 = 2
	set Colors_playercolors[tempIndex_3] = 0
	set Colors_playercolors_2[tempIndex_3] = 65
	set Colors_playercolors_3[tempIndex_3] = 255
	set tempIndex_4 = 3
	set Colors_playercolors[tempIndex_4] = 27
	set Colors_playercolors_2[tempIndex_4] = 230
	set Colors_playercolors_3[tempIndex_4] = 184
	set tempIndex_5 = 4
	set Colors_playercolors[tempIndex_5] = 83
	set Colors_playercolors_2[tempIndex_5] = 0
	set Colors_playercolors_3[tempIndex_5] = 128
	set tempIndex_6 = 5
	set Colors_playercolors[tempIndex_6] = 255
	set Colors_playercolors_2[tempIndex_6] = 204
	set Colors_playercolors_3[tempIndex_6] = 0
	set tempIndex_7 = 6
	set Colors_playercolors[tempIndex_7] = 255
	set Colors_playercolors_2[tempIndex_7] = 255
	set Colors_playercolors_3[tempIndex_7] = 1
	set tempIndex_8 = 7
	set Colors_playercolors[tempIndex_8] = 31
	set Colors_playercolors_2[tempIndex_8] = 191
	set Colors_playercolors_3[tempIndex_8] = 0
	set tempIndex_9 = 8
	set Colors_playercolors[tempIndex_9] = 229
	set Colors_playercolors_2[tempIndex_9] = 90
	set Colors_playercolors_3[tempIndex_9] = 175
	set tempIndex_10 = 9
	set Colors_playercolors[tempIndex_10] = 148
	set Colors_playercolors_2[tempIndex_10] = 149
	set Colors_playercolors_3[tempIndex_10] = 150
	set tempIndex_11 = 10
	set Colors_playercolors[tempIndex_11] = 125
	set Colors_playercolors_2[tempIndex_11] = 190
	set Colors_playercolors_3[tempIndex_11] = 241
	set tempIndex_12 = 11
	set Colors_playercolors[tempIndex_12] = 15
	set Colors_playercolors_2[tempIndex_12] = 97
	set Colors_playercolors_3[tempIndex_12] = 69
	set tempIndex_13 = 12
	set Colors_playercolors[tempIndex_13] = 77
	set Colors_playercolors_2[tempIndex_13] = 41
	set Colors_playercolors_3[tempIndex_13] = 3
endfunction

function init_Creep takes nothing returns nothing
	set Creep_deathTrig = CreateTrigger()
	call trigger_addAction(Creep_deathTrig, ref_function_onDeath)
endfunction

function init_CreepNode takes nothing returns nothing
	set CreepNode_color_Main_x = -2000.
	set CreepNode_color_Main_y = -2500.
	set CreepNode_bw_Main_x = 2100.
	set CreepNode_bw_Main_y = 2134.
endfunction

function init_CreepSpawn takes nothing returns nothing
	set CreepSpawn_MELEE_ID = 1697656880
	set CreepSpawn_RANGED_ID = 1697656883
	set CreepSpawn_spawnUnitsCall = ref_function_Spawner_spawnUnits_2
	set CreepSpawn_deathTrig = CreateTrigger()
	call trigger_addAction(CreepSpawn_deathTrig, ref_function_onSpawnDeath)
endfunction

function init_CustomExp takes nothing returns nothing
	local trigger t
	set CustomExp_RADIUS = 650.
	set CustomExp_CLOSE = 200.
	set CustomExp_MEDIUM = 400.
	set CustomExp_FAR = 650.
	set CustomExp_CLOSE_FACTOR = 1.
	set CustomExp_MEDIUM_FACTOR =  .5
	set CustomExp_FAR_FACTOR =  .25
	set CustomExp_UNIT_EXP = 10
	set CustomExp_HERO_EXP = 15
	set CustomExp_BONUS_EXP = 9
	set CustomExp_DURATION = 5.
	set CustomExp_SIZE = 12.
	set CustomExp_RED = 0
	set CustomExp_GREEN = 74
	set CustomExp_BLUE = 255
	set CustomExp_SHOW_TEXT = true
	set CustomExp_SPLIT = false
	set CustomExp_DISTANCE_EFFECT = true
	set t = CreateTrigger()
	call TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_DEATH)
	call TriggerAddAction(t, ref_function_giveXP)
	call TimerStart(CreateTimer(),  .04, false, ref_function_disableXpGain)
	set t = null
endfunction

function init_DamageMod takes nothing returns nothing
	set DamageMod_DAMAGE_ABIL_ID = 1093677393
	set DamageMod_MAX_HP_GAINED = 50000.
	set DamageMod_tim = CreateTimer()
	set DamageMod_currentDamager = null
	set DamageMod_lifeMod = 0.
	set DamageMod_N = -1
endfunction

function init_Debug takes nothing returns nothing
	set Debug_entityCount = 0
	set Debug_currentEntityCount = 0
	set Debug_unitEntityCount = 0
endfunction

function init_DummyCaster takes nothing returns nothing
	set DummyCaster_INITIAL_DUMMY_COUNT = 12
	set DummyCaster_DUMMY_STACK_LIMIT = 50
	set DummyCaster_FORCE_INVISIBLE_CAST = false
	set DummyCaster_AUTO_RESET_MANA_COOLDOWN = true
	set DummyCaster_aoefunc = Condition(ref_function_DummyCaster_filterAOE)
endfunction

function init_DummyRecycler takes nothing returns nothing
	local integer endPos
	local integer n
	local real angl
	local real x
	local real y
	local integer i
	set DummyRecycler_ANG_N = 8
	set DummyRecycler_ANG_STORAGE_MAX = 12
	set DummyRecycler_DEATH_TIME = 2.
	set DummyRecycler_ANG_VAL = 360 / DummyRecycler_ANG_N
	set DummyRecycler_ANG_MID = DummyRecycler_ANG_VAL / 2
	set DummyRecycler_recycle = 0
	set DummyRecycler_protect = CreateGroup()
	set LinkedListModule_first_2 = 0
	set LinkedListModule_last_2 = 0
	set LinkedListModule_size_2 = 0
	set n = DummyRecycler_ANG_N
	set x = MapBounds_mapMaxX
	set y = MapBounds_mapMaxY
	set i = DummyRecycler_ANG_N
	loop
		exitwhen i < 0
		set DummyRecycler_stackN[i] = DummyRecycler_ANG_STORAGE_MAX
		set DummyRecycler_queueNext[i] = n
		set angl = int_toReal(i * DummyRecycler_ANG_VAL + DummyRecycler_ANG_MID)
		set endPos = n + DummyRecycler_ANG_STORAGE_MAX
		set DummyRecycler_queueLast[i] = endPos - 1
		loop
			exitwhen  not (n < endPos)
			set DummyRecycler_queueNext[n] = n + 1
			set DummyRecycler_stack[n] = CreateUnit(Basics_DUMMY_PLAYER, Basics_DUMMY_UNIT_ID, x, y, angl)
			call unit_pause(unit_addAbility(unit_removeAbility(unit_addAbility(DummyRecycler_stack[n], Basics_HEIGHT_ENABLER), Basics_HEIGHT_ENABLER), Basics_LOCUST_ID))
			set n = n + 1
		endloop
		set DummyRecycler_queueNext[n - 1] = 0
		set i = i - 1
	endloop
	call TimerStart(CreateTimer(), 0.1, true, ref_function_checkDelayed)
endfunction

function init_Entity takes nothing returns nothing
	set LinkedListModule_first = 0
	set LinkedListModule_last = 0
	set LinkedListModule_size = 0
	set Entity_BUFF_REFLECT_ID = 1110454320
endfunction

function init_EntityAttackDetection takes nothing returns nothing
	set EntityAttackDetection_currentDmgTrig = CreateTrigger()
	set EntityAttackDetection_toDestroy = null
	call trigger_addCondition(EntityAttackDetection_currentDmgTrig, Condition(ref_function_onDamageEvent))
endfunction

function File_doInit takes nothing returns nothing
	set File_extra0[1] = "000"
	set File_extra0[2] = "00"
	set File_extra0[3] = "0"
	set File_extra0[4] = ""
	set File_stringTable = InitHashtable()
endfunction

function init_FileIO takes nothing returns nothing
	call TimerStart(CreateTimer(), 0., false, ref_function_LocalFileTest_onInit)
	set LocalFileTest_FLAG_FOLDER = "Flag"
	set LocalFileTest_FLAG_FILE = "flag"
	set LocalFileTest_success = false
	set File_SAVE_GAME_FOLDER = "GameData"
	set File_MAX_LINE_LENGTH = 209
	call File_doInit()
endfunction

function init_GameConstants takes nothing returns nothing
	set GameConstants_TEAM_ONE_CPU = Player(0)
	set GameConstants_TEAM_TWO_CPU = Player(6)
	set GameConstants_gravity_x = 0.
	set GameConstants_gravity_y = 0.
	set GameConstants_gravity_z =  - 0.8
	set GameConstants_cplayerCount = 13
	set GameConstants_MAP_VER = "Crap AoS"
	set GameConstants_colorcode[0] = "|cffFF0202"
	set GameConstants_colorcode[1] = "|cff0041FF"
	set GameConstants_colorcode[2] = "|cff1BE6B8"
	set GameConstants_colorcode[3] = "|cff530080"
	set GameConstants_colorcode[4] = "|cffFFFC00"
	set GameConstants_colorcode[5] = "|cffFE890D"
	set GameConstants_colorcode[6] = "|cff1FBF00"
	set GameConstants_colorcode[7] = "|cffE55AAF"
	set GameConstants_colorcode[8] = "|cff949596"
	set GameConstants_colorcode[9] = "|cff7DBEF1"
	set GameConstants_colorcode[10] = "|cff0F6145"
	set GameConstants_colorcode[11] = "|cff4D2903"
endfunction

function init_GameTimer takes nothing returns nothing
	set GameTimer_gameTimer = CreateTimer()
	call timer_start(GameTimer_gameTimer, 100000., null)
endfunction

function init_Hero takes nothing returns nothing
	set Hero_castTrig = CreateTrigger()
	set Hero_channelTrig = CreateTrigger()
	set Hero_orderTrig = CreateTrigger()
	set Hero_deathTrig = CreateTrigger()
	set Hero_intPool = new_LinkedList()
	set Hero_BUFF_REVERSE_MOVEMENT = 1110454320
	call trigger_addAction(Hero_castTrig, ref_function_Hero_evaluateCast)
	call trigger_addAction(Hero_channelTrig, ref_function_Hero_evaluateFinish)
	call trigger_addAction(Hero_orderTrig, ref_function_Hero_evaluateOrder)
	call trigger_addAction(Hero_deathTrig, ref_function_onHeroDeath)
endfunction

function init_HeroPick takes nothing returns nothing
	set HeroPick_buyTrig = CreateTrigger()
	call trigger_registerUnitEvent(HeroPick_buyTrig, gg_unit_h000_0000, EVENT_UNIT_SELL)
	call trigger_registerUnitEvent(HeroPick_buyTrig, gg_unit_h001_0001, EVENT_UNIT_SELL)
	call trigger_addAction(HeroPick_buyTrig, ref_function_onHeroBuy)
endfunction

function init_Init takes nothing returns nothing
	set Init_startpos_x = -6144.
	set Init_startpos_y = 3584.
	set Init_msg = "|cffA5A5A5Preloading"
	set Init_farz = 500.
	call timer_start(getTimer(), 0.01, ref_function_initPreload)
	call timer_startPeriodic(getTimer(), Basics_ANIMATION_PERIOD, ref_function_preloadNote)
	call CameraSetupApplyForceDuration(gg_cam_InitCam, true, 0.)
endfunction

function init_MapBounds takes nothing returns nothing
	set MapBounds_mapRect = GetPlayableMapRect()
	set MapBounds_mapMinX = GetRectMinX(MapBounds_mapRect)
	set MapBounds_mapMinY = GetRectMinY(MapBounds_mapRect)
	set MapBounds_mapMaxX = GetRectMaxX(MapBounds_mapRect)
	set MapBounds_mapMaxY = GetRectMaxY(MapBounds_mapRect)
	set MapBounds_mapCenter_x = (MapBounds_mapMaxX + MapBounds_mapMinX) / 2.
	set MapBounds_mapCenter_y = (MapBounds_mapMinY + MapBounds_mapMaxY) / 2.
endfunction

function init_Maths takes nothing returns nothing
	set Maths_PI = 3.141592654
	set Maths_PI2 = 6.28318
	set Maths_PIHALF = 1.570796326
	set Maths_DEGTORAD = 0.017453293
	set Maths_RADTODEG = 57.295779513
endfunction

function addToPreload takes integer id, integer typ returns nothing
	if typ == 0 then
		call dispatch_LinkedList_add(PreloadList_unitIds, id)
	else
		call dispatch_LinkedList_add(PreloadList_spellIds, id)
	endif
endfunction

function init_MimicHero takes nothing returns nothing
	set MimicHero_MIRROR_ROCKET_ID = 1093677104
	set MimicHero_REVERSE_ROUTING_ID = 1093677105
	set MimicHero_FLIPCIRCLE_ID = 1093677107
	set MimicHero_RR_DUMMY_ID = 1093677106
	set MimicHero_MIMIC_HERO_ID = 1211117618
	call addToPreload(MimicHero_MIMIC_HERO_ID, 0)
	call addToPreload(MimicHero_MIRROR_ROCKET_ID, 1)
endfunction

function init_MultiboardClass takes nothing returns nothing
	set MultiboardClass_counter = 0
endfunction

function init_ObjectIds takes nothing returns nothing
	set ObjectIds_charMap = ".................................!.#$%&'()*+,-./0123456789:;<=>.@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~................................................................................................................................."
endfunction

function init_Player takes nothing returns nothing
	local integer i = 0
	loop
		exitwhen i > 14
		set Player_get[i] = Player(i)
		set i = i + 1
	endloop
endfunction

function init_PlayerData takes nothing returns nothing
	set PlayerData_playercount = 0
	set PlayerData_players = new_LinkedList()
	call timer_start(getTimer(), 0.01, ref_function_initPlayers)
	set PlayerData_minutes = 0
	set PlayerData_seconds = 0
endfunction

function init_PreloadHandler takes nothing returns nothing
	set PreloadHandler_autoFinish = false
	set PreloadHandler_dum = CreateUnit(Player(15), Basics_DUMMY_UNIT_ID, 0., 0., 0.)
	if PreloadHandler_dum == null then
		call printError("PreloadHandler : DUMMY_UNITID (" + idInteger2IdString(Basics_DUMMY_UNIT_ID) + ") not added correctly to the map.")
	endif
	if PreloadHandler_autoFinish then
		call TimerStart(CreateTimer(), 0.0, false, ref_function_finishPreload)
	endif
endfunction

function init_PreloadList takes nothing returns nothing
	set PreloadList_unitIds = new_LinkedList()
	set PreloadList_spellIds = new_LinkedList()
endfunction

function init_PrintingHelper takes nothing returns nothing
	local trigger t
	local integer i
	set PrintingHelper_DEBUG_LEVEL = 3
	set PrintingHelper_DEBUG_MSG_DURATION = 45.
	set PrintingHelper_msgcount = 0
	set t = CreateTrigger()
	call trigger_addAction(t, ref_function_activateDebug)
	set i = 0
	loop
		exitwhen i > 11
		set PrintingHelper_wantDebug[i] = false
		call trigger_registerPlayerChatEvent(t, Player(i), "-d", true)
		set i = i + 1
	endloop
	set t = null
endfunction

function init_ProjectileWithCollision takes nothing returns nothing
	set CollisionModule_enumFilter = Condition(ref_function_CollisionModule_enumFilter)
endfunction

function init_Rect takes nothing returns nothing
	set Rect_sourceTable = new_Table()
	set Rect_regionData = new_Table()
endfunction

function init_Ring takes nothing returns nothing
	set Ring_BUFF_INSIDE = 1093677108
	set Ring_BUFF_ID = 1110454321
endfunction

function init_Round takes nothing returns nothing
	set Round_roundCount = 0
	set Round_gameRunning = false
	set Round_warmupRunning = false
	set Round_WARUMP_TIME = 20.
endfunction

function init_SoundHelper takes nothing returns nothing
	set SoundHelper_DEFAULT_SOUND_STOPS_ON_LEAVE_RANGE = true
	set SoundHelper_DEFAULT_SOUND_FADE_IN_RATE = 10
	set SoundHelper_DEFAULT_SOUND_FADE_OUT_RATE = 10
	set SoundHelper_DEFAULT_SOUND_EAX_SETTINGS = "CombatSoundsEAX"
	set SoundHelper_DEFAULT_SOUND_VOLUME = 127
	set SoundHelper_DEFAULT_SOUND_PITCH = 1.
	set SoundHelper_SOUND_CHANNEL = 5
	set SoundHelper_SOUND_MIN_DIST = 600.
	set SoundHelper_SOUND_MAX_DIST = 10000.
	set SoundHelper_SOUND_DIST_CUT = 3000.
endfunction

function init_String takes nothing returns nothing
	set String_charset = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	set String_numberset = "0123456789"
	set String_numbersetlength = string_length(String_numberset)
	set String_charsetlength = string_length(String_charset)
endfunction

function init_Table takes nothing returns nothing
	set Table_ht = InitHashtable()
endfunction

function init_TempGroups takes nothing returns nothing
	set TempGroups_ENUM_GROUP = CreateGroup()
endfunction

function init_Terrain takes nothing returns nothing
	set Terrain_MAX_RANGE = 10.
	set Terrain_DUMMY_ITEM_ID = 2003790951
	set Terrain_tempLoc = Location(0., 0.)
	set Terrain_dItem = null
	set Terrain_find = null
	set Terrain_hidMax = 0
	set Terrain_tempPos_x = 0.
	set Terrain_tempPos_y = 0.
	set Terrain_find = Rect(0., 0., 128., 128.)
	set Terrain_dItem = CreateItem(Terrain_DUMMY_ITEM_ID, 0., 0.)
	call SetItemVisible(Terrain_dItem, false)
endfunction

function init_TimerUtils takes nothing returns nothing
	set TimerUtils_freeTimersCount = 0
	set TimerUtils_timerData = new_Table()
	set TimerUtils_HELD = 679645218
endfunction

function init_Trigger takes nothing returns nothing
	set Trigger_triggerData = new_Table()
endfunction

function init_TypeCasting takes nothing returns nothing
	set TypeCasting_typecastdata = new_Table()
endfunction

function init_Victory takes nothing returns nothing
	set Victory_deathTrig = CreateTrigger()
	call trigger_registerUnitEvent(Victory_deathTrig, gg_unit_h000_0000, EVENT_UNIT_DEATH)
	call trigger_registerUnitEvent(Victory_deathTrig, gg_unit_h001_0001, EVENT_UNIT_DEATH)
	call trigger_addAction(Victory_deathTrig, ref_function_onDeath_2)
endfunction

function main takes nothing returns nothing
	call initGlobals()
	call SetCameraBounds(( - 3328.0) + GetCameraMargin(CAMERA_MARGIN_LEFT), ( - 3584.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 3328.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 3072.0 - GetCameraMargin(CAMERA_MARGIN_TOP), ( - 3328.0) + GetCameraMargin(CAMERA_MARGIN_LEFT), 3072.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 3328.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), ( - 3584.0) + GetCameraMargin(CAMERA_MARGIN_BOTTOM))
	call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
	call SetTerrainFogEx(0, 1000.0, 7000.0, 0.500, 0.502, 0.502, 1.000)
	call SetWaterBaseColor(0, 128, 128, 255)
	call NewSoundEnvironment("Default")
	call SetAmbientDaySound("VillageDay")
	call SetAmbientNightSound("VillageNight")
	call SetMapMusic("Music", true, 0)
	call InitSounds()
	call CreateRegions()
	call CreateCameras()
	call CreateAllUnits()
	call InitBlizzard()
	call InitGlobals()
	call InitCustomTriggers()
	call init_Table()
	call init_Trigger()
	call init_Player()
	call init_FileIO()
	call init_TimerUtils()
	call init_PrintingHelper()
	call init_Maths()
	call init_Char()
	call init_String()
	call init_MapBounds()
	call init_Terrain()
	call init_Rect()
	call init_TypeCasting()
	call init_BigNum()
	call init_TempGroups()
	call init_Basics()
	call init_Colors()
	call init_GameConstants()
	call init_MultiboardClass()
	call init_ObjectIds()
	call init_PreloadHandler()
	call init_PreloadList()
	call init_ProjectileWithCollision()
	call init_GameTimer()
	call init_DummyRecycler()
	call init_DummyCaster()
	call init_Ring()
	call init_MimicHero()
	call init_HeroPick()
	call init_SoundHelper()
	call init_Hero()
	call init_PlayerData()
	call init_Debug()
	call init_Entity()
	call init_CustomExp()
	call init_Creep()
	call init_CreepNode()
	call init_CreepSpawn()
	call init_DamageMod()
	call init_EntityAttackDetection()
	call init_Round()
	call init_Init()
	call init_Victory()
endfunction

function InitAllyPriorities takes nothing returns nothing
	call SetStartLocPrioCount(1, 4)
	call SetStartLocPrio(1, 0, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 1, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 2, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(1, 3, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(2, 4)
	call SetStartLocPrio(2, 0, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 1, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 2, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(2, 3, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(3, 4)
	call SetStartLocPrio(3, 0, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 1, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 2, 8, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(3, 3, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(4, 4)
	call SetStartLocPrio(4, 0, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 1, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 2, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(4, 3, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(5, 4)
	call SetStartLocPrio(5, 0, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 1, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 2, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(5, 3, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(6, 4)
	call SetStartLocPrio(6, 0, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 1, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 2, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(6, 3, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(7, 4)
	call SetStartLocPrio(7, 0, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 1, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 2, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(7, 3, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(8, 4)
	call SetStartLocPrio(8, 0, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 1, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 2, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(8, 3, 11, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(9, 4)
	call SetStartLocPrio(9, 0, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 1, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 2, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(9, 3, 10, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(10, 4)
	call SetStartLocPrio(10, 0, 4, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 1, 5, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 2, 7, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(10, 3, 9, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(11, 4)
	call SetStartLocPrio(11, 0, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 1, 2, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 2, 3, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrio(11, 3, 8, MAP_LOC_PRIO_HIGH)
endfunction

function InitCustomPlayerSlots takes nothing returns nothing
	call SetPlayerStartLocation(Player(0), 0)
	call ForcePlayerStartLocation(Player(0), 0)
	call SetPlayerColor(Player(0), ConvertPlayerColor(0))
	call SetPlayerRacePreference(Player(0), RACE_PREF_NIGHTELF)
	call SetPlayerRaceSelectable(Player(0), false)
	call SetPlayerController(Player(0), MAP_CONTROL_COMPUTER)
	call SetPlayerStartLocation(Player(1), 1)
	call ForcePlayerStartLocation(Player(1), 1)
	call SetPlayerColor(Player(1), ConvertPlayerColor(1))
	call SetPlayerRacePreference(Player(1), RACE_PREF_NIGHTELF)
	call SetPlayerRaceSelectable(Player(1), false)
	call SetPlayerController(Player(1), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(2), 2)
	call ForcePlayerStartLocation(Player(2), 2)
	call SetPlayerColor(Player(2), ConvertPlayerColor(2))
	call SetPlayerRacePreference(Player(2), RACE_PREF_NIGHTELF)
	call SetPlayerRaceSelectable(Player(2), false)
	call SetPlayerController(Player(2), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(3), 3)
	call ForcePlayerStartLocation(Player(3), 3)
	call SetPlayerColor(Player(3), ConvertPlayerColor(3))
	call SetPlayerRacePreference(Player(3), RACE_PREF_NIGHTELF)
	call SetPlayerRaceSelectable(Player(3), false)
	call SetPlayerController(Player(3), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(4), 4)
	call ForcePlayerStartLocation(Player(4), 4)
	call SetPlayerColor(Player(4), ConvertPlayerColor(4))
	call SetPlayerRacePreference(Player(4), RACE_PREF_NIGHTELF)
	call SetPlayerRaceSelectable(Player(4), false)
	call SetPlayerController(Player(4), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(5), 5)
	call ForcePlayerStartLocation(Player(5), 5)
	call SetPlayerColor(Player(5), ConvertPlayerColor(5))
	call SetPlayerRacePreference(Player(5), RACE_PREF_NIGHTELF)
	call SetPlayerRaceSelectable(Player(5), false)
	call SetPlayerController(Player(5), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(6), 6)
	call ForcePlayerStartLocation(Player(6), 6)
	call SetPlayerColor(Player(6), ConvertPlayerColor(6))
	call SetPlayerRacePreference(Player(6), RACE_PREF_NIGHTELF)
	call SetPlayerRaceSelectable(Player(6), false)
	call SetPlayerController(Player(6), MAP_CONTROL_COMPUTER)
	call SetPlayerStartLocation(Player(7), 7)
	call ForcePlayerStartLocation(Player(7), 7)
	call SetPlayerColor(Player(7), ConvertPlayerColor(7))
	call SetPlayerRacePreference(Player(7), RACE_PREF_NIGHTELF)
	call SetPlayerRaceSelectable(Player(7), false)
	call SetPlayerController(Player(7), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(8), 8)
	call ForcePlayerStartLocation(Player(8), 8)
	call SetPlayerColor(Player(8), ConvertPlayerColor(8))
	call SetPlayerRacePreference(Player(8), RACE_PREF_NIGHTELF)
	call SetPlayerRaceSelectable(Player(8), false)
	call SetPlayerController(Player(8), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(9), 9)
	call ForcePlayerStartLocation(Player(9), 9)
	call SetPlayerColor(Player(9), ConvertPlayerColor(9))
	call SetPlayerRacePreference(Player(9), RACE_PREF_NIGHTELF)
	call SetPlayerRaceSelectable(Player(9), false)
	call SetPlayerController(Player(9), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(10), 10)
	call ForcePlayerStartLocation(Player(10), 10)
	call SetPlayerColor(Player(10), ConvertPlayerColor(10))
	call SetPlayerRacePreference(Player(10), RACE_PREF_NIGHTELF)
	call SetPlayerRaceSelectable(Player(10), false)
	call SetPlayerController(Player(10), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(11), 11)
	call ForcePlayerStartLocation(Player(11), 11)
	call SetPlayerColor(Player(11), ConvertPlayerColor(11))
	call SetPlayerRacePreference(Player(11), RACE_PREF_NIGHTELF)
	call SetPlayerRaceSelectable(Player(11), false)
	call SetPlayerController(Player(11), MAP_CONTROL_USER)
endfunction

function InitCustomTeams takes nothing returns nothing
	call SetPlayerTeam(Player(0), 0)
	call SetPlayerState(Player(0), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(1), 0)
	call SetPlayerState(Player(1), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(2), 0)
	call SetPlayerState(Player(2), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(3), 0)
	call SetPlayerState(Player(3), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(4), 0)
	call SetPlayerState(Player(4), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(5), 0)
	call SetPlayerState(Player(5), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerAllianceStateAllyBJ(Player(0), Player(1), true)
	call SetPlayerAllianceStateAllyBJ(Player(0), Player(2), true)
	call SetPlayerAllianceStateAllyBJ(Player(0), Player(3), true)
	call SetPlayerAllianceStateAllyBJ(Player(0), Player(4), true)
	call SetPlayerAllianceStateAllyBJ(Player(0), Player(5), true)
	call SetPlayerAllianceStateAllyBJ(Player(1), Player(0), true)
	call SetPlayerAllianceStateAllyBJ(Player(1), Player(2), true)
	call SetPlayerAllianceStateAllyBJ(Player(1), Player(3), true)
	call SetPlayerAllianceStateAllyBJ(Player(1), Player(4), true)
	call SetPlayerAllianceStateAllyBJ(Player(1), Player(5), true)
	call SetPlayerAllianceStateAllyBJ(Player(2), Player(0), true)
	call SetPlayerAllianceStateAllyBJ(Player(2), Player(1), true)
	call SetPlayerAllianceStateAllyBJ(Player(2), Player(3), true)
	call SetPlayerAllianceStateAllyBJ(Player(2), Player(4), true)
	call SetPlayerAllianceStateAllyBJ(Player(2), Player(5), true)
	call SetPlayerAllianceStateAllyBJ(Player(3), Player(0), true)
	call SetPlayerAllianceStateAllyBJ(Player(3), Player(1), true)
	call SetPlayerAllianceStateAllyBJ(Player(3), Player(2), true)
	call SetPlayerAllianceStateAllyBJ(Player(3), Player(4), true)
	call SetPlayerAllianceStateAllyBJ(Player(3), Player(5), true)
	call SetPlayerAllianceStateAllyBJ(Player(4), Player(0), true)
	call SetPlayerAllianceStateAllyBJ(Player(4), Player(1), true)
	call SetPlayerAllianceStateAllyBJ(Player(4), Player(2), true)
	call SetPlayerAllianceStateAllyBJ(Player(4), Player(3), true)
	call SetPlayerAllianceStateAllyBJ(Player(4), Player(5), true)
	call SetPlayerAllianceStateAllyBJ(Player(5), Player(0), true)
	call SetPlayerAllianceStateAllyBJ(Player(5), Player(1), true)
	call SetPlayerAllianceStateAllyBJ(Player(5), Player(2), true)
	call SetPlayerAllianceStateAllyBJ(Player(5), Player(3), true)
	call SetPlayerAllianceStateAllyBJ(Player(5), Player(4), true)
	call SetPlayerAllianceStateVisionBJ(Player(0), Player(1), true)
	call SetPlayerAllianceStateVisionBJ(Player(0), Player(2), true)
	call SetPlayerAllianceStateVisionBJ(Player(0), Player(3), true)
	call SetPlayerAllianceStateVisionBJ(Player(0), Player(4), true)
	call SetPlayerAllianceStateVisionBJ(Player(0), Player(5), true)
	call SetPlayerAllianceStateVisionBJ(Player(1), Player(0), true)
	call SetPlayerAllianceStateVisionBJ(Player(1), Player(2), true)
	call SetPlayerAllianceStateVisionBJ(Player(1), Player(3), true)
	call SetPlayerAllianceStateVisionBJ(Player(1), Player(4), true)
	call SetPlayerAllianceStateVisionBJ(Player(1), Player(5), true)
	call SetPlayerAllianceStateVisionBJ(Player(2), Player(0), true)
	call SetPlayerAllianceStateVisionBJ(Player(2), Player(1), true)
	call SetPlayerAllianceStateVisionBJ(Player(2), Player(3), true)
	call SetPlayerAllianceStateVisionBJ(Player(2), Player(4), true)
	call SetPlayerAllianceStateVisionBJ(Player(2), Player(5), true)
	call SetPlayerAllianceStateVisionBJ(Player(3), Player(0), true)
	call SetPlayerAllianceStateVisionBJ(Player(3), Player(1), true)
	call SetPlayerAllianceStateVisionBJ(Player(3), Player(2), true)
	call SetPlayerAllianceStateVisionBJ(Player(3), Player(4), true)
	call SetPlayerAllianceStateVisionBJ(Player(3), Player(5), true)
	call SetPlayerAllianceStateVisionBJ(Player(4), Player(0), true)
	call SetPlayerAllianceStateVisionBJ(Player(4), Player(1), true)
	call SetPlayerAllianceStateVisionBJ(Player(4), Player(2), true)
	call SetPlayerAllianceStateVisionBJ(Player(4), Player(3), true)
	call SetPlayerAllianceStateVisionBJ(Player(4), Player(5), true)
	call SetPlayerAllianceStateVisionBJ(Player(5), Player(0), true)
	call SetPlayerAllianceStateVisionBJ(Player(5), Player(1), true)
	call SetPlayerAllianceStateVisionBJ(Player(5), Player(2), true)
	call SetPlayerAllianceStateVisionBJ(Player(5), Player(3), true)
	call SetPlayerAllianceStateVisionBJ(Player(5), Player(4), true)
	call SetPlayerTeam(Player(6), 1)
	call SetPlayerState(Player(6), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(7), 1)
	call SetPlayerState(Player(7), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(8), 1)
	call SetPlayerState(Player(8), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(9), 1)
	call SetPlayerState(Player(9), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(10), 1)
	call SetPlayerState(Player(10), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerTeam(Player(11), 1)
	call SetPlayerState(Player(11), PLAYER_STATE_ALLIED_VICTORY, 1)
	call SetPlayerAllianceStateAllyBJ(Player(6), Player(7), true)
	call SetPlayerAllianceStateAllyBJ(Player(6), Player(8), true)
	call SetPlayerAllianceStateAllyBJ(Player(6), Player(9), true)
	call SetPlayerAllianceStateAllyBJ(Player(6), Player(10), true)
	call SetPlayerAllianceStateAllyBJ(Player(6), Player(11), true)
	call SetPlayerAllianceStateAllyBJ(Player(7), Player(6), true)
	call SetPlayerAllianceStateAllyBJ(Player(7), Player(8), true)
	call SetPlayerAllianceStateAllyBJ(Player(7), Player(9), true)
	call SetPlayerAllianceStateAllyBJ(Player(7), Player(10), true)
	call SetPlayerAllianceStateAllyBJ(Player(7), Player(11), true)
	call SetPlayerAllianceStateAllyBJ(Player(8), Player(6), true)
	call SetPlayerAllianceStateAllyBJ(Player(8), Player(7), true)
	call SetPlayerAllianceStateAllyBJ(Player(8), Player(9), true)
	call SetPlayerAllianceStateAllyBJ(Player(8), Player(10), true)
	call SetPlayerAllianceStateAllyBJ(Player(8), Player(11), true)
	call SetPlayerAllianceStateAllyBJ(Player(9), Player(6), true)
	call SetPlayerAllianceStateAllyBJ(Player(9), Player(7), true)
	call SetPlayerAllianceStateAllyBJ(Player(9), Player(8), true)
	call SetPlayerAllianceStateAllyBJ(Player(9), Player(10), true)
	call SetPlayerAllianceStateAllyBJ(Player(9), Player(11), true)
	call SetPlayerAllianceStateAllyBJ(Player(10), Player(6), true)
	call SetPlayerAllianceStateAllyBJ(Player(10), Player(7), true)
	call SetPlayerAllianceStateAllyBJ(Player(10), Player(8), true)
	call SetPlayerAllianceStateAllyBJ(Player(10), Player(9), true)
	call SetPlayerAllianceStateAllyBJ(Player(10), Player(11), true)
	call SetPlayerAllianceStateAllyBJ(Player(11), Player(6), true)
	call SetPlayerAllianceStateAllyBJ(Player(11), Player(7), true)
	call SetPlayerAllianceStateAllyBJ(Player(11), Player(8), true)
	call SetPlayerAllianceStateAllyBJ(Player(11), Player(9), true)
	call SetPlayerAllianceStateAllyBJ(Player(11), Player(10), true)
	call SetPlayerAllianceStateVisionBJ(Player(6), Player(7), true)
	call SetPlayerAllianceStateVisionBJ(Player(6), Player(8), true)
	call SetPlayerAllianceStateVisionBJ(Player(6), Player(9), true)
	call SetPlayerAllianceStateVisionBJ(Player(6), Player(10), true)
	call SetPlayerAllianceStateVisionBJ(Player(6), Player(11), true)
	call SetPlayerAllianceStateVisionBJ(Player(7), Player(6), true)
	call SetPlayerAllianceStateVisionBJ(Player(7), Player(8), true)
	call SetPlayerAllianceStateVisionBJ(Player(7), Player(9), true)
	call SetPlayerAllianceStateVisionBJ(Player(7), Player(10), true)
	call SetPlayerAllianceStateVisionBJ(Player(7), Player(11), true)
	call SetPlayerAllianceStateVisionBJ(Player(8), Player(6), true)
	call SetPlayerAllianceStateVisionBJ(Player(8), Player(7), true)
	call SetPlayerAllianceStateVisionBJ(Player(8), Player(9), true)
	call SetPlayerAllianceStateVisionBJ(Player(8), Player(10), true)
	call SetPlayerAllianceStateVisionBJ(Player(8), Player(11), true)
	call SetPlayerAllianceStateVisionBJ(Player(9), Player(6), true)
	call SetPlayerAllianceStateVisionBJ(Player(9), Player(7), true)
	call SetPlayerAllianceStateVisionBJ(Player(9), Player(8), true)
	call SetPlayerAllianceStateVisionBJ(Player(9), Player(10), true)
	call SetPlayerAllianceStateVisionBJ(Player(9), Player(11), true)
	call SetPlayerAllianceStateVisionBJ(Player(10), Player(6), true)
	call SetPlayerAllianceStateVisionBJ(Player(10), Player(7), true)
	call SetPlayerAllianceStateVisionBJ(Player(10), Player(8), true)
	call SetPlayerAllianceStateVisionBJ(Player(10), Player(9), true)
	call SetPlayerAllianceStateVisionBJ(Player(10), Player(11), true)
	call SetPlayerAllianceStateVisionBJ(Player(11), Player(6), true)
	call SetPlayerAllianceStateVisionBJ(Player(11), Player(7), true)
	call SetPlayerAllianceStateVisionBJ(Player(11), Player(8), true)
	call SetPlayerAllianceStateVisionBJ(Player(11), Player(9), true)
	call SetPlayerAllianceStateVisionBJ(Player(11), Player(10), true)
endfunction

function config takes nothing returns nothing
	call SetMapName("TRIGSTR_018")
	call SetMapDescription("TRIGSTR_020")
	call SetPlayers(12)
	call SetTeams(12)
	call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
	call DefineStartLocation(0,  - 2112.0,  - 2624.0)
	call DefineStartLocation(1,  - 2112.0,  - 2624.0)
	call DefineStartLocation(2,  - 2112.0,  - 2624.0)
	call DefineStartLocation(3,  - 2112.0,  - 2624.0)
	call DefineStartLocation(4, 2048.0, 2048.0)
	call DefineStartLocation(5, 2048.0, 2048.0)
	call DefineStartLocation(6, 2048.0, 2048.0)
	call DefineStartLocation(7, 2048.0, 2048.0)
	call DefineStartLocation(8,  - 2112.0,  - 2624.0)
	call DefineStartLocation(9, 2048.0, 2048.0)
	call DefineStartLocation(10, 2048.0, 2048.0)
	call DefineStartLocation(11,  - 2112.0,  - 2624.0)
	call InitCustomPlayerSlots()
	call InitCustomTeams()
	call InitAllyPriorities()
endfunction

