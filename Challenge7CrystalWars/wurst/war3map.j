//===========================================================================
// 
// Crystal Wars
// 
//   Warcraft III map script
//   Generated by the Warcraft III World Editor
//   Date: Mon Apr 13 20:54:10 2015
//   Map Author: WaterKnight
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************

globals
    // Generated
    trigger                 gg_trg_init                = null
    trigger                 gg_trg_unitRemoval         = null
    trigger                 gg_trg_scaleUnit           = null
    trigger                 gg_trg_slideUnit           = null
    trigger                 gg_trg_healer              = null
    trigger                 gg_trg_shop                = null
    trigger                 gg_trg_koboldGems          = null
    trigger                 gg_trg_winCondition        = null
    trigger                 gg_trg_shredder            = null
    trigger                 gg_trg_serpentRing         = null
    trigger                 gg_trg_vorpalStrike        = null
    trigger                 gg_trg_boomBaby            = null
    trigger                 gg_trg_grandmasFinest      = null
    unit                    gg_unit_n00Q_0028          = null
endglobals

function InitGlobals takes nothing returns nothing
endfunction

//***************************************************************************
//*
//*  Unit Creation
//*
//***************************************************************************

//===========================================================================
function CreateBuildingsForPlayer0 takes nothing returns nothing
    local player p = Player(0)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'h000', 0.0, 4096.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer1 takes nothing returns nothing
    local player p = Player(1)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'h000', -4096.0, 0.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer2 takes nothing returns nothing
    local player p = Player(2)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'h000', 0.0, -4096.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer3 takes nothing returns nothing
    local player p = Player(3)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'h000', 4096.0, 0.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer4 takes nothing returns nothing
    local player p = Player(4)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'h000', -1536.0, 5632.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer5 takes nothing returns nothing
    local player p = Player(5)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'h000', -5632.0, -1536.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer6 takes nothing returns nothing
    local player p = Player(6)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'h000', 1536.0, -5632.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer7 takes nothing returns nothing
    local player p = Player(7)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'h000', 5632.0, 1536.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer8 takes nothing returns nothing
    local player p = Player(8)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'h000', 1536.0, 5632.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer9 takes nothing returns nothing
    local player p = Player(9)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'h000', -5632.0, 1536.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer10 takes nothing returns nothing
    local player p = Player(10)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'h000', -1536.0, -5632.0, 270.000 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer11 takes nothing returns nothing
    local player p = Player(11)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'h000', 5632.0, -1536.0, 270.000 )
    set u = CreateUnit( p, 'haro', 5888.0, 5888.0, 270.000 )
endfunction

//===========================================================================
function CreateNeutralPassiveBuildings takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = CreateUnit( p, 'n000', 0.0, 0.0, 270.000 )
    call SetResourceAmount( u, 1000000 )
    set u = CreateUnit( p, 'n000', 5632.0, 0.0, 270.000 )
    call SetResourceAmount( u, 1000000 )
    set u = CreateUnit( p, 'n000', 0.0, 5632.0, 270.000 )
    call SetResourceAmount( u, 1000000 )
    set u = CreateUnit( p, 'n000', -5632.0, 0.0, 270.000 )
    call SetResourceAmount( u, 1000000 )
    set u = CreateUnit( p, 'n000', 0.0, -5632.0, 270.000 )
    call SetResourceAmount( u, 1000000 )
    set u = CreateUnit( p, 'n001', 4864.0, -4864.0, 270.000 )
    set u = CreateUnit( p, 'n001', -4864.0, -4864.0, 270.000 )
    set u = CreateUnit( p, 'n002', 6656.0, 0.0, 270.000 )
    set u = CreateUnit( p, 'n002', 0.0, -6656.0, 270.000 )
    set u = CreateUnit( p, 'n002', 0.0, 6656.0, 270.000 )
    set u = CreateUnit( p, 'n002', -6656.0, 0.0, 270.000 )
    set u = CreateUnit( p, 'n001', 4864.0, 4864.0, 270.000 )
    set u = CreateUnit( p, 'n007', -4864.0, 4864.0, 270.000 )
    set u = CreateUnit( p, 'n007', 7424.0, 0.0, 270.000 )
    set u = CreateUnit( p, 'n007', 0.0, 7424.0, 270.000 )
    set u = CreateUnit( p, 'n007', -7424.0, 0.0, 270.000 )
    set u = CreateUnit( p, 'n007', 0.0, -7424.0, 270.000 )
endfunction

//===========================================================================
function CreateNeutralPassive takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_n00Q_0028 = CreateUnit( p, 'n00Q', 630.0, 61.2, 236.610 )
endfunction

//===========================================================================
function CreatePlayerBuildings takes nothing returns nothing
    call CreateBuildingsForPlayer0(  )
    call CreateBuildingsForPlayer1(  )
    call CreateBuildingsForPlayer2(  )
    call CreateBuildingsForPlayer3(  )
    call CreateBuildingsForPlayer4(  )
    call CreateBuildingsForPlayer5(  )
    call CreateBuildingsForPlayer6(  )
    call CreateBuildingsForPlayer7(  )
    call CreateBuildingsForPlayer8(  )
    call CreateBuildingsForPlayer9(  )
    call CreateBuildingsForPlayer10(  )
    call CreateBuildingsForPlayer11(  )
endfunction

//===========================================================================
function CreatePlayerUnits takes nothing returns nothing
endfunction

//===========================================================================
function CreateAllUnits takes nothing returns nothing
    call CreateNeutralPassiveBuildings(  )
    call CreatePlayerBuildings(  )
    call CreateNeutralPassive(  )
    call CreatePlayerUnits(  )
endfunction

//***************************************************************************
//*
//*  Triggers
//*
//***************************************************************************

//===========================================================================
// Trigger: init
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
package mapInit
    hashtable ht=InitHashtable()
    
    enum races
        NULL

        HUMAN
        ORC
        DRAENEI
        NAGA
    endenum

    enum roles
        NULL

        PEON

        HQ1
        HQ2
        HQ3
        HQ4

        SPAWN1
        SPAWN2
        SPAWN3
        SPAWN4
    endenum

    function getUnitRole(int unitId) returns roles
        return LoadInteger(ht, unitId, 0) castTo roles
    endfunction

    function getUnitRace(int unitId) returns races
        return LoadInteger(ht, unitId, 1) castTo races
    endfunction

    function getRaceUnit(races raceId, roles role) returns int
        return LoadInteger(ht, raceId castTo int, role castTo int)
    endfunction

    function setRaceUnit(races raceId, roles role, int unitId)
        SaveInteger(ht, raceId castTo int, role castTo int, unitId)
        SaveInteger(ht, unitId, 0, role castTo int)
        SaveInteger(ht, unitId, 1, raceId castTo int)
    endfunction

    function getPlayerRaceId(player p) returns races
        if (GetPlayerRace(p) == RACE_HUMAN) then
            return races.HUMAN
        endif
        if (GetPlayerRace(p) == RACE_ORC) then
            return races.ORC
        endif
        if (GetPlayerRace(p) == RACE_UNDEAD) then
            return races.DRAENEI
        endif
        if (GetPlayerRace(p) == RACE_NIGHTELF) then
            return races.NAGA
        endif

        return 0 castTo races
    endfunction

    function onSpawnTimer()
        local integer i = 11

        group g = CreateGroup()

        loop
            exitwhen (i < 0)

            GroupEnumUnitsOfPlayer(g, Player(i), null)

            //local races raceId = getPlayerRaceId(Player(i))

            loop
                local unit u = FirstOfGroup(g)
                exitwhen (u == null)
                GroupRemoveUnit(g, u)

                if not IsUnitType(u, UNIT_TYPE_DEAD) then
                    local integer unitId = GetUnitTypeId(u)

                    local roles role = getUnitRole(unitId)

                    if (role castTo int != 0) then
                        local int newId = 0

                        local races raceId = getUnitRace(unitId)

                        if (role == roles.HQ1) then
                            newId = getRaceUnit(raceId, roles.SPAWN1)
                        elseif (role == roles.HQ2) then
                            newId = getRaceUnit(raceId, roles.SPAWN2)
                        elseif (role == roles.HQ3) then
                            newId = getRaceUnit(raceId, roles.SPAWN3)
                        elseif (role == roles.HQ4) then
                            newId = getRaceUnit(raceId, roles.SPAWN4)
                        endif

                        if (newId != 0) then
                            local real x = GetUnitX(u)
                            local real y = GetUnitY(u)

                            local unit spawn = CreateUnit(Player(i), newId, x, y, 270)

                            if (GetUnitRallyUnit(u) != u) then
                                if (GetUnitRallyUnit(u) != null) then
                                    IssueTargetOrder(spawn, "move", GetUnitRallyUnit(u))
                                else
                                    local location rallyLoc = GetUnitRallyPoint(u)

                                    if (rallyLoc != null) then
                                        IssuePointOrder(spawn, "move", GetLocationX(rallyLoc), GetLocationY(rallyLoc))

                                        RemoveLocation(rallyLoc)
                                        rallyLoc = null
                                    endif
                                endif
                            endif
                        endif
                    endif
                endif
            endloop

            i--
        endloop
    endfunction

    function startSpawn()
        TimerStart(CreateTimer(), 10, true, function onSpawnTimer)
    endfunction

    function setupUnits()
        local integer i = 11

        group g = CreateGroup()

        loop
            exitwhen (i < 0)

            call SetPlayerState(Player(i), PLAYER_STATE_RESOURCE_GOLD, 2000)

            GroupEnumUnitsOfPlayer(g, Player(i), null)

            local races raceId = getPlayerRaceId(Player(i))

            loop
                local unit u = FirstOfGroup(g)
                exitwhen (u == null)
                GroupRemoveUnit(g, u)

                local integer unitId = GetUnitTypeId(u)

                if (getUnitRole(unitId) castTo int != 0) then
                    local roles role = getUnitRole(unitId)

                    local int newId = getRaceUnit(raceId, role)

                    if (newId != unitId) then
                        local real x = GetUnitX(u)
                        local real y = GetUnitY(u)
                        local real face = GetUnitFacing(u)

                        RemoveUnit(u)

                        CreateUnit(Player(i), newId, x, y, face)
                    endif
                endif
            endloop

            if (GetPlayerSlotState(Player(i)) != PLAYER_SLOT_STATE_PLAYING) then
                GroupEnumUnitsOfPlayer(g, Player(i), null)

                loop
                    local unit u = FirstOfGroup(g)
                    exitwhen (u == null)
                    GroupRemoveUnit(g, u)

                    KillUnit(u)
                endloop
            endif

            i--
        endloop
    endfunction

    init
        setRaceUnit(races.HUMAN, roles.PEON, 'h002')

        setRaceUnit(races.HUMAN, roles.HQ1, 'h000')
        setRaceUnit(races.HUMAN, roles.HQ2, 'h004')
        setRaceUnit(races.HUMAN, roles.HQ3, 'h005')
        setRaceUnit(races.HUMAN, roles.HQ4, 'n003')

        setRaceUnit(races.HUMAN, roles.SPAWN1, 'n00A')
        setRaceUnit(races.HUMAN, roles.SPAWN2, 'n00B')
        setRaceUnit(races.HUMAN, roles.SPAWN3, 'h003')
        setRaceUnit(races.HUMAN, roles.SPAWN4, 'n003')

        setRaceUnit(races.ORC, roles.PEON, 'o001')

        setRaceUnit(races.ORC, roles.HQ1, 'o000')
        setRaceUnit(races.ORC, roles.HQ2, 'o005')
        setRaceUnit(races.ORC, roles.HQ3, 'o006')
        setRaceUnit(races.ORC, roles.HQ4, 'n004')

        setRaceUnit(races.ORC, roles.SPAWN1, 'o002')
        setRaceUnit(races.ORC, roles.SPAWN2, 'o003')
        setRaceUnit(races.ORC, roles.SPAWN3, 'o004')
        setRaceUnit(races.ORC, roles.SPAWN4, 'n003')

        setRaceUnit(races.DRAENEI, roles.PEON, 'n008')

        setRaceUnit(races.DRAENEI, roles.HQ1, 'n00L')
        setRaceUnit(races.DRAENEI, roles.HQ2, 'n00J')
        setRaceUnit(races.DRAENEI, roles.HQ3, 'n00K')
        setRaceUnit(races.DRAENEI, roles.HQ4, 'n006')

        setRaceUnit(races.DRAENEI, roles.SPAWN1, 'n00C')
        setRaceUnit(races.DRAENEI, roles.SPAWN2, 'n00D')
        setRaceUnit(races.DRAENEI, roles.SPAWN3, 'n00E')
        setRaceUnit(races.DRAENEI, roles.SPAWN4, 'n003')

        setRaceUnit(races.HUMAN, roles.PEON, 'n009')
        setRaceUnit(races.HUMAN, roles.PEON, 'n00G')

        setRaceUnit(races.NAGA, roles.HQ1, 'n00M')
        setRaceUnit(races.NAGA, roles.HQ2, 'n00N')
        setRaceUnit(races.NAGA, roles.HQ3, 'n00O')
        setRaceUnit(races.NAGA, roles.HQ4, 'n005')

        setRaceUnit(races.NAGA, roles.SPAWN1, 'n00F')
        setRaceUnit(races.NAGA, roles.SPAWN2, 'n00H')
        setRaceUnit(races.NAGA, roles.SPAWN3, 'n00I')
        setRaceUnit(races.NAGA, roles.SPAWN4, 'n003')

        setupUnits()
        startSpawn()
    endinit

endpackage
//===========================================================================
// Trigger: unitRemoval
//===========================================================================
//TESH.scrollpos=3
//TESH.alwaysfold=0
package unitRemoval
    hashtable ht = InitHashtable()

    class timed
        timer durationTimer
        unit target

        ondestroy
            FlushChildHashtable(ht, GetHandleId(durationTimer))

            RemoveUnit(target)
        endondestroy

        static function onDurationTimer()
            local thistype me = LoadInteger(ht, GetHandleId(GetExpiredTimer()), 0) castTo thistype

            destroy me
        endfunction

        construct(unit u, real duration)
            durationTimer = CreateTimer()
            target = u

            SaveInteger(ht, GetHandleId(durationTimer), 0, this castTo int)
            TimerStart(durationTimer, duration, false, function onDurationTimer)
        endconstruct
    endclass

    public function removeUnitTimed(unit u, real duration)
        new timed(u, duration)
    endfunction
endpackage//===========================================================================
// Trigger: scaleUnit
//===========================================================================
//TESH.scrollpos=40
//TESH.alwaysfold=0
package scaler
    import LinkedList

    hashtable ht = InitHashtable()

    real INTERVAL = 0.03125

    public function getScale(unit u) returns real
        return LoadReal(ht, GetHandleId(u), 0)
    endfunction

    public function setScale(unit u, real size)
        SaveReal(ht, GetHandleId(u), 0, size)
        SetUnitScale(u, size, size, size)
    endfunction

    class scaler
        static timer intervalTimer = CreateTimer()

        timer durationTimer
        real sizeAdd
        unit target

        static LinkedList<scaler> list = new LinkedList<scaler>()

        ondestroy
            FlushChildHashtable(ht, GetHandleId(durationTimer))

            list.remove(this)
        endondestroy

        static function onDurationTimer()
            local thistype me = LoadInteger(ht, GetHandleId(GetExpiredTimer()), 0) castTo thistype

            destroy me
        endfunction

        function doInterval()
            setScale(target, getScale(target) + sizeAdd)
        endfunction

        static function onIntervalTimer()
            let iter = list.iterator()

            loop
                exitwhen not iter.hasNext()

                thistype me = iter.next()

                me.doInterval()
            endloop

            iter.close()
        endfunction

        construct(unit u, real size, real duration)
            sizeAdd = size / R2I(duration / INTERVAL)
            durationTimer = CreateTimer()
            target = u

            SaveInteger(ht, GetHandleId(durationTimer), 0, this castTo int)
            TimerStart(durationTimer, duration, false, function onDurationTimer)

            if (list.getSize() == 0) then
                TimerStart(intervalTimer, INTERVAL, true, function onIntervalTimer)
            endif

            list.add(this)
        endconstruct
    endclass

    public function addScale(unit u, real size, real duration)
        new scaler(u, size, duration)
    endfunction
endpackage//===========================================================================
// Trigger: slideUnit
//===========================================================================
//TESH.scrollpos=34
//TESH.alwaysfold=0
package slider
    import LinkedList

    hashtable ht = InitHashtable()

    real INTERVAL = 0.03125

    class slider
        static timer intervalTimer = CreateTimer()

        timer durationTimer
        real xAdd
        real yAdd
        unit target

        static LinkedList<slider> list = new LinkedList<slider>()

        ondestroy
            FlushChildHashtable(ht, GetHandleId(durationTimer))

            list.remove(this)
        endondestroy

        static function onDurationTimer()
            local thistype me = LoadInteger(ht, GetHandleId(GetExpiredTimer()), 0) castTo thistype

            destroy me
        endfunction

        function doInterval()
            SetUnitX(target, GetUnitX(target) + xAdd)
            SetUnitY(target, GetUnitY(target) + yAdd)
        endfunction

        static function onIntervalTimer()
            let iter = list.iterator()

            loop
                exitwhen not iter.hasNext()

                thistype me = iter.next()

                me.doInterval()
            endloop

            iter.close()
        endfunction

        construct(unit u, real speed, real ang, real duration)
            xAdd = speed * Cos(ang) / R2I(duration / INTERVAL)
            yAdd = speed * Sin(ang) / R2I(duration / INTERVAL)
            durationTimer = CreateTimer()
            target = u

            SaveInteger(ht, GetHandleId(durationTimer), 0, this castTo int)
            TimerStart(durationTimer, duration, false, function onDurationTimer)

            if (list.getSize() == 0) then
                TimerStart(intervalTimer, INTERVAL, true, function onIntervalTimer)
            endif

            list.add(this)
        endconstruct
    endclass

    public function addSlide(unit u, real speed, real ang, real duration)
        new slider(u, speed, ang, duration)
    endfunction
endpackage//===========================================================================
// Trigger: healer
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
package healer
    import LinkedList

    hashtable ht = InitHashtable()

    real INTERVAL = 0.2

    class healer
        static timer intervalTimer = CreateTimer()

        timer durationTimer
        real lifeAdd
        unit target

        static LinkedList<healer> list = new LinkedList<healer>()

        ondestroy
            FlushChildHashtable(ht, GetHandleId(durationTimer))

            list.remove(this)
        endondestroy

        static function onDurationTimer()
            local thistype me = LoadInteger(ht, GetHandleId(GetExpiredTimer()), 0) castTo thistype

            destroy me
        endfunction

        function doInterval()
            SetUnitState(target, UNIT_STATE_LIFE, GetUnitState(target, UNIT_STATE_LIFE) + lifeAdd)
        endfunction

        static function onIntervalTimer()
            let iter = list.iterator()

            loop
                exitwhen not iter.hasNext()

                thistype me = iter.next()

                me.doInterval()
            endloop

            iter.close()
        endfunction

        construct(unit u, real amount, real duration)
            lifeAdd = amount / R2I(duration / INTERVAL)
            durationTimer = CreateTimer()
            target = u

            SaveInteger(ht, GetHandleId(durationTimer), 0, this castTo int)
            TimerStart(durationTimer, duration, false, function onDurationTimer)

            if (list.getSize() == 0) then
                TimerStart(intervalTimer, INTERVAL, true, function onIntervalTimer)
            endif

            list.add(this)
        endconstruct
    endclass

    public function addHeal(unit u, real amount, real duration)
        new healer(u, amount, duration)
    endfunction
endpackage//===========================================================================
// Trigger: shop
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
package shop
    function abc()
        error("abc")
    endfunction

    init
        local group g = CreateGroup()

        GroupEnumUnitsInRect(g, GetWorldBounds(), null)

        loop
            local unit u = FirstOfGroup(g)
            exitwhen (u == null)
            call GroupRemoveUnit(g, u)

            if (GetUnitTypeId(u) == 'n001') then
                local int i = 12

                loop
                    exitwhen (i < 1)

                    AddItemToStock(u, ChooseRandomItem(GetRandomInt(1, 6)), 1, 1)

                    i--
                endloop
            endif
        endloop

        abc()
    endinit
endpackage//===========================================================================
// Trigger: koboldGems
//===========================================================================
//TESH.scrollpos=0
//TESH.alwaysfold=0
package koboldGems
    int ITEM_ID = 'I000'
    unit kobold

    function spawnGem()
        local real x = GetUnitX(kobold)
        local real y = GetUnitY(kobold)

        CreateItem(ITEM_ID, x, y)

        IssuePointOrder(kobold, "move", GetRandomReal(-8000, 8000), GetRandomReal(-8000, 8000))
    endfunction

    init
        kobold = gg_unit_n00Q_0028
        TimerStart(CreateTimer(), 15, true, function spawnGem)
    endinit
endpackage//===========================================================================
// Trigger: winCondition
//===========================================================================
//TESH.scrollpos=72
//TESH.alwaysfold=0
package winCondition
    boolean gameOver = false
    group ENUM_GROUP = CreateGroup()

    function check()
        if gameOver then
            return
        endif

        local integer i = 11

        local int array counts

        loop
            exitwhen (i < 0)

            GroupEnumUnitsOfPlayer(ENUM_GROUP, Player(i), null)

            loop
                local unit u = FirstOfGroup(ENUM_GROUP)
                exitwhen (u == null)
                GroupRemoveUnit(ENUM_GROUP, u)

                if IsUnitType(u, UNIT_TYPE_TOWNHALL) then
                    counts[GetPlayerTeam(Player(i))] = counts[GetPlayerTeam(Player(i))] + 1
                endif
            endloop

            i--
        endloop

        local int c = 0
        local int winner = 0

        i = 3

        loop
            exitwhen (i < 0)

            if (counts[GetPlayerTeam(Player(i))] > 0) then
                c++
                winner = i
            endif

            i--
        endloop

        if (c > 1) then
            return
        endif

        gameOver = true
        PauseGame(true)

        loop
            exitwhen (i > 11)

            if (GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING) then
                if (GetPlayerTeam(Player(i)) == winner) then
                    DisplayTextToPlayer(GetLocalPlayer(), 0, 0, GetPlayerName(Player(i)) + " is victorious")
                endif
            endif

            i++
        endloop
    endfunction

    function onDeath()
    BJDebugMsg("onDeath")
        error("abc")

        if not IsUnitType(GetTriggerUnit(), UNIT_TYPE_TOWNHALL) then
            return
        endif

        DisplayTextToPlayer(GetLocalPlayer(), 0, 0, GetPlayerName(GetOwningPlayer(GetTriggerUnit())) + " has been defeated")

        GroupEnumUnitsOfPlayer(ENUM_GROUP, GetOwningPlayer(GetTriggerUnit()), null)

        loop
            local unit u = FirstOfGroup(ENUM_GROUP)
            exitwhen (u == null)
            GroupRemoveUnit(ENUM_GROUP, u)

            KillUnit(u)
        endloop

        local fogmodifier f = CreateFogModifierRect(GetOwningPlayer(GetTriggerUnit()), FOG_OF_WAR_VISIBLE, GetWorldBounds(), false, true)

        FogModifierStart(f)
    endfunction

    init
    BJDebugMsg("winCond init")
        TimerStart(CreateTimer(), 5, true, function check)

        local trigger t = CreateTrigger()

        TriggerAddAction(t, function onDeath)
        TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_DEATH)
    endinit
endpackage//===========================================================================
// Trigger: shredder
//===========================================================================
//TESH.scrollpos=43
//TESH.alwaysfold=0
package shredder
    import scaler
    import slider

    int ABIL_ID = 'A001'
    int DUMMY_UNIT_ID = 'e000'

    real DAMAGE_INTERVAL = 0.1
    real SLIDE_INTERVAL = 0.5
    group ENUM_GROUP = CreateGroup()
    hashtable ht = InitHashtable()

    class shredder
        real areaRange
        unit caster
        real damage
        timer damageTimer
        timer slideTimer
        unit dummy

        function getLevelAreaRange(int level) returns real
            return I2R(250)
        endfunction

        function getLevelDamage(int level) returns real
            return I2R(50 + 30 * level)
        endfunction

        ondestroy
            FlushChildHashtable(ht, GetHandleId(damageTimer))
            DestroyTimer(damageTimer)
            FlushChildHashtable(ht, GetHandleId(slideTimer))
            DestroyTimer(slideTimer)
            RemoveUnit(dummy)
        endondestroy

        function dealDamage()
            GroupEnumUnitsInRange(ENUM_GROUP, GetUnitX(dummy), GetUnitY(dummy), areaRange, null)

            loop
                local unit u = FirstOfGroup(ENUM_GROUP)
                exitwhen (u == null)
                GroupRemoveUnit(ENUM_GROUP, u)

                if not IsUnitAlly(u, GetOwningPlayer(caster)) then
                    UnitDamageTarget(caster, u, damage, false, false, null, null, WEAPON_TYPE_CLAW_LIGHT_SLICE)
                endif
            endloop
        endfunction

        static function onDamageTimer()
            (LoadInteger(ht, GetHandleId(GetExpiredTimer()), 0) castTo thistype).dealDamage()
        endfunction

        function dealSlide()
            GroupEnumUnitsInRange(ENUM_GROUP, GetUnitX(dummy), GetUnitY(dummy), areaRange, null)

            loop
                local unit u = FirstOfGroup(ENUM_GROUP)
                exitwhen (u == null)
                GroupRemoveUnit(ENUM_GROUP, u)

                if not IsUnitAlly(u, GetOwningPlayer(caster)) then
                    addSlide(u, 100, Atan2(GetUnitY(u) - GetUnitY(dummy), GetUnitX(u) - GetUnitX(dummy)) + bj_PI, 0.6)
                endif
            endloop
        endfunction

        static function onSlideTimer()
            (LoadInteger(ht, GetHandleId(GetExpiredTimer()), 0) castTo thistype).dealSlide()
        endfunction

        construct(unit caster, int level, real targetX, real targetY)
            local real x = GetUnitX(caster)
            local real y = GetUnitY(caster)

            local real ang = Atan2(targetY - y, targetX - x)

            areaRange = getLevelAreaRange(level)
            this.caster = caster
            damage = getLevelDamage(level) * DAMAGE_INTERVAL
            dummy = CreateUnit(GetOwningPlayer(caster), DUMMY_UNIT_ID, x, y, ang)

            setScale(dummy, 0.5)
            addScale(dummy, 1.5, 2)

            IssuePointOrder(dummy, "move", targetX, targetY)

            damageTimer = CreateTimer()

            SaveInteger(ht, GetHandleId(damageTimer), 0, this castTo int)
            TimerStart(damageTimer, DAMAGE_INTERVAL, true, function onDamageTimer)

            slideTimer = CreateTimer()

            SaveInteger(ht, GetHandleId(slideTimer), 0, this castTo int)
            TimerStart(slideTimer, SLIDE_INTERVAL, true, function onSlideTimer)
        endconstruct
    endclass

    function onEndCast()
        local unit caster = GetSpellAbilityUnit()

        if (GetSpellAbilityId() != ABIL_ID) then
            return
        endif

        local shredder shred = LoadInteger(ht, GetHandleId(caster), 0) castTo shredder

        RemoveSavedInteger(ht, GetHandleId(caster), 0)

        destroy shred
    endfunction

    function onCast()
        local unit caster = GetSpellAbilityUnit()

        if (GetSpellAbilityId() != ABIL_ID) then
            return
        endif

        SaveInteger(ht, GetHandleId(caster), 0, new shredder(GetSpellAbilityUnit(), GetUnitAbilityLevel(GetSpellAbilityUnit(), ABIL_ID), GetSpellTargetX(), GetSpellTargetY()) castTo int)
    endfunction

    init
        local trigger t = CreateTrigger()

        TriggerAddAction(t, function onCast)
        TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SPELL_EFFECT)

        local trigger t2 = CreateTrigger()

        TriggerAddAction(t2, function onEndCast)
        TriggerRegisterAnyUnitEventBJ(t2, EVENT_PLAYER_UNIT_SPELL_ENDCAST)
    endinit

endpackage
//===========================================================================
// Trigger: serpentRing
//===========================================================================
//TESH.scrollpos=4
//TESH.alwaysfold=0
package serpentRing
    import scaler
    import slider

    int ABIL_ID = 'A002'
    int WARD_ID = 'o008'

    group ENUM_GROUP = CreateGroup()
    hashtable ht = InitHashtable()

    class serpentRing
        function getLevelAreaRange(int level) returns real
            return I2R(12 + 3 * level)
        endfunction

        function getLevelSummonDuration(int level) returns real
            return I2R(650 + 50 * level)
        endfunction

        function getLevelWardsAmount(int level) returns int
            return 5 + 5 * level
        endfunction

        construct(unit caster, int level)
            local real casterX = GetUnitX(caster)
            local real casterY = GetUnitY(caster)

            local int wardsAmount = getLevelWardsAmount(level)
            local real areaRange = getLevelAreaRange(level)
            local real summonDuration = getLevelSummonDuration(level)

            local real angAdd = 2 * bj_PI / wardsAmount
            local real ang = GetUnitFacing(caster) * bj_DEGTORAD

            loop
                exitwhen (wardsAmount < 0)

                local real x = casterX
                local real y = casterY

                local unit ward = CreateUnit(GetOwningPlayer(caster), WARD_ID, x, y, 270)

                UnitRemoveAbility(ward, 'Amov')
                UnitApplyTimedLife(ward, 'BTLF', summonDuration)

                addSlide(ward, areaRange / 1, ang, 1)

                ang = ang + angAdd

                wardsAmount--
            endloop

            destroy this
        endconstruct
    endclass

    function onCast()
        local unit caster = GetSpellAbilityUnit()

        if (GetSpellAbilityId() != ABIL_ID) then
            return
        endif

        new serpentRing(GetSpellAbilityUnit(), GetUnitAbilityLevel(GetSpellAbilityUnit(), ABIL_ID))
    endfunction

    init
        local trigger t = CreateTrigger()

        TriggerAddAction(t, function onCast)
        TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    endinit

endpackage
//===========================================================================
// Trigger: vorpalStrike
//===========================================================================
//TESH.scrollpos=24
//TESH.alwaysfold=0
package vorpalStrike
    import unitRemoval
    import scaler
    import slider

    int ABIL_ID = 'A004'
    int DUMMY_ID = 'e001'

    group ENUM_GROUP = CreateGroup()
    hashtable ht = InitHashtable()

    class vorpalStrike
        function getLevelAreaRange(int level) returns real
            return I2R(350)
        endfunction

        function getLevelDamage(int level) returns real
            return I2R(80 + 70 * level)
        endfunction

        construct(unit caster, int level, real targetX, real targetY)
            local real x = GetUnitX(caster)
            local real y = GetUnitY(caster)

            local real ang = Atan2(targetY - y, targetX - x)

            local real damage = getLevelDamage(level)

            GroupEnumUnitsInRange(ENUM_GROUP, x, y, getLevelAreaRange(level), null)

            loop
                local unit u = FirstOfGroup(ENUM_GROUP)
                exitwhen (u == null)
                GroupRemoveUnit(ENUM_GROUP, u)

                if not IsUnitAlly(u, GetOwningPlayer(caster)) then
                    local real targetAng = Atan2(GetUnitY(u) - y, GetUnitX(u) - x)

                    if (ModuloReal(RAbsBJ(targetAng - ang), bj_PI * 2) < 50 * bj_DEGTORAD) then
                        addSlide(u, 1000, targetAng, 1)

                        UnitDamageTarget(caster, u, damage, false, false, null, null, WEAPON_TYPE_METAL_HEAVY_SLICE)
                    endif
                endif
            endloop

            local unit dummy = CreateUnit(GetOwningPlayer(caster), DUMMY_ID, x, y, ang * bj_RADTODEG)

            IssuePointOrder(dummy, "move", x + 1000 * Cos(ang), y + 1000 * Sin(ang))

            setScale(dummy, 1)
            addScale(dummy, 2.5, 0.35)
            removeUnitTimed(dummy, 0.35)

            dummy = null

            destroy this
        endconstruct
    endclass

    function onCast()
        local unit caster = GetSpellAbilityUnit()

        if (GetSpellAbilityId() != ABIL_ID) then
            return
        endif

        new vorpalStrike(GetSpellAbilityUnit(), GetUnitAbilityLevel(GetSpellAbilityUnit(), ABIL_ID), GetSpellTargetX(), GetSpellTargetY())
    endfunction

    init
        local trigger t = CreateTrigger()

        TriggerAddAction(t, function onCast)
        TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    endinit

endpackage
//===========================================================================
// Trigger: boomBaby
//===========================================================================
//TESH.scrollpos=15
//TESH.alwaysfold=0
package boomBaby
    import scaler
    import slider

    int ABIL_ID = 'A008'
    int WARD_ID = 'e002'
    int SFXER_ID = 'e003'
    real DURATION = 4

    group ENUM_GROUP = CreateGroup()
    hashtable ht = InitHashtable()

    class boomBaby
        real areaRange
        unit baby
        unit caster
        real damage
        timer durationTimer
        unit sfxer

        function getLevelAreaRange(int level) returns real
            return I2R(650 + 50 * level)
        endfunction

        function getLevelDamageMax(int level) returns real
            return I2R(100 + 100 * level)
        endfunction

        ondestroy
            FlushChildHashtable(ht, GetHandleId(durationTimer))
            DestroyTimer(durationTimer)

            SetUnitTimeScale(baby, 0.2)
            KillUnit(baby)
            KillUnit(sfxer)
        endondestroy

        function boom()
            local real x = GetUnitX(baby)
            local real y = GetUnitY(baby)

            GroupEnumUnitsInRange(ENUM_GROUP, x, y, areaRange, null)

            loop
                local unit u = FirstOfGroup(ENUM_GROUP)
                exitwhen (u == null)
                GroupRemoveUnit(ENUM_GROUP, u)

                if not IsUnitAlly(u, GetOwningPlayer(caster)) then
                    local real dX = GetUnitX(u) - x
                    local real dY = GetUnitY(u) - y

                    local real dist = SquareRoot(dX * dX + dY * dY)

                    addSlide(u, 2000, Atan2(GetUnitY(u) - GetUnitY(baby), GetUnitX(u) - GetUnitX(baby)), 2 * (1 - dist / areaRange))

                    UnitDamageTarget(caster, u, damage * (1 - dist / areaRange), false, false, null, null, null)
                endif
            endloop

            sfxer = CreateUnit(GetOwningPlayer(caster), SFXER_ID, x, y, 270)
            addScale(baby, 10, 0.5)
            addScale(sfxer, 10, 0.5)

            destroy this
        endfunction

        static function onDurationTimer()
            local thistype me = LoadInteger(ht, GetHandleId(GetExpiredTimer()), 0) castTo thistype

            me.boom()
        endfunction

        construct(unit caster, int level, real targetX, real targetY)
            local real casterX = GetUnitX(caster)
            local real casterY = GetUnitY(caster)

            areaRange = getLevelAreaRange(level)
            baby = CreateUnit(GetOwningPlayer(caster), WARD_ID, targetX, targetY, 270)
            this.caster = caster
            damage = getLevelDamageMax(level)

            call setScale(baby, 3)
            call addScale(baby, -3, DURATION)

            durationTimer = CreateTimer()

            SaveInteger(ht, GetHandleId(durationTimer), 0, this castTo int)
            TimerStart(durationTimer, DURATION, false, function onDurationTimer)
        endconstruct
    endclass

    function onCast()
        local unit caster = GetSpellAbilityUnit()

        if (GetSpellAbilityId() != ABIL_ID) then
            return
        endif

        new boomBaby(GetSpellAbilityUnit(), GetUnitAbilityLevel(GetSpellAbilityUnit(), ABIL_ID), GetSpellTargetX(), GetSpellTargetY())
    endfunction

    init
        local trigger t = CreateTrigger()

        TriggerAddAction(t, function onCast)
        TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SPELL_EFFECT)
    endinit

endpackage
//===========================================================================
// Trigger: grandmasFinest
//===========================================================================
//TESH.scrollpos=36
//TESH.alwaysfold=0
package grandmasFinest
    import unitRemoval
    import scaler
    import slider
    import healer

    int ABIL_ID = 'A009'
    int DEVOUR_ID = 'A00A'

    real DURATION = 10
    group ENUM_GROUP = CreateGroup()
    hashtable ht = InitHashtable()

    class grandmasFinest
        timer durationTimer
        int statsAdd
        unit target

        function getLevelHeal(int level) returns real
            return I2R(80 + 50 * level)
        endfunction

        function getLevelStatsAdd(int level) returns int
            return 5 + 3 * level
        endfunction

        ondestroy
            FlushChildHashtable(ht, GetHandleId(durationTimer))
            DestroyTimer(durationTimer)

            SetHeroAgi(target, GetHeroAgi(target, true) - statsAdd, false)
            SetHeroStr(target, GetHeroStr(target, true) - statsAdd, false)
            SetHeroInt(target, GetHeroInt(target, true) - statsAdd, false)
        endondestroy

        static function onDurationTimer()
            local thistype me = LoadInteger(ht, GetHandleId(GetExpiredTimer()), 0) castTo thistype

            destroy me
        endfunction

        construct(unit caster, int level, real targetX, real targetY)
            local real x = GetUnitX(caster)
            local real y = GetUnitY(caster)

            statsAdd = getLevelStatsAdd(level)
            target = caster

            addHeal(caster, getLevelHeal(level), DURATION)

            durationTimer = CreateTimer()

            SaveInteger(ht, GetHandleId(durationTimer), 0, this castTo int)
            TimerStart(durationTimer, DURATION, false, function onDurationTimer)

            SetHeroAgi(target, GetHeroAgi(target, true) + statsAdd, false)
            SetHeroStr(target, GetHeroStr(target, true) + statsAdd, false)
            SetHeroInt(target, GetHeroInt(target, true) + statsAdd, false)
        endconstruct
    endclass

    function onLearn()
        local unit caster = GetTriggerUnit()

        if (GetLearnedSkill() != ABIL_ID) then
            return
        endif

        local int prev = 5

        loop
            exitwhen (prev < 1)
            exitwhen (GetUnitAbilityLevel(caster, DEVOUR_ID + prev - 1) > 0)

            prev--
        endloop

        UnitAddAbility(caster, DEVOUR_ID + GetLearnedSkillLevel() - 1)

        if ((prev > 0) and (prev != GetLearnedSkillLevel())) then
            UnitRemoveAbility(caster, DEVOUR_ID + prev - 1)
        endif
    endfunction

    function onCast()
        local unit caster = GetSpellAbilityUnit()

        if (GetSpellAbilityId() != ABIL_ID) then
            return
        endif

        new grandmasFinest(GetSpellAbilityUnit(), GetUnitAbilityLevel(GetSpellAbilityUnit(), ABIL_ID), GetSpellTargetX(), GetSpellTargetY())
    endfunction

    init
        local trigger t = CreateTrigger()

        TriggerAddAction(t, function onCast)
        TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SPELL_EFFECT)

        local trigger t2 = CreateTrigger()

        TriggerAddAction(t2, function onLearn)
        TriggerRegisterAnyUnitEventBJ(t2, EVENT_PLAYER_HERO_SKILL)
    endinit

endpackage
//===========================================================================
function InitCustomTriggers takes nothing returns nothing
    call InitTrig_init(  )
    call InitTrig_unitRemoval(  )
    call InitTrig_scaleUnit(  )
    call InitTrig_slideUnit(  )
    call InitTrig_healer(  )
    call InitTrig_shop(  )
    call InitTrig_koboldGems(  )
    call InitTrig_winCondition(  )
    call InitTrig_shredder(  )
    call InitTrig_serpentRing(  )
    call InitTrig_vorpalStrike(  )
    call InitTrig_boomBaby(  )
    call InitTrig_grandmasFinest(  )
endfunction

//===========================================================================
function RunInitializationTriggers takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_init )
endfunction

//***************************************************************************
//*
//*  Players
//*
//***************************************************************************

function InitCustomPlayerSlots takes nothing returns nothing

    // Player 0
    call SetPlayerStartLocation( Player(0), 0 )
    call ForcePlayerStartLocation( Player(0), 0 )
    call SetPlayerColor( Player(0), ConvertPlayerColor(0) )
    call SetPlayerRacePreference( Player(0), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(0), true )
    call SetPlayerController( Player(0), MAP_CONTROL_USER )

    // Player 1
    call SetPlayerStartLocation( Player(1), 1 )
    call ForcePlayerStartLocation( Player(1), 1 )
    call SetPlayerColor( Player(1), ConvertPlayerColor(1) )
    call SetPlayerRacePreference( Player(1), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(1), true )
    call SetPlayerController( Player(1), MAP_CONTROL_USER )

    // Player 2
    call SetPlayerStartLocation( Player(2), 2 )
    call ForcePlayerStartLocation( Player(2), 2 )
    call SetPlayerColor( Player(2), ConvertPlayerColor(2) )
    call SetPlayerRacePreference( Player(2), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(2), true )
    call SetPlayerController( Player(2), MAP_CONTROL_USER )

    // Player 3
    call SetPlayerStartLocation( Player(3), 3 )
    call ForcePlayerStartLocation( Player(3), 3 )
    call SetPlayerColor( Player(3), ConvertPlayerColor(3) )
    call SetPlayerRacePreference( Player(3), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(3), true )
    call SetPlayerController( Player(3), MAP_CONTROL_USER )

    // Player 4
    call SetPlayerStartLocation( Player(4), 4 )
    call ForcePlayerStartLocation( Player(4), 4 )
    call SetPlayerColor( Player(4), ConvertPlayerColor(4) )
    call SetPlayerRacePreference( Player(4), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(4), true )
    call SetPlayerController( Player(4), MAP_CONTROL_USER )

    // Player 5
    call SetPlayerStartLocation( Player(5), 5 )
    call ForcePlayerStartLocation( Player(5), 5 )
    call SetPlayerColor( Player(5), ConvertPlayerColor(5) )
    call SetPlayerRacePreference( Player(5), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(5), true )
    call SetPlayerController( Player(5), MAP_CONTROL_USER )

    // Player 6
    call SetPlayerStartLocation( Player(6), 6 )
    call ForcePlayerStartLocation( Player(6), 6 )
    call SetPlayerColor( Player(6), ConvertPlayerColor(6) )
    call SetPlayerRacePreference( Player(6), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(6), true )
    call SetPlayerController( Player(6), MAP_CONTROL_USER )

    // Player 7
    call SetPlayerStartLocation( Player(7), 7 )
    call ForcePlayerStartLocation( Player(7), 7 )
    call SetPlayerColor( Player(7), ConvertPlayerColor(7) )
    call SetPlayerRacePreference( Player(7), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(7), true )
    call SetPlayerController( Player(7), MAP_CONTROL_USER )

    // Player 8
    call SetPlayerStartLocation( Player(8), 8 )
    call ForcePlayerStartLocation( Player(8), 8 )
    call SetPlayerColor( Player(8), ConvertPlayerColor(8) )
    call SetPlayerRacePreference( Player(8), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(8), true )
    call SetPlayerController( Player(8), MAP_CONTROL_USER )

    // Player 9
    call SetPlayerStartLocation( Player(9), 9 )
    call ForcePlayerStartLocation( Player(9), 9 )
    call SetPlayerColor( Player(9), ConvertPlayerColor(9) )
    call SetPlayerRacePreference( Player(9), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(9), true )
    call SetPlayerController( Player(9), MAP_CONTROL_USER )

    // Player 10
    call SetPlayerStartLocation( Player(10), 10 )
    call ForcePlayerStartLocation( Player(10), 10 )
    call SetPlayerColor( Player(10), ConvertPlayerColor(10) )
    call SetPlayerRacePreference( Player(10), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(10), true )
    call SetPlayerController( Player(10), MAP_CONTROL_USER )

    // Player 11
    call SetPlayerStartLocation( Player(11), 11 )
    call ForcePlayerStartLocation( Player(11), 11 )
    call SetPlayerColor( Player(11), ConvertPlayerColor(11) )
    call SetPlayerRacePreference( Player(11), RACE_PREF_RANDOM )
    call SetPlayerRaceSelectable( Player(11), true )
    call SetPlayerController( Player(11), MAP_CONTROL_USER )

endfunction

function InitCustomTeams takes nothing returns nothing
    // Force: TRIGSTR_017
    call SetPlayerTeam( Player(0), 0 )
    call SetPlayerState( Player(0), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(4), 0 )
    call SetPlayerState( Player(4), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(8), 0 )
    call SetPlayerState( Player(8), PLAYER_STATE_ALLIED_VICTORY, 1 )

    //   Allied
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(8), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(8), true )
    call SetPlayerAllianceStateAllyBJ( Player(8), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(8), Player(4), true )

    //   Shared Vision
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(8), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(8), true )
    call SetPlayerAllianceStateVisionBJ( Player(8), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(8), Player(4), true )

    // Force: TRIGSTR_018
    call SetPlayerTeam( Player(1), 1 )
    call SetPlayerState( Player(1), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(5), 1 )
    call SetPlayerState( Player(5), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(9), 1 )
    call SetPlayerState( Player(9), PLAYER_STATE_ALLIED_VICTORY, 1 )

    //   Allied
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(5), true )

    //   Shared Vision
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(5), true )

    // Force: TRIGSTR_019
    call SetPlayerTeam( Player(2), 2 )
    call SetPlayerState( Player(2), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(6), 2 )
    call SetPlayerState( Player(6), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(10), 2 )
    call SetPlayerState( Player(10), PLAYER_STATE_ALLIED_VICTORY, 1 )

    //   Allied
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(10), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(10), true )
    call SetPlayerAllianceStateAllyBJ( Player(10), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(10), Player(6), true )

    //   Shared Vision
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(10), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(10), true )
    call SetPlayerAllianceStateVisionBJ( Player(10), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(10), Player(6), true )

    // Force: TRIGSTR_020
    call SetPlayerTeam( Player(3), 3 )
    call SetPlayerState( Player(3), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(7), 3 )
    call SetPlayerState( Player(7), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(11), 3 )
    call SetPlayerState( Player(11), PLAYER_STATE_ALLIED_VICTORY, 1 )

    //   Allied
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(7), true )

    //   Shared Vision
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(11), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(11), true )
    call SetPlayerAllianceStateVisionBJ( Player(11), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(11), Player(7), true )

endfunction

function InitAllyPriorities takes nothing returns nothing

    call SetStartLocPrioCount( 0, 2 )
    call SetStartLocPrio( 0, 0, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 0, 1, 8, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 1, 2 )
    call SetStartLocPrio( 1, 0, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 1, 1, 9, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 2, 2 )
    call SetStartLocPrio( 2, 0, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 1, 10, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 3, 2 )
    call SetStartLocPrio( 3, 0, 7, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 3, 1, 11, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 4, 2 )
    call SetStartLocPrio( 4, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 1, 8, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 5, 2 )
    call SetStartLocPrio( 5, 0, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 5, 1, 9, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 6, 2 )
    call SetStartLocPrio( 6, 0, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 6, 1, 10, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 7, 2 )
    call SetStartLocPrio( 7, 0, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 7, 1, 11, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 8, 2 )
    call SetStartLocPrio( 8, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 8, 1, 4, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 9, 2 )
    call SetStartLocPrio( 9, 0, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 9, 1, 5, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 10, 2 )
    call SetStartLocPrio( 10, 0, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 1, 6, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 11, 2 )
    call SetStartLocPrio( 11, 0, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 11, 1, 7, MAP_LOC_PRIO_LOW )
endfunction

//***************************************************************************
//*
//*  Main Initialization
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    call SetCameraBounds( -7680.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), -7680.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 7680.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 7680.0 - GetCameraMargin(CAMERA_MARGIN_TOP), -7680.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), 7680.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 7680.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), -7680.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM) )
    call SetDayNightModels( "Environment\\DNC\\DNCUnderground\\DNCUndergroundTerrain\\DNCUndergroundTerrain.mdl", "Environment\\DNC\\DNCUnderground\\DNCUndergroundUnit\\DNCUndergroundUnit.mdl" )
    call NewSoundEnvironment( "Default" )
    call SetAmbientDaySound( "DungeonDay" )
    call SetAmbientNightSound( "DungeonNight" )
    call SetMapMusic( "Music", true, 0 )
    call CreateAllUnits(  )
    call InitBlizzard(  )
    call InitGlobals(  )
    call InitCustomTriggers(  )
    call RunInitializationTriggers(  )

endfunction

//***************************************************************************
//*
//*  Map Configuration
//*
//***************************************************************************

function config takes nothing returns nothing
    call SetMapName( "TRIGSTR_001" )
    call SetMapDescription( "TRIGSTR_003" )
    call SetPlayers( 12 )
    call SetTeams( 12 )
    call SetGamePlacement( MAP_PLACEMENT_TEAMS_TOGETHER )

    call DefineStartLocation( 0, 0.0, 4096.0 )
    call DefineStartLocation( 1, -4096.0, 0.0 )
    call DefineStartLocation( 2, 0.0, -4096.0 )
    call DefineStartLocation( 3, 4096.0, 0.0 )
    call DefineStartLocation( 4, -1536.0, 5632.0 )
    call DefineStartLocation( 5, -5632.0, -1536.0 )
    call DefineStartLocation( 6, 1536.0, -5632.0 )
    call DefineStartLocation( 7, 5632.0, 1536.0 )
    call DefineStartLocation( 8, 1536.0, 5632.0 )
    call DefineStartLocation( 9, -5632.0, 1536.0 )
    call DefineStartLocation( 10, -1536.0, -5632.0 )
    call DefineStartLocation( 11, 5632.0, -1536.0 )

    // Player setup
    call InitCustomPlayerSlots(  )
    call InitCustomTeams(  )
    call InitAllyPriorities(  )
endfunction

